{"version":3,"sources":["node_modules/bs-platform/lib/js/caml_builtin_exceptions.js","node_modules/bs-platform/lib/js/caml_array.js","node_modules/bs-platform/lib/js/curry.js","node_modules/bs-platform/lib/js/block.js","node_modules/bs-platform/lib/js/caml_primitive.js","node_modules/bs-platform/lib/js/caml_obj.js","node_modules/process/browser.js","node_modules/bs-platform/lib/js/caml_io.js","node_modules/bs-platform/lib/js/caml_sys.js","node_modules/bs-platform/lib/js/caml_int32.js","node_modules/bs-platform/lib/js/caml_utils.js","node_modules/bs-platform/lib/js/caml_int64.js","node_modules/bs-platform/lib/js/caml_format.js","node_modules/bs-platform/lib/js/caml_string.js","node_modules/bs-platform/lib/js/caml_exceptions.js","node_modules/bs-platform/lib/js/caml_missing_polyfill.js","node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","node_modules/bs-platform/lib/js/pervasives.js","node_modules/bs-platform/lib/js/list.js","src/utils.bs.js","node_modules/bs-platform/lib/js/js_exn.js","node_modules/bs-platform/lib/js/array.js","node_modules/bs-platform/lib/js/int32.js","node_modules/bs-platform/lib/js/int64.js","node_modules/bs-platform/lib/js/char.js","node_modules/bs-platform/lib/js/bytes.js","node_modules/bs-platform/lib/js/string.js","node_modules/bs-platform/lib/js/caml_md5.js","node_modules/bs-platform/lib/js/digest.js","node_modules/bs-platform/lib/js/nativeint.js","node_modules/bs-platform/lib/js/random.js","src/state.bs.js","node_modules/bs-webapi/src/canvas/Canvas2dRe.js","src/render.bs.js","src/index.bs.js"],"names":["process","module","exports","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","Error","defaultClearTimeout","setTimeout","e","clearTimeout","runTimeout","fun","call","runClearTimeout","marker","queue","draining","currentQueue","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","nextTick","args","Array","arguments","i","push","Item","array","prototype","apply","title","browser","env","argv","version","versions","noop","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","List","require","Curry","Caml_int32","LifePng","Caml_builtin_exceptions","Goal_frog_0Png","Frogger_sprites2Png","$less$less","f","g","x","_1","isSome","param","deoptionalize","lst","map","assert_failure","filter","$less$neg$great","j","_n","_acc","acc","n","repeat","s","padWithZeros","str","strlen","find_opt","find","exn","not_found","tileSize","halfTileSize","getRowForY","y","div","getYForRow","row","imul","intersects","rect1","rect2","bottom1","bottom2","top1","top2","left1","left2","right1","right2","isRectOutOfBounds","rect","isRectInBounds","spriteSheet","Image","src","goalSprite","lifeSprite","makeSpriteImage","$staropt$star","$staropt$star$1","xStart","yStart","frames","frameSpeed","width","number","height","yellowCarImage","greenCarImage","pinkCarImage","raceCarImage","whiteTruckImage","threeTurtleImage","divingThreeTurtles","twoTurtleImage","divingTwoTurtles","smallLogImage","mediumLogImage","bigLogImage","frogUp","frogDown","frogLeft","frogRight","rows","cols","Utils","Random","Pervasives","Caml_format","Caml_primitive","match","localStorage","getItem","savedHighScore","caml_int_of_string","pressedKeys","keydown","evt","keyCode","exit","switcher","console","log","xDown","yDown","handleTouchStart","preventDefault","touches","clientX","clientY","handleTouchMove","match$1","xUp","yUp","xDiff","yDiff","abs","window","addEventListener","startWorld_000","startWorld_009","startWorld","endzoneRects","rect_001","secondsPerWidthToPixels","vel","dt","speed","updateObj","obj","nextFrameIndex","nextFrame","init","init$1","isCar","twoTurtleCount","threeTurtleCount","makeLaneObject","laneConfig","direction","img","tmp","getJitter","$$int","getJitterFromNow","Date","now","laneConfig_000","laneConfig_001","updateFrog","world","frog","floatedX","floatieThing","newFrog","distanceToTravel","caml_float_min","match$2","nextRect_000","nextRect_001","nextRect_002","nextRect_003","nextRect","isValid","init$2","rejectUnderWaterTurtles","laneObjects","Math","floor","handleDeathCheck","laneCollisions","hasCarCollision","exists","isInWater","isOutOfBounds","timerIsUp","isDead","newWorld","caml_int_max","handleGameWinCheck","allGoalsFilled","handleEndzoneCheck","intersectsWithFrog","endzoneCollision","matchedI","alreadyFilled","assoc","endzone","findCollisions","collisions","newTmp_001","newTmp","handleScoreUpdate","newFrogRow","score","newWorld_000","newWorld_001","newWorld_002","newWorld_003","newWorld_004","newWorld_006","newWorld_007","newWorld_008","newWorld_009","handleHighScoreCheck","highscore","setItem","String","newWorld_005","shrinkTimer","timer","updateLaneObjects","filterOutOfBounds","movedLaneObjects","o","spawnedLaneObjects","cfg","objects","$at","getWorld","stepWorld","frogAnimationLength","State","Canvas2dRe","windowHeight","innerHeight","windowWidth","innerWidth","drawImage","ctx","image","sourceX","sourceY","sourceWidth","sourceHeight","dx","dy","dWidth","dHeight","drawLaneObject","sprite","frameCalc","startX","iter","drawDyingFrog","leftInAnimation","frame","caml_int_min","ceil","nth","drawFrog","drawStartScreen","setFillStyle","fillRect","font","fillText","undefined","drawWinScreen","drawLoseScreen","drawGoal","drawGrass","drawCars","_cars","cars","drawLives","drawTimer","pixels","drawScore","scoreText","highscoreText","drawCompletedEndzones","drawBoundingBoxes","frogBoxColor","color","setStrokeStyle","strokeRect","drawGrid","beginPath","moveTo","lineTo","stroke","drawBackground","render","magnification","Render","lastTime","gameloop","nextWorld","requestAnimationFrame","load","document","getElementById","canvas","failwith","setAttribute","context","getContext","onload"],"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D;AEvIA,AF0IAN,QAAQ2D,KAAR,GAAgB,YAAW;AEzI3B,AFyI6B,WAAO,CAAP;AExI7B,AFwIwC,CAAxC;AEvIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnmxppOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxnkDA;AACA;ACDA;AACA,ADEA,IAAIC,OAAOC,QAAQ,4BAAR,CAAX;ACDA,ADEA,IAAIC,QAAQD,QAAQ,6B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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChnlfzvpIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxnTA;AACA;ACDA;AACA,ADEA,IAAIvF,OAAOC,QAAQ,4BAAR,CAAX;ACDA,ADEA,IAAIC,QAAQD,QAAQ,6BAAR,CAAZ;ACDA,ADEA,IAAIyF,QAAQzF,QAAQ,eAAR,CAAZ;ACDA,ADEA,IAAI0F,SAAS1F,QAAQ,8BAAR,CAAb;ACDA,ADEA,IAAIE,aAAaF,QAAQ,kCAAR,CAAjB;ACDA,ADEA,IAAI2F,aAAa3F,QAAQ,kCAAR,CAAjB;ACDA,ADEA,IAAI4F,cAAc5F,QAAQ,mCAAR,CAAlB;ACDA,ADEA,IAAI6F,iBAAiB7F,QAAQ,sCAAR,CAArB;ACDA,ADEA,IAAII,0BAA0BJ,QAAQ,+CAAR,CAA9B;ACDA;AACA,ADEA,IAAI8F,QAAQC,aAAaC,OAAb,CAAqB,WAArB,CAAZ;ACDA;AACA,ADEA,IAAIC,iBAAiBH,UAAU,IAAV,GAAiBF,YAAYM,kBAAZ,CAA+BJ,KAA/B,CAAjB,GAAyD,CAA9E;ACDA;AACA,ADEA,IAAIK,cAAc,YAAY;ACD9B,ADEE,sBAAsB,CADM;ACA9B,ADEE,UAAU,KAFkB;ACC9B,ADEE,UAAU,KAHkB,CAA9B;ACEA;AACA,ADGA,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;ACFtB,ADGE,MAAIP,QAAQO,IAAIC,OAAhB;ACFF,ADGE,MAAIC,OAAO,CAAX;ACFF,ADGE,MAAIT,SAAS,EAAb,EAAiB;ACFnB,ADGI,QAAIU,WAAWV,QAAQ,EAAR,GAAa,CAA5B;ACFJ,ADGI,QAAIU,WAAW,EAAX,IAAiBA,WAAW,CAAhC,EAAmC;ACFvC,ADGMD,aAAO,CAAP;ACFN,ADGK,KAFD,MAEO;ACFX,ADGM,cAAQC,QAAR;ACFN,ADGQ,aAAK,CAAL;ACFR,ADGYL,sBAAY,eAAe,CAA3B,IAAgC,UAAU,CAAC,UAAU,CAAX,CAA1C;ACFZ,ADGY,iBAAO,SAAQ;ACF3B,ADEY;ACDZ,ADEQ,aAAK,CAAL;ACDR,ADEYA,sBAAY,UAAU,CAAtB,IAA2B,CAACA,YAAY,UAAU,CAAtB,CAA5B;ACDZ,ADEY,iBAAO,SAAQ;ACD3B,ADCY;ACAZ,ADCQ,aAAK,CAAL;ACAR,ADCYA,sBAAY,eAAe,CAA3B,IAAgC,UAAU,CAAC,WAAW,CAAZ,CAA1C;ACAZ,ADCY,iBAAO,SAAQ;ACA3B,ADAY;ACCZ,ADAQ,aAAK,CAAL;ACCR,ADAYA,sBAAY,UAAU,CAAtB,IAA2B,CAACA,YAAY,UAAU,CAAtB,CAA5B;ACCZ,ADAY,iBAAO,SAAQ;ACC3B,ADDY;ACEZ,ADDQ,aAAK,EAAL;ACER,ADDYA,sBAAY,eAAe,CAA3B,IAAgC,UAAU,CAAC,UAAU,CAAX,CAA1C;ACEZ,ADDY,iBAAO,SAAQ;ACE3B,ADFY;ACGZ,ADFQ,aAAK,CAAL;ACGR,ADFQ,aAAK,CAAL;ACGR,ADFQ,aAAK,CAAL;ACGR,ADFQ,aAAK,CAAL;ACGR,ADFQ,aAAK,CAAL;ACGR,ADFQ,aAAK,CAAL;ACGR,ADFQ,aAAK,EAAL;ACGR,ADFQ,aAAK,EAAL;ACGR,ADFQ,aAAK,EAAL;ACGR,ADFQ,aAAK,EAAL;ACGR,ADFQ,aAAK,EAAL;ACGR,ADFQ,aAAK,EAAL;ACGR,ADFQ,aAAK,EAAL;ACGR,ADFQ,aAAK,EAAL;ACGR,ADFQ,aAAK,EAAL;ACGR,ADFQ,aAAK,EAAL;ACGR,ADFQ,aAAK,EAAL;ACGR,ADFYI,iBAAO,CAAP;ACGZ,ADFY;ACGZ,ADFQ,aAAK,EAAL;ACGR,ADFYJ,sBAAY,eAAe,CAA3B,IAAgC,UAAU,CAAC,QAAQ,CAAT,CAA1C;ACGZ,ADFY,iBAAO,SAAQ;ACG3B,ADHY;ACIZ;AACA,AD1CM;AC2CN,ADHK;ACIL,ADHG,GA9CD,MA8CO,IAAIL,SAAS,EAAb,EAAiB;ACI1B,ADHI,YAAQA,QAAQ,EAAR,GAAa,CAArB;ACIJ,ADHM,WAAK,CAAL;ACIN,ADHM,WAAK,CAAL;ACIN,ADHM,WAAK,CAAL;AACA,WAAK,CAAL;AE7EN,AF8EUS,eAAO,CAAP;AE7EV,AF8EU;AG/EV,AHgFM,WAAK,CAAL;AG/EN,ADEA,AF8EUJ,IE9ENpG,OAAOC,QAAQ,CF8EG,eAAe,CAA3B,IAAgC,OE9E/B,CAAX,EF8EoD,CAAC,UAAU,CAAX,CAA1C;AE7EV,AF8EU,IE9ENkO,QAAQlO,GF8EK,KE9EG,IF8EK,WE9Eb,CAAZ;ACDA,ADEA,AF6EU,IG/ENkO,ADEAzI,QCFQzF,ADEAA,QCFQ,ADEA,eCFR,ADEA,CCFZ,ADEA;ACDA,ADEA,AF6EM,IG/EFyF,ADEAvF,OF6EO,CG/ECF,AH+EN,KE7EWA,GCFG,KDEK,UCFb,CAAZ,uBDEiB,CAAjB;ACDA,ADEA,AF6EM,IG/EFgS,ADEA7D,OF6EO,CAAL,CG/EOnO,IDEIA,ICFI,IDEI,YCFZ,CAAb,uBDEiB,CAAjB;ACDA,ADEA,AF6EUmG,IG/ENR,ADEAE,aCFa7F,GH+EK,CE7EDA,ICFI,IDEI,MF6EQ,CAA3B,IAAgC,UAAU,CAAC,QG/EpC,AH+E4C,CG/E7D,AH+EoD,CAA1C,ME7EW,CAArB;AF8EU,eAAO,SAAQ;AG9EzB,ADEA,AF4EU,IG9ENiS,ADEA7D,WCFW,CAAC/E,GDEG5B,ECFE6B,GAAL,EDEU+E,GCFG,CAAd,CAAf,MDEA;AF6EM,WAAK,CAAL;AG7EN,ADEA,AF4EUlI,IE5ENmI,KCFK4D,QAAT,CAAkBzD,ADEAhH,EF4EI,CG9EtB,EAAuBiC,EDEE6E,GCFzB,EAA8B,KDE9B,AF4EqC,CAA3B,IAAgC,UAAU,CAAC,WAAW,CAAZ,CAA1C;AG7ER,AH8EQ,QG9EJjF,MAAMD,CH8EK,IG9EAC,GAAL,EH8Ea,GG9EA,CAAvB;AACA,ADEF,AF2EU,QG7EJpB,CDEGsG,ICFElF,KDEX,CCFiB2I,ADEExD,GAAnB,EAAwBC,ICFE,CAAT,ADEjB,CCFW,CDEoBC,ECFA,CAA7B,IDEF,EAAwCC,OAAxC,EAAiDC,WAAjD,EAA8DC,YAA9D,EAA4EC,EAA5E,EAAgFC,EAAhF,EAAoFC,MAApF,EAA4FC,OAA5F,EAAqG;ACDnG,ADEAT,AF2EI,ME3EAD,ECFA1I,GH6EK,CAAL,GE3EJ,CCFY4D,ADEEgF,KAAd,CCFkB,CDEGC,OAArB,EAA8BC,CCFD,CAAjB,CAAZ,IDEA,EAAuCC,WAAvC,EAAoDC,YAApD,EAAkEC,EAAlE,EAAsEC,EAAtE,EAA0EC,MAA1E,EAAkFC,OAAlF;ACDA,ADEA,AF2EQ/I,SE3ED,GCFCL,KAAR,CDEe,EF2EK,eAAe,CAA3B,IAAgC,UAAU,CAAC,UAAU,CAAX,CAA1C;AG5EN,ADCF,AF4EQ,aG7ED,CAAL,CH6Ea,SAAQ;AG5EjBkM,ADCP,AF2ES,mBG5EKjC,eAAP,CAAuBtB,GAAvB;AACA;AACJ,ADCJ,AFsDI,SEtDKU,ICDA,CAAL,SDCJ,CAAwBV,GAAxB,EAA6BW,MAA7B,EAAqC;ACA7B4C,ADCN,AF2EC,GAvBM,GEpDH3C,GF2EG,SE3ES1E,CCDHmH,IDCQlH,ECDf,CAAc6D,EDCJ,CCDV,ADCqBW,ECDF1F,KAAnB,ADC4B,gBAAgB,CAAvB,IAA4B,IAAvC,CAAhB;ACAM,ADCN,AF2EEnD,ME3EEyC,KF2EK,CE3ECoG,AF2ER,OE3Ee,SAAS,CAAhB,CAAV;ACAE,ADCF,AF2EC,ME3EGE,OCDG,CAAL,CDCWtG,IAAI,YAAY,CAAhB,IAAqB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QoG,OCRa5B,CDQtB,CAAkBO,GAAlB,CCR4B5G,CDQL8B,IAAvB,EAA6B,GCRP,CAAiB,YAAY,CAA7B,CARM;AASlB,ADQR,MAAI7D,QAAQ6D,CCROuE,IDQF,ECRQrG,UAAN,CAAiB,QDQE,CAA1B,CAAZ,CCR+C,CAA5B,CATO;AAUlB,ADQR,AFkEF,MElEM/B,GFkEGoB,EElEP,EAAW,ICRUgH,MAAMrG,CH0E7B,GAA2B,MG1EJ,CAAiB,aAAa,CAA9B,CAVK,CAAtB,GAWM6B,KAZM,GAaVwE,MAAMF,SAAN,CAAgBtE,KAAhB,EAAuBJ,GAAvB,EAA4BpB,EAA5B,CAbN;AAcA+J,ADME,AFkEAhU,WElEOuR,CFkEG,CGxEH,AHwEP,CGxEF,CHwEe1I,GGxEDuC,KAAKC,EDMImF,CCNT,EDML,CFkEP,CElE0B9E,CCND,AHwE3B,CGxEA,GDMiC,UAAU,CAAf,CAAnB,EAAsC7D,MAAM,CAAN,CAAtC,CAAP;ACLFoI,ADMC,AFkED,GEpEA,GFoEIpI,GElEG,CCNDK,IHwEMQ,MAAM,CGxElB,AHwEY,CGxEM,AHwElB,eGxEiC,CAAjC,IAAsC,UAAU,CAAhD;AACAyL,ADME,AFkEF,MAAIjL,EElEEA,QFkEQP,EElEE+C,IFkEI,CElEC,AFkEP,CAAd,EGxEuB,YAAY,ADMC,CAApB,CAAd;ACLM,ADMN,AFkEF,MAAI7D,EElEEkD,GAAJ,ICNakJ,AHwEF/K,OAAb,EGxEwBsH,AHwEF,GGxEP,EAAc0D,SAAd,CAAP;AACD,ADML,AFkEA,KG1EF,GH0EM/K,IElEID,EFkEGlJ,KElEX,KFkEqB,CAAV,EAAa8I,OAAb,CAAqB,CAArB,EAAwBC,OAAnC;AGvEF,ADMI,AFkEF,QAAIK,GGxEC,ADME,CAAL,EFkESpJ,MGxEE,IHwEQ,CAAV,EAAa8I,OAAb,CAAqB,CAArB,EAAwBE,OAAnC;AGxEF,ADOQ+B,AFkEN,QAAI1B,MElEQ7B,EFkEAK,IElEMT,EFkEA,CAAN,IAAW+B,CElEjB,EFkEM,GAAiB,CAA7B;AGxEH,ADOS,AFkEN,QAAIG,QAAQJ,QAAQ,CAAR,IAAaE,GAAb,GAAmB,CAA/B;AEjEE,AFkEF,QA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3ItB;AACAjS,AF6IY,QE7IJ0V,WF6IuB3I,EE7I/B,GAAwB2I,aAAxB,AF6IgD,QAAQ,CAAzB,CAHT;AEzItB1V,AF6IY,QE7IJmS,SAAR,EF6I+B,CE7IXA,AFyIE,SEzItB;AACAnS,AF6IY,QE7IJ8S,CF6Ia1J,MAAMd,OE7I3B,GAAyBwK,KFwIH,CAFH,CADL,OErId;AACA9S,AF+IQ,QE/IAmT,AF+IQ,aE/IhB,GAAwBA,aAAxB;AACAnT,AF+IU,QE/IFyT,GF+Ia,CACT,CADS,GE/IrB,GAAmBA,QAAnB;AACAzT,AFgJY,QEhJJ0T,IFgJgB,WEhJxB,GAA0BA,eAA1B;AACA1T,AFgJc,QEhJNgU,MFgJoB,CAAC,EADL,IE/IxB,GAAwBA,aAAxB;AACAhU,AFgJc,QEhJNiU,cAAR,AFgJoC,CAFZ,EE9ICA,cAAzB;AACAjU,AFgJc,QEhJNkU,QAAR,GAAmBA,AFgJcnH,QEhJjC,UFgJkD,QAAQ,CAAzB,CAHT;AE5IxB/M,AFgJc,QEhJNmU,SAAR,GAAoBA,QFgJsB,CEhJ1C,AF4IwB;AE3IxBnU,AFgJc,QEhJNoU,CFgJehL,MAAMb,CEhJ7B,GAAmB6L,QAAnB,IF2IwB,CAFH,CADL;AEvIhBpU,AFkJU,QElJFuU,AFkJU,SElJlB,GAAoBA,SAApB;AACAvU,AFkJY,QElJJwU,GFkJe,CACT,EADS,GElJvB,GAAoBA,SAApB;AACAxU,AFmJc,QEnJN0U,IFmJkB,KEnJ1B,GAAoBA,SAApB;AACA1U,AFmJgB,QEnJR6U,MFmJsB,CADJ,cElJ1B,GAAgCA,qBAAhC;AACA7U,AFmJgB,QEnJR8U,cFmJ8B,CAFZ,EEjJ1B,GAA4BA,iBAA5B;AACA9U,AFmJgB,QEnJRmV,QAAR,GAAmBA,AFmJgBpI,QEnJnC,UFmJoD,QAAQ,CAAzB,CAHT;AE/I1B/M,AFmJgB,QEnJRwV,cAAR,GAAyBA,GFmJmB,CAJlB,UE/I1B;AACAxV,AFmJgB,QEnJRyV,CFmJiBrM,KEnJzB,CFmJ+BT,EEnJd8M,MAAjB,KF8I0B,CAFH,CADL;AE1IlB,AFqJY,QAAQ;AACN,WAAW,CACT,EADS;AAET,YAAY;AACV,cAAc,CAD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","file":"index.bs.d4877181.map","sourceRoot":"..","sourcesContent":["'use strict';\n\n\nvar out_of_memory = /* tuple */[\n  \"Out_of_memory\",\n  0\n];\n\nvar sys_error = /* tuple */[\n  \"Sys_error\",\n  -1\n];\n\nvar failure = /* tuple */[\n  \"Failure\",\n  -2\n];\n\nvar invalid_argument = /* tuple */[\n  \"Invalid_argument\",\n  -3\n];\n\nvar end_of_file = /* tuple */[\n  \"End_of_file\",\n  -4\n];\n\nvar division_by_zero = /* tuple */[\n  \"Division_by_zero\",\n  -5\n];\n\nvar not_found = /* tuple */[\n  \"Not_found\",\n  -6\n];\n\nvar match_failure = /* tuple */[\n  \"Match_failure\",\n  -7\n];\n\nvar stack_overflow = /* tuple */[\n  \"Stack_overflow\",\n  -8\n];\n\nvar sys_blocked_io = /* tuple */[\n  \"Sys_blocked_io\",\n  -9\n];\n\nvar assert_failure = /* tuple */[\n  \"Assert_failure\",\n  -10\n];\n\nvar undefined_recursive_module = /* tuple */[\n  \"Undefined_recursive_module\",\n  -11\n];\n\nout_of_memory.tag = 248;\n\nsys_error.tag = 248;\n\nfailure.tag = 248;\n\ninvalid_argument.tag = 248;\n\nend_of_file.tag = 248;\n\ndivision_by_zero.tag = 248;\n\nnot_found.tag = 248;\n\nmatch_failure.tag = 248;\n\nstack_overflow.tag = 248;\n\nsys_blocked_io.tag = 248;\n\nassert_failure.tag = 248;\n\nundefined_recursive_module.tag = 248;\n\nexports.out_of_memory = out_of_memory;\nexports.sys_error = sys_error;\nexports.failure = failure;\nexports.invalid_argument = invalid_argument;\nexports.end_of_file = end_of_file;\nexports.division_by_zero = division_by_zero;\nexports.not_found = not_found;\nexports.match_failure = match_failure;\nexports.stack_overflow = stack_overflow;\nexports.sys_blocked_io = sys_blocked_io;\nexports.assert_failure = assert_failure;\nexports.undefined_recursive_module = undefined_recursive_module;\n/*  Not a pure module */\n","'use strict';\n\nvar Caml_builtin_exceptions = require(\"./caml_builtin_exceptions.js\");\n\nfunction caml_array_sub(x, offset, len) {\n  var result = new Array(len);\n  var j = 0;\n  var i = offset;\n  while(j < len) {\n    result[j] = x[i];\n    j = j + 1 | 0;\n    i = i + 1 | 0;\n  };\n  return result;\n}\n\nfunction len(_acc, _l) {\n  while(true) {\n    var l = _l;\n    var acc = _acc;\n    if (l) {\n      _l = l[1];\n      _acc = l[0].length + acc | 0;\n      continue ;\n    } else {\n      return acc;\n    }\n  };\n}\n\nfunction fill(arr, _i, _l) {\n  while(true) {\n    var l = _l;\n    var i = _i;\n    if (l) {\n      var x = l[0];\n      var l$1 = x.length;\n      var k = i;\n      var j = 0;\n      while(j < l$1) {\n        arr[k] = x[j];\n        k = k + 1 | 0;\n        j = j + 1 | 0;\n      };\n      _l = l[1];\n      _i = k;\n      continue ;\n    } else {\n      return /* () */0;\n    }\n  };\n}\n\nfunction caml_array_concat(l) {\n  var v = len(0, l);\n  var result = new Array(v);\n  fill(result, 0, l);\n  return result;\n}\n\nfunction caml_array_set(xs, index, newval) {\n  if (index < 0 || index >= xs.length) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"index out of bounds\"\n        ];\n  } else {\n    xs[index] = newval;\n    return /* () */0;\n  }\n}\n\nfunction caml_array_get(xs, index) {\n  if (index < 0 || index >= xs.length) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"index out of bounds\"\n        ];\n  } else {\n    return xs[index];\n  }\n}\n\nfunction caml_make_vect(len, init) {\n  var b = new Array(len);\n  for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n    b[i] = init;\n  }\n  return b;\n}\n\nfunction caml_make_float_vect(len) {\n  var b = new Array(len);\n  for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n    b[i] = 0;\n  }\n  return b;\n}\n\nfunction caml_array_blit(a1, i1, a2, i2, len) {\n  if (i2 <= i1) {\n    for(var j = 0 ,j_finish = len - 1 | 0; j <= j_finish; ++j){\n      a2[j + i2 | 0] = a1[j + i1 | 0];\n    }\n    return /* () */0;\n  } else {\n    for(var j$1 = len - 1 | 0; j$1 >= 0; --j$1){\n      a2[j$1 + i2 | 0] = a1[j$1 + i1 | 0];\n    }\n    return /* () */0;\n  }\n}\n\nfunction caml_array_dup(prim) {\n  return prim.slice(0);\n}\n\nexports.caml_array_dup = caml_array_dup;\nexports.caml_array_sub = caml_array_sub;\nexports.caml_array_concat = caml_array_concat;\nexports.caml_make_vect = caml_make_vect;\nexports.caml_make_float_vect = caml_make_float_vect;\nexports.caml_array_blit = caml_array_blit;\nexports.caml_array_get = caml_array_get;\nexports.caml_array_set = caml_array_set;\n/* No side effect */\n","'use strict';\n\nvar Caml_array = require(\"./caml_array.js\");\n\nfunction app(_f, _args) {\n  while(true) {\n    var args = _args;\n    var f = _f;\n    var arity = f.length;\n    var arity$1 = arity === 0 ? 1 : arity;\n    var len = args.length;\n    var d = arity$1 - len | 0;\n    if (d === 0) {\n      return f.apply(null, args);\n    } else if (d < 0) {\n      _args = Caml_array.caml_array_sub(args, arity$1, -d | 0);\n      _f = f.apply(null, Caml_array.caml_array_sub(args, 0, arity$1));\n      continue ;\n    } else {\n      return (function(f,args){\n      return function (x) {\n        return app(f, args.concat(/* array */[x]));\n      }\n      }(f,args));\n    }\n  };\n}\n\nfunction curry_1(o, a0, arity) {\n  if (arity > 7 || arity < 0) {\n    return app(o, /* array */[a0]);\n  } else {\n    switch (arity) {\n      case 0 : \n      case 1 : \n          return o(a0);\n      case 2 : \n          return (function (param) {\n              return o(a0, param);\n            });\n      case 3 : \n          return (function (param, param$1) {\n              return o(a0, param, param$1);\n            });\n      case 4 : \n          return (function (param, param$1, param$2) {\n              return o(a0, param, param$1, param$2);\n            });\n      case 5 : \n          return (function (param, param$1, param$2, param$3) {\n              return o(a0, param, param$1, param$2, param$3);\n            });\n      case 6 : \n          return (function (param, param$1, param$2, param$3, param$4) {\n              return o(a0, param, param$1, param$2, param$3, param$4);\n            });\n      case 7 : \n          return (function (param, param$1, param$2, param$3, param$4, param$5) {\n              return o(a0, param, param$1, param$2, param$3, param$4, param$5);\n            });\n      \n    }\n  }\n}\n\nfunction _1(o, a0) {\n  var arity = o.length;\n  if (arity === 1) {\n    return o(a0);\n  } else {\n    return curry_1(o, a0, arity);\n  }\n}\n\nfunction __1(o) {\n  var arity = o.length;\n  if (arity === 1) {\n    return o;\n  } else {\n    return (function (a0) {\n        return _1(o, a0);\n      });\n  }\n}\n\nfunction curry_2(o, a0, a1, arity) {\n  if (arity > 7 || arity < 0) {\n    return app(o, /* array */[\n                a0,\n                a1\n              ]);\n  } else {\n    switch (arity) {\n      case 0 : \n      case 1 : \n          return app(o(a0), /* array */[a1]);\n      case 2 : \n          return o(a0, a1);\n      case 3 : \n          return (function (param) {\n              return o(a0, a1, param);\n            });\n      case 4 : \n          return (function (param, param$1) {\n              return o(a0, a1, param, param$1);\n            });\n      case 5 : \n          return (function (param, param$1, param$2) {\n              return o(a0, a1, param, param$1, param$2);\n            });\n      case 6 : \n          return (function (param, param$1, param$2, param$3) {\n              return o(a0, a1, param, param$1, param$2, param$3);\n            });\n      case 7 : \n          return (function (param, param$1, param$2, param$3, param$4) {\n              return o(a0, a1, param, param$1, param$2, param$3, param$4);\n            });\n      \n    }\n  }\n}\n\nfunction _2(o, a0, a1) {\n  var arity = o.length;\n  if (arity === 2) {\n    return o(a0, a1);\n  } else {\n    return curry_2(o, a0, a1, arity);\n  }\n}\n\nfunction __2(o) {\n  var arity = o.length;\n  if (arity === 2) {\n    return o;\n  } else {\n    return (function (a0, a1) {\n        return _2(o, a0, a1);\n      });\n  }\n}\n\nfunction curry_3(o, a0, a1, a2, arity) {\n  var exit = 0;\n  if (arity > 7 || arity < 0) {\n    return app(o, /* array */[\n                a0,\n                a1,\n                a2\n              ]);\n  } else {\n    switch (arity) {\n      case 0 : \n      case 1 : \n          exit = 1;\n          break;\n      case 2 : \n          return app(o(a0, a1), /* array */[a2]);\n      case 3 : \n          return o(a0, a1, a2);\n      case 4 : \n          return (function (param) {\n              return o(a0, a1, a2, param);\n            });\n      case 5 : \n          return (function (param, param$1) {\n              return o(a0, a1, a2, param, param$1);\n            });\n      case 6 : \n          return (function (param, param$1, param$2) {\n              return o(a0, a1, a2, param, param$1, param$2);\n            });\n      case 7 : \n          return (function (param, param$1, param$2, param$3) {\n              return o(a0, a1, a2, param, param$1, param$2, param$3);\n            });\n      \n    }\n  }\n  if (exit === 1) {\n    return app(o(a0), /* array */[\n                a1,\n                a2\n              ]);\n  }\n  \n}\n\nfunction _3(o, a0, a1, a2) {\n  var arity = o.length;\n  if (arity === 3) {\n    return o(a0, a1, a2);\n  } else {\n    return curry_3(o, a0, a1, a2, arity);\n  }\n}\n\nfunction __3(o) {\n  var arity = o.length;\n  if (arity === 3) {\n    return o;\n  } else {\n    return (function (a0, a1, a2) {\n        return _3(o, a0, a1, a2);\n      });\n  }\n}\n\nfunction curry_4(o, a0, a1, a2, a3, arity) {\n  var exit = 0;\n  if (arity > 7 || arity < 0) {\n    return app(o, /* array */[\n                a0,\n                a1,\n                a2,\n                a3\n              ]);\n  } else {\n    switch (arity) {\n      case 0 : \n      case 1 : \n          exit = 1;\n          break;\n      case 2 : \n          return app(o(a0, a1), /* array */[\n                      a2,\n                      a3\n                    ]);\n      case 3 : \n          return app(o(a0, a1, a2), /* array */[a3]);\n      case 4 : \n          return o(a0, a1, a2, a3);\n      case 5 : \n          return (function (param) {\n              return o(a0, a1, a2, a3, param);\n            });\n      case 6 : \n          return (function (param, param$1) {\n              return o(a0, a1, a2, a3, param, param$1);\n            });\n      case 7 : \n          return (function (param, param$1, param$2) {\n              return o(a0, a1, a2, a3, param, param$1, param$2);\n            });\n      \n    }\n  }\n  if (exit === 1) {\n    return app(o(a0), /* array */[\n                a1,\n                a2,\n                a3\n              ]);\n  }\n  \n}\n\nfunction _4(o, a0, a1, a2, a3) {\n  var arity = o.length;\n  if (arity === 4) {\n    return o(a0, a1, a2, a3);\n  } else {\n    return curry_4(o, a0, a1, a2, a3, arity);\n  }\n}\n\nfunction __4(o) {\n  var arity = o.length;\n  if (arity === 4) {\n    return o;\n  } else {\n    return (function (a0, a1, a2, a3) {\n        return _4(o, a0, a1, a2, a3);\n      });\n  }\n}\n\nfunction curry_5(o, a0, a1, a2, a3, a4, arity) {\n  var exit = 0;\n  if (arity > 7 || arity < 0) {\n    return app(o, /* array */[\n                a0,\n                a1,\n                a2,\n                a3,\n                a4\n              ]);\n  } else {\n    switch (arity) {\n      case 0 : \n      case 1 : \n          exit = 1;\n          break;\n      case 2 : \n          return app(o(a0, a1), /* array */[\n                      a2,\n                      a3,\n                      a4\n                    ]);\n      case 3 : \n          return app(o(a0, a1, a2), /* array */[\n                      a3,\n                      a4\n                    ]);\n      case 4 : \n          return app(o(a0, a1, a2, a3), /* array */[a4]);\n      case 5 : \n          return o(a0, a1, a2, a3, a4);\n      case 6 : \n          return (function (param) {\n              return o(a0, a1, a2, a3, a4, param);\n            });\n      case 7 : \n          return (function (param, param$1) {\n              return o(a0, a1, a2, a3, a4, param, param$1);\n            });\n      \n    }\n  }\n  if (exit === 1) {\n    return app(o(a0), /* array */[\n                a1,\n                a2,\n                a3,\n                a4\n              ]);\n  }\n  \n}\n\nfunction _5(o, a0, a1, a2, a3, a4) {\n  var arity = o.length;\n  if (arity === 5) {\n    return o(a0, a1, a2, a3, a4);\n  } else {\n    return curry_5(o, a0, a1, a2, a3, a4, arity);\n  }\n}\n\nfunction __5(o) {\n  var arity = o.length;\n  if (arity === 5) {\n    return o;\n  } else {\n    return (function (a0, a1, a2, a3, a4) {\n        return _5(o, a0, a1, a2, a3, a4);\n      });\n  }\n}\n\nfunction curry_6(o, a0, a1, a2, a3, a4, a5, arity) {\n  var exit = 0;\n  if (arity > 7 || arity < 0) {\n    return app(o, /* array */[\n                a0,\n                a1,\n                a2,\n                a3,\n                a4,\n                a5\n              ]);\n  } else {\n    switch (arity) {\n      case 0 : \n      case 1 : \n          exit = 1;\n          break;\n      case 2 : \n          return app(o(a0, a1), /* array */[\n                      a2,\n                      a3,\n                      a4,\n                      a5\n                    ]);\n      case 3 : \n          return app(o(a0, a1, a2), /* array */[\n                      a3,\n                      a4,\n                      a5\n                    ]);\n      case 4 : \n          return app(o(a0, a1, a2, a3), /* array */[\n                      a4,\n                      a5\n                    ]);\n      case 5 : \n          return app(o(a0, a1, a2, a3, a4), /* array */[a5]);\n      case 6 : \n          return o(a0, a1, a2, a3, a4, a5);\n      case 7 : \n          return (function (param) {\n              return o(a0, a1, a2, a3, a4, a5, param);\n            });\n      \n    }\n  }\n  if (exit === 1) {\n    return app(o(a0), /* array */[\n                a1,\n                a2,\n                a3,\n                a4,\n                a5\n              ]);\n  }\n  \n}\n\nfunction _6(o, a0, a1, a2, a3, a4, a5) {\n  var arity = o.length;\n  if (arity === 6) {\n    return o(a0, a1, a2, a3, a4, a5);\n  } else {\n    return curry_6(o, a0, a1, a2, a3, a4, a5, arity);\n  }\n}\n\nfunction __6(o) {\n  var arity = o.length;\n  if (arity === 6) {\n    return o;\n  } else {\n    return (function (a0, a1, a2, a3, a4, a5) {\n        return _6(o, a0, a1, a2, a3, a4, a5);\n      });\n  }\n}\n\nfunction curry_7(o, a0, a1, a2, a3, a4, a5, a6, arity) {\n  var exit = 0;\n  if (arity > 7 || arity < 0) {\n    return app(o, /* array */[\n                a0,\n                a1,\n                a2,\n                a3,\n                a4,\n                a5,\n                a6\n              ]);\n  } else {\n    switch (arity) {\n      case 0 : \n      case 1 : \n          exit = 1;\n          break;\n      case 2 : \n          return app(o(a0, a1), /* array */[\n                      a2,\n                      a3,\n                      a4,\n                      a5,\n                      a6\n                    ]);\n      case 3 : \n          return app(o(a0, a1, a2), /* array */[\n                      a3,\n                      a4,\n                      a5,\n                      a6\n                    ]);\n      case 4 : \n          return app(o(a0, a1, a2, a3), /* array */[\n                      a4,\n                      a5,\n                      a6\n                    ]);\n      case 5 : \n          return app(o(a0, a1, a2, a3, a4), /* array */[\n                      a5,\n                      a6\n                    ]);\n      case 6 : \n          return app(o(a0, a1, a2, a3, a4, a5), /* array */[a6]);\n      case 7 : \n          return o(a0, a1, a2, a3, a4, a5, a6);\n      \n    }\n  }\n  if (exit === 1) {\n    return app(o(a0), /* array */[\n                a1,\n                a2,\n                a3,\n                a4,\n                a5,\n                a6\n              ]);\n  }\n  \n}\n\nfunction _7(o, a0, a1, a2, a3, a4, a5, a6) {\n  var arity = o.length;\n  if (arity === 7) {\n    return o(a0, a1, a2, a3, a4, a5, a6);\n  } else {\n    return curry_7(o, a0, a1, a2, a3, a4, a5, a6, arity);\n  }\n}\n\nfunction __7(o) {\n  var arity = o.length;\n  if (arity === 7) {\n    return o;\n  } else {\n    return (function (a0, a1, a2, a3, a4, a5, a6) {\n        return _7(o, a0, a1, a2, a3, a4, a5, a6);\n      });\n  }\n}\n\nfunction curry_8(o, a0, a1, a2, a3, a4, a5, a6, a7, arity) {\n  var exit = 0;\n  if (arity > 7 || arity < 0) {\n    return app(o, /* array */[\n                a0,\n                a1,\n                a2,\n                a3,\n                a4,\n                a5,\n                a6,\n                a7\n              ]);\n  } else {\n    switch (arity) {\n      case 0 : \n      case 1 : \n          exit = 1;\n          break;\n      case 2 : \n          return app(o(a0, a1), /* array */[\n                      a2,\n                      a3,\n                      a4,\n                      a5,\n                      a6,\n                      a7\n                    ]);\n      case 3 : \n          return app(o(a0, a1, a2), /* array */[\n                      a3,\n                      a4,\n                      a5,\n                      a6,\n                      a7\n                    ]);\n      case 4 : \n          return app(o(a0, a1, a2, a3), /* array */[\n                      a4,\n                      a5,\n                      a6,\n                      a7\n                    ]);\n      case 5 : \n          return app(o(a0, a1, a2, a3, a4), /* array */[\n                      a5,\n                      a6,\n                      a7\n                    ]);\n      case 6 : \n          return app(o(a0, a1, a2, a3, a4, a5), /* array */[\n                      a6,\n                      a7\n                    ]);\n      case 7 : \n          return app(o(a0, a1, a2, a3, a4, a5, a6), /* array */[a7]);\n      \n    }\n  }\n  if (exit === 1) {\n    return app(o(a0), /* array */[\n                a1,\n                a2,\n                a3,\n                a4,\n                a5,\n                a6,\n                a7\n              ]);\n  }\n  \n}\n\nfunction _8(o, a0, a1, a2, a3, a4, a5, a6, a7) {\n  var arity = o.length;\n  if (arity === 8) {\n    return o(a0, a1, a2, a3, a4, a5, a6, a7);\n  } else {\n    return curry_8(o, a0, a1, a2, a3, a4, a5, a6, a7, arity);\n  }\n}\n\nfunction __8(o) {\n  var arity = o.length;\n  if (arity === 8) {\n    return o;\n  } else {\n    return (function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return _8(o, a0, a1, a2, a3, a4, a5, a6, a7);\n      });\n  }\n}\n\nexports.app = app;\nexports.curry_1 = curry_1;\nexports._1 = _1;\nexports.__1 = __1;\nexports.curry_2 = curry_2;\nexports._2 = _2;\nexports.__2 = __2;\nexports.curry_3 = curry_3;\nexports._3 = _3;\nexports.__3 = __3;\nexports.curry_4 = curry_4;\nexports._4 = _4;\nexports.__4 = __4;\nexports.curry_5 = curry_5;\nexports._5 = _5;\nexports.__5 = __5;\nexports.curry_6 = curry_6;\nexports._6 = _6;\nexports.__6 = __6;\nexports.curry_7 = curry_7;\nexports._7 = _7;\nexports.__7 = __7;\nexports.curry_8 = curry_8;\nexports._8 = _8;\nexports.__8 = __8;\n/* No side effect */\n","'use strict';\n\n\nfunction __(tag, block) {\n  block.tag = tag;\n  return block;\n}\n\nexports.__ = __;\n/* No side effect */\n","'use strict';\n\n\nfunction caml_int_compare(x, y) {\n  if (x < y) {\n    return -1;\n  } else if (x === y) {\n    return 0;\n  } else {\n    return 1;\n  }\n}\n\nfunction caml_bool_compare(x, y) {\n  if (x) {\n    if (y) {\n      return 0;\n    } else {\n      return 1;\n    }\n  } else if (y) {\n    return -1;\n  } else {\n    return 0;\n  }\n}\n\nfunction caml_float_compare(x, y) {\n  if (x === y) {\n    return 0;\n  } else if (x < y) {\n    return -1;\n  } else if (x > y || x === x) {\n    return 1;\n  } else if (y === y) {\n    return -1;\n  } else {\n    return 0;\n  }\n}\n\nfunction caml_string_compare(s1, s2) {\n  if (s1 === s2) {\n    return 0;\n  } else if (s1 < s2) {\n    return -1;\n  } else {\n    return 1;\n  }\n}\n\nfunction caml_bool_min(x, y) {\n  if (x) {\n    return y;\n  } else {\n    return x;\n  }\n}\n\nfunction caml_int_min(x, y) {\n  if (x < y) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nfunction caml_float_min(x, y) {\n  if (x < y) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nfunction caml_string_min(x, y) {\n  if (x < y) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nfunction caml_nativeint_min(x, y) {\n  if (x < y) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nfunction caml_int32_min(x, y) {\n  if (x < y) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nfunction caml_bool_max(x, y) {\n  if (x) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nfunction caml_int_max(x, y) {\n  if (x > y) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nfunction caml_float_max(x, y) {\n  if (x > y) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nfunction caml_string_max(x, y) {\n  if (x > y) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nfunction caml_nativeint_max(x, y) {\n  if (x > y) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nfunction caml_int32_max(x, y) {\n  if (x > y) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nvar caml_nativeint_compare = caml_int_compare;\n\nvar caml_int32_compare = caml_int_compare;\n\nexports.caml_int_compare = caml_int_compare;\nexports.caml_bool_compare = caml_bool_compare;\nexports.caml_float_compare = caml_float_compare;\nexports.caml_nativeint_compare = caml_nativeint_compare;\nexports.caml_string_compare = caml_string_compare;\nexports.caml_int32_compare = caml_int32_compare;\nexports.caml_bool_min = caml_bool_min;\nexports.caml_int_min = caml_int_min;\nexports.caml_float_min = caml_float_min;\nexports.caml_string_min = caml_string_min;\nexports.caml_nativeint_min = caml_nativeint_min;\nexports.caml_int32_min = caml_int32_min;\nexports.caml_bool_max = caml_bool_max;\nexports.caml_int_max = caml_int_max;\nexports.caml_float_max = caml_float_max;\nexports.caml_string_max = caml_string_max;\nexports.caml_nativeint_max = caml_nativeint_max;\nexports.caml_int32_max = caml_int32_max;\n/* No side effect */\n","'use strict';\n\nvar Block = require(\"./block.js\");\nvar Caml_primitive = require(\"./caml_primitive.js\");\nvar Caml_builtin_exceptions = require(\"./caml_builtin_exceptions.js\");\n\nfunction caml_obj_block(tag, size) {\n  var v = new Array(size);\n  v.tag = tag;\n  return v;\n}\n\nfunction caml_obj_dup(x) {\n  var len = x.length | 0;\n  var v = new Array(len);\n  for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n    v[i] = x[i];\n  }\n  v.tag = x.tag | 0;\n  return v;\n}\n\nfunction caml_obj_truncate(x, new_size) {\n  var len = x.length | 0;\n  if (new_size <= 0 || new_size > len) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Obj.truncate\"\n        ];\n  } else if (len !== new_size) {\n    for(var i = new_size ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n      x[i] = 0;\n    }\n    x.length = new_size;\n    return /* () */0;\n  } else {\n    return 0;\n  }\n}\n\nfunction caml_lazy_make_forward(x) {\n  return Block.__(250, [x]);\n}\n\nfunction caml_update_dummy(x, y) {\n  var len = y.length | 0;\n  for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n    x[i] = y[i];\n  }\n  var y_tag = y.tag | 0;\n  if (y_tag !== 0) {\n    x.tag = y_tag;\n    return /* () */0;\n  } else {\n    return 0;\n  }\n}\n\nvar for_in = function (o,foo){\n        for (var x in o) { foo(x) }\n      };\n\nfunction caml_compare(_a, _b) {\n  while(true) {\n    var b = _b;\n    var a = _a;\n    if (a === b) {\n      return 0;\n    } else {\n      var a_type = typeof a;\n      var b_type = typeof b;\n      if (a_type === \"string\") {\n        return Caml_primitive.caml_string_compare(a, b);\n      } else {\n        var is_a_number = a_type === \"number\";\n        var is_b_number = b_type === \"number\";\n        if (is_a_number) {\n          if (is_b_number) {\n            return Caml_primitive.caml_int_compare(a, b);\n          } else {\n            return -1;\n          }\n        } else if (is_b_number) {\n          return 1;\n        } else if (a_type === \"boolean\" || a_type === \"undefined\" || a === null) {\n          var x = a;\n          var y = b;\n          if (x === y) {\n            return 0;\n          } else if (x < y) {\n            return -1;\n          } else {\n            return 1;\n          }\n        } else if (a_type === \"function\" || b_type === \"function\") {\n          throw [\n                Caml_builtin_exceptions.invalid_argument,\n                \"compare: functional value\"\n              ];\n        } else {\n          var tag_a = a.tag | 0;\n          var tag_b = b.tag | 0;\n          if (tag_a === 250) {\n            _a = a[0];\n            continue ;\n          } else if (tag_b === 250) {\n            _b = b[0];\n            continue ;\n          } else if (tag_a === 248) {\n            return Caml_primitive.caml_int_compare(a[1], b[1]);\n          } else if (tag_a === 251) {\n            throw [\n                  Caml_builtin_exceptions.invalid_argument,\n                  \"equal: abstract value\"\n                ];\n          } else if (tag_a !== tag_b) {\n            if (tag_a < tag_b) {\n              return -1;\n            } else {\n              return 1;\n            }\n          } else {\n            var len_a = a.length | 0;\n            var len_b = b.length | 0;\n            if (len_a === len_b) {\n              if (Array.isArray(a)) {\n                var a$1 = a;\n                var b$1 = b;\n                var _i = 0;\n                var same_length = len_a;\n                while(true) {\n                  var i = _i;\n                  if (i === same_length) {\n                    return 0;\n                  } else {\n                    var res = caml_compare(a$1[i], b$1[i]);\n                    if (res !== 0) {\n                      return res;\n                    } else {\n                      _i = i + 1 | 0;\n                      continue ;\n                    }\n                  }\n                };\n              } else {\n                var a$2 = a;\n                var b$2 = b;\n                var min_key_lhs = [/* None */0];\n                var min_key_rhs = [/* None */0];\n                var do_key = function (param, key) {\n                  var min_key = param[2];\n                  var b = param[1];\n                  if (!b.hasOwnProperty(key) || caml_compare(param[0][key], b[key]) > 0) {\n                    var match = min_key[0];\n                    if (match) {\n                      if (key < match[0]) {\n                        min_key[0] = /* Some */[key];\n                        return /* () */0;\n                      } else {\n                        return 0;\n                      }\n                    } else {\n                      min_key[0] = /* Some */[key];\n                      return /* () */0;\n                    }\n                  } else {\n                    return 0;\n                  }\n                };\n                var partial_arg = /* tuple */[\n                  a$2,\n                  b$2,\n                  min_key_rhs\n                ];\n                var do_key_a = (function(partial_arg){\n                return function do_key_a(param) {\n                  return do_key(partial_arg, param);\n                }\n                }(partial_arg));\n                var partial_arg$1 = /* tuple */[\n                  b$2,\n                  a$2,\n                  min_key_lhs\n                ];\n                var do_key_b = (function(partial_arg$1){\n                return function do_key_b(param) {\n                  return do_key(partial_arg$1, param);\n                }\n                }(partial_arg$1));\n                for_in(a$2, do_key_a);\n                for_in(b$2, do_key_b);\n                var match = min_key_lhs[0];\n                var match$1 = min_key_rhs[0];\n                if (match) {\n                  if (match$1) {\n                    return Caml_primitive.caml_string_compare(match[0], match$1[0]);\n                  } else {\n                    return -1;\n                  }\n                } else if (match$1) {\n                  return 1;\n                } else {\n                  return 0;\n                }\n              }\n            } else if (len_a < len_b) {\n              var a$3 = a;\n              var b$3 = b;\n              var _i$1 = 0;\n              var short_length = len_a;\n              while(true) {\n                var i$1 = _i$1;\n                if (i$1 === short_length) {\n                  return -1;\n                } else {\n                  var res$1 = caml_compare(a$3[i$1], b$3[i$1]);\n                  if (res$1 !== 0) {\n                    return res$1;\n                  } else {\n                    _i$1 = i$1 + 1 | 0;\n                    continue ;\n                  }\n                }\n              };\n            } else {\n              var a$4 = a;\n              var b$4 = b;\n              var _i$2 = 0;\n              var short_length$1 = len_b;\n              while(true) {\n                var i$2 = _i$2;\n                if (i$2 === short_length$1) {\n                  return 1;\n                } else {\n                  var res$2 = caml_compare(a$4[i$2], b$4[i$2]);\n                  if (res$2 !== 0) {\n                    return res$2;\n                  } else {\n                    _i$2 = i$2 + 1 | 0;\n                    continue ;\n                  }\n                }\n              };\n            }\n          }\n        }\n      }\n    }\n  };\n}\n\nfunction caml_equal(_a, _b) {\n  while(true) {\n    var b = _b;\n    var a = _a;\n    if (a === b) {\n      return true;\n    } else {\n      var a_type = typeof a;\n      if (a_type === \"string\" || a_type === \"number\" || a_type === \"boolean\" || a_type === \"undefined\" || a === null) {\n        return false;\n      } else {\n        var b_type = typeof b;\n        if (a_type === \"function\" || b_type === \"function\") {\n          throw [\n                Caml_builtin_exceptions.invalid_argument,\n                \"equal: functional value\"\n              ];\n        } else if (b_type === \"number\" || b_type === \"undefined\" || b === null) {\n          return false;\n        } else {\n          var tag_a = a.tag | 0;\n          var tag_b = b.tag | 0;\n          if (tag_a === 250) {\n            _a = a[0];\n            continue ;\n          } else if (tag_b === 250) {\n            _b = b[0];\n            continue ;\n          } else if (tag_a === 248) {\n            return a[1] === b[1];\n          } else if (tag_a === 251) {\n            throw [\n                  Caml_builtin_exceptions.invalid_argument,\n                  \"equal: abstract value\"\n                ];\n          } else if (tag_a !== tag_b) {\n            return false;\n          } else {\n            var len_a = a.length | 0;\n            var len_b = b.length | 0;\n            if (len_a === len_b) {\n              if (Array.isArray(a)) {\n                var a$1 = a;\n                var b$1 = b;\n                var _i = 0;\n                var same_length = len_a;\n                while(true) {\n                  var i = _i;\n                  if (i === same_length) {\n                    return true;\n                  } else if (caml_equal(a$1[i], b$1[i])) {\n                    _i = i + 1 | 0;\n                    continue ;\n                  } else {\n                    return false;\n                  }\n                };\n              } else {\n                var a$2 = a;\n                var b$2 = b;\n                var result = [true];\n                var do_key_a = (function(b$2,result){\n                return function do_key_a(key) {\n                  if (b$2.hasOwnProperty(key)) {\n                    return 0;\n                  } else {\n                    result[0] = false;\n                    return /* () */0;\n                  }\n                }\n                }(b$2,result));\n                var do_key_b = (function(a$2,b$2,result){\n                return function do_key_b(key) {\n                  if (!a$2.hasOwnProperty(key) || !caml_equal(b$2[key], a$2[key])) {\n                    result[0] = false;\n                    return /* () */0;\n                  } else {\n                    return 0;\n                  }\n                }\n                }(a$2,b$2,result));\n                for_in(a$2, do_key_a);\n                if (result[0]) {\n                  for_in(b$2, do_key_b);\n                }\n                return result[0];\n              }\n            } else {\n              return false;\n            }\n          }\n        }\n      }\n    }\n  };\n}\n\nfunction caml_equal_null(x, y) {\n  if (y !== null) {\n    return caml_equal(x, y);\n  } else {\n    return x === y;\n  }\n}\n\nfunction caml_equal_undefined(x, y) {\n  if (y !== undefined) {\n    return caml_equal(x, y);\n  } else {\n    return x === y;\n  }\n}\n\nfunction caml_equal_nullable(x, y) {\n  if (y == null) {\n    return x === y;\n  } else {\n    return caml_equal(x, y);\n  }\n}\n\nfunction caml_notequal(a, b) {\n  return !caml_equal(a, b);\n}\n\nfunction caml_greaterequal(a, b) {\n  return caml_compare(a, b) >= 0;\n}\n\nfunction caml_greaterthan(a, b) {\n  return caml_compare(a, b) > 0;\n}\n\nfunction caml_lessequal(a, b) {\n  return caml_compare(a, b) <= 0;\n}\n\nfunction caml_lessthan(a, b) {\n  return caml_compare(a, b) < 0;\n}\n\nfunction caml_min(x, y) {\n  if (caml_compare(x, y) <= 0) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nfunction caml_max(x, y) {\n  if (caml_compare(x, y) >= 0) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nexports.caml_obj_block = caml_obj_block;\nexports.caml_obj_dup = caml_obj_dup;\nexports.caml_obj_truncate = caml_obj_truncate;\nexports.caml_lazy_make_forward = caml_lazy_make_forward;\nexports.caml_update_dummy = caml_update_dummy;\nexports.caml_compare = caml_compare;\nexports.caml_equal = caml_equal;\nexports.caml_equal_null = caml_equal_null;\nexports.caml_equal_undefined = caml_equal_undefined;\nexports.caml_equal_nullable = caml_equal_nullable;\nexports.caml_notequal = caml_notequal;\nexports.caml_greaterequal = caml_greaterequal;\nexports.caml_greaterthan = caml_greaterthan;\nexports.caml_lessthan = caml_lessthan;\nexports.caml_lessequal = caml_lessequal;\nexports.caml_min = caml_min;\nexports.caml_max = caml_max;\n/* No side effect */\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict';\n\nvar Curry = require(\"./curry.js\");\nvar Caml_builtin_exceptions = require(\"./caml_builtin_exceptions.js\");\n\nfunction $caret(prim, prim$1) {\n  return prim + prim$1;\n}\n\nvar stdout = /* record */[\n  /* buffer */\"\",\n  /* output */(function (_, s) {\n      var v = s.length - 1 | 0;\n      if (( (typeof process !== \"undefined\") && process.stdout && process.stdout.write)) {\n        return ( process.stdout.write )(s);\n      } else if (s[v] === \"\\n\") {\n        console.log(s.slice(0, v));\n        return /* () */0;\n      } else {\n        console.log(s);\n        return /* () */0;\n      }\n    })\n];\n\nvar stderr = /* record */[\n  /* buffer */\"\",\n  /* output */(function (_, s) {\n      var v = s.length - 1 | 0;\n      if (s[v] === \"\\n\") {\n        console.log(s.slice(0, v));\n        return /* () */0;\n      } else {\n        console.log(s);\n        return /* () */0;\n      }\n    })\n];\n\nfunction caml_ml_open_descriptor_in() {\n  throw [\n        Caml_builtin_exceptions.failure,\n        \"caml_ml_open_descriptor_in not implemented\"\n      ];\n}\n\nfunction caml_ml_open_descriptor_out() {\n  throw [\n        Caml_builtin_exceptions.failure,\n        \"caml_ml_open_descriptor_out not implemented\"\n      ];\n}\n\nfunction caml_ml_flush(oc) {\n  if (oc[/* buffer */0] !== \"\") {\n    Curry._2(oc[/* output */1], oc, oc[/* buffer */0]);\n    oc[/* buffer */0] = \"\";\n    return /* () */0;\n  } else {\n    return 0;\n  }\n}\n\nvar node_std_output = (function (s){\n   return (typeof process !== \"undefined\") && process.stdout && (process.stdout.write(s), true);\n   }\n);\n\nfunction caml_ml_output(oc, str, offset, len) {\n  var str$1 = offset === 0 && len === str.length ? str : str.slice(offset, len);\n  if (( (typeof process !== \"undefined\") && process.stdout && process.stdout.write ) && oc === stdout) {\n    return ( process.stdout.write )(str$1);\n  } else {\n    var id = str$1.lastIndexOf(\"\\n\");\n    if (id < 0) {\n      oc[/* buffer */0] = oc[/* buffer */0] + str$1;\n      return /* () */0;\n    } else {\n      oc[/* buffer */0] = oc[/* buffer */0] + str$1.slice(0, id + 1 | 0);\n      caml_ml_flush(oc);\n      oc[/* buffer */0] = oc[/* buffer */0] + str$1.slice(id + 1 | 0);\n      return /* () */0;\n    }\n  }\n}\n\nfunction caml_ml_output_char(oc, $$char) {\n  return caml_ml_output(oc, String.fromCharCode($$char), 0, 1);\n}\n\nfunction caml_ml_input(_, _$1, _$2, _$3) {\n  throw [\n        Caml_builtin_exceptions.failure,\n        \"caml_ml_input ic not implemented\"\n      ];\n}\n\nfunction caml_ml_input_char() {\n  throw [\n        Caml_builtin_exceptions.failure,\n        \"caml_ml_input_char not implemnted\"\n      ];\n}\n\nfunction caml_ml_out_channels_list() {\n  return /* :: */[\n          stdout,\n          /* :: */[\n            stderr,\n            /* [] */0\n          ]\n        ];\n}\n\nvar stdin = undefined;\n\nexports.$caret = $caret;\nexports.stdin = stdin;\nexports.stdout = stdout;\nexports.stderr = stderr;\nexports.caml_ml_open_descriptor_in = caml_ml_open_descriptor_in;\nexports.caml_ml_open_descriptor_out = caml_ml_open_descriptor_out;\nexports.caml_ml_flush = caml_ml_flush;\nexports.node_std_output = node_std_output;\nexports.caml_ml_output = caml_ml_output;\nexports.caml_ml_output_char = caml_ml_output_char;\nexports.caml_ml_input = caml_ml_input;\nexports.caml_ml_input_char = caml_ml_input_char;\nexports.caml_ml_out_channels_list = caml_ml_out_channels_list;\n/* node_std_output Not a pure module */\n","'use strict';\n\nvar Caml_builtin_exceptions = require(\"./caml_builtin_exceptions.js\");\n\nfunction caml_sys_getenv(s) {\n  var match = typeof (process) === \"undefined\" ? undefined : (process);\n  if (match !== undefined) {\n    var match$1 = match.env[s];\n    if (match$1 !== undefined) {\n      return match$1;\n    } else {\n      throw Caml_builtin_exceptions.not_found;\n    }\n  } else {\n    throw Caml_builtin_exceptions.not_found;\n  }\n}\n\nfunction caml_sys_time() {\n  var match = typeof (process) === \"undefined\" ? undefined : (process);\n  if (match !== undefined) {\n    return match.uptime();\n  } else {\n    return -1;\n  }\n}\n\nfunction caml_sys_random_seed() {\n  return /* array */[((Date.now() | 0) ^ 4294967295) * Math.random() | 0];\n}\n\nfunction caml_sys_system_command() {\n  return 127;\n}\n\nfunction caml_sys_getcwd() {\n  var match = typeof (process) === \"undefined\" ? undefined : (process);\n  if (match !== undefined) {\n    return match.cwd();\n  } else {\n    return \"/\";\n  }\n}\n\nfunction caml_sys_get_argv() {\n  var match = typeof (process) === \"undefined\" ? undefined : (process);\n  if (match !== undefined) {\n    if (match.argv == null) {\n      return /* tuple */[\n              \"\",\n              /* array */[\"\"]\n            ];\n    } else {\n      return /* tuple */[\n              match.argv[0],\n              match.argv\n            ];\n    }\n  } else {\n    return /* tuple */[\n            \"\",\n            /* array */[\"\"]\n          ];\n  }\n}\n\nfunction caml_sys_exit(exit_code) {\n  var match = typeof (process) === \"undefined\" ? undefined : (process);\n  if (match !== undefined) {\n    return match.exit(exit_code);\n  } else {\n    return /* () */0;\n  }\n}\n\nfunction caml_sys_is_directory() {\n  throw [\n        Caml_builtin_exceptions.failure,\n        \"caml_sys_is_directory not implemented\"\n      ];\n}\n\nfunction caml_sys_file_exists() {\n  throw [\n        Caml_builtin_exceptions.failure,\n        \"caml_sys_file_exists not implemented\"\n      ];\n}\n\nexports.caml_sys_getenv = caml_sys_getenv;\nexports.caml_sys_time = caml_sys_time;\nexports.caml_sys_random_seed = caml_sys_random_seed;\nexports.caml_sys_system_command = caml_sys_system_command;\nexports.caml_sys_getcwd = caml_sys_getcwd;\nexports.caml_sys_get_argv = caml_sys_get_argv;\nexports.caml_sys_exit = caml_sys_exit;\nexports.caml_sys_is_directory = caml_sys_is_directory;\nexports.caml_sys_file_exists = caml_sys_file_exists;\n/* No side effect */\n","'use strict';\n\nvar Caml_builtin_exceptions = require(\"./caml_builtin_exceptions.js\");\n\nfunction div(x, y) {\n  if (y === 0) {\n    throw Caml_builtin_exceptions.division_by_zero;\n  } else {\n    return x / y | 0;\n  }\n}\n\nfunction mod_(x, y) {\n  if (y === 0) {\n    throw Caml_builtin_exceptions.division_by_zero;\n  } else {\n    return x % y;\n  }\n}\n\nfunction caml_bswap16(x) {\n  return ((x & 255) << 8) | ((x & 65280) >>> 8);\n}\n\nfunction caml_int32_bswap(x) {\n  return ((x & 255) << 24) | ((x & 65280) << 8) | ((x & 16711680) >>> 8) | ((x & 4278190080) >>> 24);\n}\n\nvar imul = ( Math.imul || function (x,y) {\n  y |= 0; return ((((x >> 16) * y) << 16) + (x & 0xffff) * y)|0; \n}\n);\n\nvar caml_nativeint_bswap = caml_int32_bswap;\n\nexports.div = div;\nexports.mod_ = mod_;\nexports.caml_bswap16 = caml_bswap16;\nexports.caml_int32_bswap = caml_int32_bswap;\nexports.caml_nativeint_bswap = caml_nativeint_bswap;\nexports.imul = imul;\n/* imul Not a pure module */\n","'use strict';\n\n\nvar repeat = ( (String.prototype.repeat && function (count,self){return self.repeat(count)}) ||\n                                                  function(count , self) {\n        if (self.length == 0 || count == 0) {\n            return '';\n        }\n        // Ensuring count is a 31-bit integer allows us to heavily optimize the\n        // main part. But anyway, most current (August 2014) browsers can't handle\n        // strings 1 << 28 chars or longer, so:\n        if (self.length * count >= 1 << 28) {\n            throw new RangeError('repeat count must not overflow maximum string size');\n        }\n        var rpt = '';\n        for (;;) {\n            if ((count & 1) == 1) {\n                rpt += self;\n            }\n            count >>>= 1;\n            if (count == 0) {\n                break;\n            }\n            self += self;\n        }\n        return rpt;\n    }\n);\n\nexports.repeat = repeat;\n/* repeat Not a pure module */\n","'use strict';\n\nvar Caml_int32 = require(\"./caml_int32.js\");\nvar Caml_utils = require(\"./caml_utils.js\");\nvar Caml_primitive = require(\"./caml_primitive.js\");\nvar Caml_builtin_exceptions = require(\"./caml_builtin_exceptions.js\");\n\nvar min_int = /* record */[\n  /* hi */-2147483648,\n  /* lo */0\n];\n\nvar max_int = /* record */[\n  /* hi */2147483647,\n  /* lo */1\n];\n\nvar one = /* record */[\n  /* hi */0,\n  /* lo */1\n];\n\nvar zero = /* record */[\n  /* hi */0,\n  /* lo */0\n];\n\nvar neg_one = /* record */[\n  /* hi */-1,\n  /* lo */4294967295\n];\n\nfunction neg_signed(x) {\n  return (x & 2147483648) !== 0;\n}\n\nfunction add(param, param$1) {\n  var other_low_ = param$1[/* lo */1];\n  var this_low_ = param[/* lo */1];\n  var lo = this_low_ + other_low_ & 4294967295;\n  var overflow = neg_signed(this_low_) && (neg_signed(other_low_) || !neg_signed(lo)) || neg_signed(other_low_) && !neg_signed(lo) ? 1 : 0;\n  var hi = param[/* hi */0] + param$1[/* hi */0] + overflow & 4294967295;\n  return /* record */[\n          /* hi */hi,\n          /* lo */(lo >>> 0)\n        ];\n}\n\nfunction not(param) {\n  var hi = param[/* hi */0] ^ -1;\n  var lo = param[/* lo */1] ^ -1;\n  return /* record */[\n          /* hi */hi,\n          /* lo */(lo >>> 0)\n        ];\n}\n\nfunction eq(x, y) {\n  if (x[/* hi */0] === y[/* hi */0]) {\n    return x[/* lo */1] === y[/* lo */1];\n  } else {\n    return false;\n  }\n}\n\nfunction equal_null(x, y) {\n  if (y !== null) {\n    return eq(x, y);\n  } else {\n    return false;\n  }\n}\n\nfunction equal_undefined(x, y) {\n  if (y !== undefined) {\n    return eq(x, y);\n  } else {\n    return false;\n  }\n}\n\nfunction equal_nullable(x, y) {\n  if (y == null) {\n    return false;\n  } else {\n    return eq(x, y);\n  }\n}\n\nfunction neg(x) {\n  if (eq(x, min_int)) {\n    return min_int;\n  } else {\n    return add(not(x), one);\n  }\n}\n\nfunction sub(x, y) {\n  return add(x, neg(y));\n}\n\nfunction lsl_(x, numBits) {\n  if (numBits === 0) {\n    return x;\n  } else {\n    var lo = x[/* lo */1];\n    if (numBits >= 32) {\n      return /* record */[\n              /* hi */(lo << (numBits - 32 | 0)),\n              /* lo */0\n            ];\n    } else {\n      var hi = (lo >>> (32 - numBits | 0)) | (x[/* hi */0] << numBits);\n      return /* record */[\n              /* hi */hi,\n              /* lo */((lo << numBits) >>> 0)\n            ];\n    }\n  }\n}\n\nfunction lsr_(x, numBits) {\n  if (numBits === 0) {\n    return x;\n  } else {\n    var hi = x[/* hi */0];\n    var offset = numBits - 32 | 0;\n    if (offset === 0) {\n      return /* record */[\n              /* hi */0,\n              /* lo */(hi >>> 0)\n            ];\n    } else if (offset > 0) {\n      var lo = (hi >>> offset);\n      return /* record */[\n              /* hi */0,\n              /* lo */(lo >>> 0)\n            ];\n    } else {\n      var hi$1 = (hi >>> numBits);\n      var lo$1 = (hi << (-offset | 0)) | (x[/* lo */1] >>> numBits);\n      return /* record */[\n              /* hi */hi$1,\n              /* lo */(lo$1 >>> 0)\n            ];\n    }\n  }\n}\n\nfunction asr_(x, numBits) {\n  if (numBits === 0) {\n    return x;\n  } else {\n    var hi = x[/* hi */0];\n    if (numBits < 32) {\n      var hi$1 = (hi >> numBits);\n      var lo = (hi << (32 - numBits | 0)) | (x[/* lo */1] >>> numBits);\n      return /* record */[\n              /* hi */hi$1,\n              /* lo */(lo >>> 0)\n            ];\n    } else {\n      var lo$1 = (hi >> (numBits - 32 | 0));\n      return /* record */[\n              /* hi */hi >= 0 ? 0 : -1,\n              /* lo */(lo$1 >>> 0)\n            ];\n    }\n  }\n}\n\nfunction is_zero(param) {\n  if (param[/* hi */0] !== 0 || param[/* lo */1] !== 0) {\n    return false;\n  } else {\n    return true;\n  }\n}\n\nfunction mul(_this, _other) {\n  while(true) {\n    var other = _other;\n    var $$this = _this;\n    var exit = 0;\n    var lo;\n    var this_hi = $$this[/* hi */0];\n    var exit$1 = 0;\n    var exit$2 = 0;\n    var exit$3 = 0;\n    if (this_hi !== 0 || $$this[/* lo */1] !== 0) {\n      exit$3 = 4;\n    } else {\n      return zero;\n    }\n    if (exit$3 === 4) {\n      if (other[/* hi */0] !== 0 || other[/* lo */1] !== 0) {\n        exit$2 = 3;\n      } else {\n        return zero;\n      }\n    }\n    if (exit$2 === 3) {\n      if (this_hi !== -2147483648 || $$this[/* lo */1] !== 0) {\n        exit$1 = 2;\n      } else {\n        lo = other[/* lo */1];\n        exit = 1;\n      }\n    }\n    if (exit$1 === 2) {\n      var other_hi = other[/* hi */0];\n      var lo$1 = $$this[/* lo */1];\n      var exit$4 = 0;\n      if (other_hi !== -2147483648 || other[/* lo */1] !== 0) {\n        exit$4 = 3;\n      } else {\n        lo = lo$1;\n        exit = 1;\n      }\n      if (exit$4 === 3) {\n        var other_lo = other[/* lo */1];\n        if (this_hi < 0) {\n          if (other_hi < 0) {\n            _other = neg(other);\n            _this = neg($$this);\n            continue ;\n          } else {\n            return neg(mul(neg($$this), other));\n          }\n        } else if (other_hi < 0) {\n          return neg(mul($$this, neg(other)));\n        } else {\n          var a48 = (this_hi >>> 16);\n          var a32 = this_hi & 65535;\n          var a16 = (lo$1 >>> 16);\n          var a00 = lo$1 & 65535;\n          var b48 = (other_hi >>> 16);\n          var b32 = other_hi & 65535;\n          var b16 = (other_lo >>> 16);\n          var b00 = other_lo & 65535;\n          var c48 = 0;\n          var c32 = 0;\n          var c16 = 0;\n          var c00 = a00 * b00;\n          c16 = (c00 >>> 16) + a16 * b00;\n          c32 = (c16 >>> 16);\n          c16 = (c16 & 65535) + a00 * b16;\n          c32 = c32 + (c16 >>> 16) + a32 * b00;\n          c48 = (c32 >>> 16);\n          c32 = (c32 & 65535) + a16 * b16;\n          c48 += (c32 >>> 16);\n          c32 = (c32 & 65535) + a00 * b32;\n          c48 += (c32 >>> 16);\n          c32 = c32 & 65535;\n          c48 = c48 + (a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48) & 65535;\n          var hi = c32 | (c48 << 16);\n          var lo$2 = c00 & 65535 | ((c16 & 65535) << 16);\n          return /* record */[\n                  /* hi */hi,\n                  /* lo */(lo$2 >>> 0)\n                ];\n        }\n      }\n      \n    }\n    if (exit === 1) {\n      if ((lo & 1) === 0) {\n        return zero;\n      } else {\n        return min_int;\n      }\n    }\n    \n  };\n}\n\nfunction swap(param) {\n  var hi = Caml_int32.caml_int32_bswap(param[/* lo */1]);\n  var lo = Caml_int32.caml_int32_bswap(param[/* hi */0]);\n  return /* record */[\n          /* hi */hi,\n          /* lo */(lo >>> 0)\n        ];\n}\n\nfunction xor(param, param$1) {\n  return /* record */[\n          /* hi */param[/* hi */0] ^ param$1[/* hi */0],\n          /* lo */((param[/* lo */1] ^ param$1[/* lo */1]) >>> 0)\n        ];\n}\n\nfunction or_(param, param$1) {\n  return /* record */[\n          /* hi */param[/* hi */0] | param$1[/* hi */0],\n          /* lo */((param[/* lo */1] | param$1[/* lo */1]) >>> 0)\n        ];\n}\n\nfunction and_(param, param$1) {\n  return /* record */[\n          /* hi */param[/* hi */0] & param$1[/* hi */0],\n          /* lo */((param[/* lo */1] & param$1[/* lo */1]) >>> 0)\n        ];\n}\n\nfunction ge(param, param$1) {\n  var other_hi = param$1[/* hi */0];\n  var hi = param[/* hi */0];\n  if (hi > other_hi) {\n    return true;\n  } else if (hi < other_hi) {\n    return false;\n  } else {\n    return param[/* lo */1] >= param$1[/* lo */1];\n  }\n}\n\nfunction neq(x, y) {\n  return !eq(x, y);\n}\n\nfunction lt(x, y) {\n  return !ge(x, y);\n}\n\nfunction gt(x, y) {\n  if (x[/* hi */0] > y[/* hi */0]) {\n    return true;\n  } else if (x[/* hi */0] < y[/* hi */0]) {\n    return false;\n  } else {\n    return x[/* lo */1] > y[/* lo */1];\n  }\n}\n\nfunction le(x, y) {\n  return !gt(x, y);\n}\n\nfunction min(x, y) {\n  if (ge(x, y)) {\n    return y;\n  } else {\n    return x;\n  }\n}\n\nfunction max(x, y) {\n  if (gt(x, y)) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nfunction to_float(param) {\n  return param[/* hi */0] * (0x100000000) + param[/* lo */1];\n}\n\nvar two_ptr_32_dbl = Math.pow(2, 32);\n\nvar two_ptr_63_dbl = Math.pow(2, 63);\n\nvar neg_two_ptr_63 = -Math.pow(2, 63);\n\nfunction of_float(x) {\n  if (isNaN(x) || !isFinite(x)) {\n    return zero;\n  } else if (x <= neg_two_ptr_63) {\n    return min_int;\n  } else if (x + 1 >= two_ptr_63_dbl) {\n    return max_int;\n  } else if (x < 0) {\n    return neg(of_float(-x));\n  } else {\n    var hi = x / two_ptr_32_dbl | 0;\n    var lo = x % two_ptr_32_dbl | 0;\n    return /* record */[\n            /* hi */hi,\n            /* lo */(lo >>> 0)\n          ];\n  }\n}\n\nfunction div(_self, _other) {\n  while(true) {\n    var other = _other;\n    var self = _self;\n    var self_hi = self[/* hi */0];\n    var exit = 0;\n    var exit$1 = 0;\n    if (other[/* hi */0] !== 0 || other[/* lo */1] !== 0) {\n      exit$1 = 2;\n    } else {\n      throw Caml_builtin_exceptions.division_by_zero;\n    }\n    if (exit$1 === 2) {\n      if (self_hi !== -2147483648) {\n        if (self_hi !== 0 || self[/* lo */1] !== 0) {\n          exit = 1;\n        } else {\n          return zero;\n        }\n      } else if (self[/* lo */1] !== 0) {\n        exit = 1;\n      } else if (eq(other, one) || eq(other, neg_one)) {\n        return self;\n      } else if (eq(other, min_int)) {\n        return one;\n      } else {\n        var other_hi = other[/* hi */0];\n        var half_this = asr_(self, 1);\n        var approx = lsl_(div(half_this, other), 1);\n        var exit$2 = 0;\n        if (approx[/* hi */0] !== 0 || approx[/* lo */1] !== 0) {\n          exit$2 = 3;\n        } else if (other_hi < 0) {\n          return one;\n        } else {\n          return neg(one);\n        }\n        if (exit$2 === 3) {\n          var y = mul(other, approx);\n          var rem = add(self, neg(y));\n          return add(approx, div(rem, other));\n        }\n        \n      }\n    }\n    if (exit === 1) {\n      var other_hi$1 = other[/* hi */0];\n      var exit$3 = 0;\n      if (other_hi$1 !== -2147483648 || other[/* lo */1] !== 0) {\n        exit$3 = 2;\n      } else {\n        return zero;\n      }\n      if (exit$3 === 2) {\n        if (self_hi < 0) {\n          if (other_hi$1 < 0) {\n            _other = neg(other);\n            _self = neg(self);\n            continue ;\n          } else {\n            return neg(div(neg(self), other));\n          }\n        } else if (other_hi$1 < 0) {\n          return neg(div(self, neg(other)));\n        } else {\n          var res = zero;\n          var rem$1 = self;\n          while(ge(rem$1, other)) {\n            var approx$1 = Caml_primitive.caml_float_max(1, Math.floor(to_float(rem$1) / to_float(other)));\n            var log2 = Math.ceil(Math.log(approx$1) / Math.LN2);\n            var delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);\n            var approxRes = of_float(approx$1);\n            var approxRem = mul(approxRes, other);\n            while(approxRem[/* hi */0] < 0 || gt(approxRem, rem$1)) {\n              approx$1 -= delta;\n              approxRes = of_float(approx$1);\n              approxRem = mul(approxRes, other);\n            };\n            if (is_zero(approxRes)) {\n              approxRes = one;\n            }\n            res = add(res, approxRes);\n            rem$1 = add(rem$1, neg(approxRem));\n          };\n          return res;\n        }\n      }\n      \n    }\n    \n  };\n}\n\nfunction mod_(self, other) {\n  var y = mul(div(self, other), other);\n  return add(self, neg(y));\n}\n\nfunction div_mod(self, other) {\n  var quotient = div(self, other);\n  var y = mul(quotient, other);\n  return /* tuple */[\n          quotient,\n          add(self, neg(y))\n        ];\n}\n\nfunction compare(self, other) {\n  var v = Caml_primitive.caml_nativeint_compare(self[/* hi */0], other[/* hi */0]);\n  if (v === 0) {\n    return Caml_primitive.caml_nativeint_compare(self[/* lo */1], other[/* lo */1]);\n  } else {\n    return v;\n  }\n}\n\nfunction of_int32(lo) {\n  return /* record */[\n          /* hi */lo < 0 ? -1 : 0,\n          /* lo */(lo >>> 0)\n        ];\n}\n\nfunction to_int32(x) {\n  return x[/* lo */1] | 0;\n}\n\nfunction to_hex(x) {\n  var aux = function (v) {\n    return (v >>> 0).toString(16);\n  };\n  var match = x[/* hi */0];\n  var match$1 = x[/* lo */1];\n  var exit = 0;\n  if (match !== 0 || match$1 !== 0) {\n    exit = 1;\n  } else {\n    return \"0\";\n  }\n  if (exit === 1) {\n    if (match$1 !== 0) {\n      if (match !== 0) {\n        var lo = aux(x[/* lo */1]);\n        var pad = 8 - lo.length | 0;\n        if (pad <= 0) {\n          return aux(x[/* hi */0]) + lo;\n        } else {\n          return aux(x[/* hi */0]) + (Caml_utils.repeat(pad, \"0\") + lo);\n        }\n      } else {\n        return aux(x[/* lo */1]);\n      }\n    } else {\n      return aux(x[/* hi */0]) + \"00000000\";\n    }\n  }\n  \n}\n\nfunction discard_sign(x) {\n  return /* record */[\n          /* hi */2147483647 & x[/* hi */0],\n          /* lo */x[/* lo */1]\n        ];\n}\n\nfunction float_of_bits(x) {\n  var int32 = new Int32Array(/* array */[\n        x[/* lo */1],\n        x[/* hi */0]\n      ]);\n  return new Float64Array(int32.buffer)[0];\n}\n\nfunction bits_of_float(x) {\n  var u = new Float64Array(/* array */[x]);\n  var int32 = new Int32Array(u.buffer);\n  var x$1 = int32[1];\n  var hi = x$1;\n  var x$2 = int32[0];\n  var lo = x$2;\n  return /* record */[\n          /* hi */hi,\n          /* lo */(lo >>> 0)\n        ];\n}\n\nfunction get64(s, i) {\n  var hi = (s.charCodeAt(i + 4 | 0) << 32) | (s.charCodeAt(i + 5 | 0) << 40) | (s.charCodeAt(i + 6 | 0) << 48) | (s.charCodeAt(i + 7 | 0) << 56);\n  var lo = s.charCodeAt(i) | (s.charCodeAt(i + 1 | 0) << 8) | (s.charCodeAt(i + 2 | 0) << 16) | (s.charCodeAt(i + 3 | 0) << 24);\n  return /* record */[\n          /* hi */hi,\n          /* lo */(lo >>> 0)\n        ];\n}\n\nexports.min_int = min_int;\nexports.max_int = max_int;\nexports.one = one;\nexports.zero = zero;\nexports.not = not;\nexports.of_int32 = of_int32;\nexports.to_int32 = to_int32;\nexports.add = add;\nexports.neg = neg;\nexports.sub = sub;\nexports.lsl_ = lsl_;\nexports.lsr_ = lsr_;\nexports.asr_ = asr_;\nexports.is_zero = is_zero;\nexports.mul = mul;\nexports.xor = xor;\nexports.or_ = or_;\nexports.and_ = and_;\nexports.swap = swap;\nexports.ge = ge;\nexports.eq = eq;\nexports.neq = neq;\nexports.lt = lt;\nexports.gt = gt;\nexports.le = le;\nexports.equal_null = equal_null;\nexports.equal_undefined = equal_undefined;\nexports.equal_nullable = equal_nullable;\nexports.min = min;\nexports.max = max;\nexports.to_float = to_float;\nexports.of_float = of_float;\nexports.div = div;\nexports.mod_ = mod_;\nexports.div_mod = div_mod;\nexports.compare = compare;\nexports.to_hex = to_hex;\nexports.discard_sign = discard_sign;\nexports.float_of_bits = float_of_bits;\nexports.bits_of_float = bits_of_float;\nexports.get64 = get64;\n/* two_ptr_32_dbl Not a pure module */\n","'use strict';\n\nvar Curry = require(\"./curry.js\");\nvar Caml_int32 = require(\"./caml_int32.js\");\nvar Caml_int64 = require(\"./caml_int64.js\");\nvar Caml_utils = require(\"./caml_utils.js\");\nvar Caml_builtin_exceptions = require(\"./caml_builtin_exceptions.js\");\n\nfunction caml_failwith(s) {\n  throw [\n        Caml_builtin_exceptions.failure,\n        s\n      ];\n}\n\nfunction parse_digit(c) {\n  if (c >= 65) {\n    if (c >= 97) {\n      if (c >= 123) {\n        return -1;\n      } else {\n        return c - 87 | 0;\n      }\n    } else if (c >= 91) {\n      return -1;\n    } else {\n      return c - 55 | 0;\n    }\n  } else if (c > 57 || c < 48) {\n    return -1;\n  } else {\n    return c - /* \"0\" */48 | 0;\n  }\n}\n\nfunction int_of_string_base(param) {\n  switch (param) {\n    case 0 : \n        return 8;\n    case 1 : \n        return 16;\n    case 2 : \n        return 10;\n    case 3 : \n        return 2;\n    \n  }\n}\n\nfunction parse_sign_and_base(s) {\n  var sign = 1;\n  var base = /* Dec */2;\n  var i = 0;\n  if (s[i] === \"-\") {\n    sign = -1;\n    i = i + 1 | 0;\n  }\n  var match = s.charCodeAt(i);\n  var match$1 = s.charCodeAt(i + 1 | 0);\n  if (match === 48) {\n    if (match$1 >= 89) {\n      if (match$1 !== 98) {\n        if (match$1 !== 111) {\n          if (match$1 === 120) {\n            base = /* Hex */1;\n            i = i + 2 | 0;\n          }\n          \n        } else {\n          base = /* Oct */0;\n          i = i + 2 | 0;\n        }\n      } else {\n        base = /* Bin */3;\n        i = i + 2 | 0;\n      }\n    } else if (match$1 !== 66) {\n      if (match$1 !== 79) {\n        if (match$1 >= 88) {\n          base = /* Hex */1;\n          i = i + 2 | 0;\n        }\n        \n      } else {\n        base = /* Oct */0;\n        i = i + 2 | 0;\n      }\n    } else {\n      base = /* Bin */3;\n      i = i + 2 | 0;\n    }\n  }\n  return /* tuple */[\n          i,\n          sign,\n          base\n        ];\n}\n\nfunction caml_int_of_string(s) {\n  var match = parse_sign_and_base(s);\n  var i = match[0];\n  var base = int_of_string_base(match[2]);\n  var threshold = 4294967295;\n  var len = s.length;\n  var c = i < len ? s.charCodeAt(i) : /* \"\\000\" */0;\n  var d = parse_digit(c);\n  if (d < 0 || d >= base) {\n    throw [\n          Caml_builtin_exceptions.failure,\n          \"int_of_string\"\n        ];\n  }\n  var aux = function (_acc, _k) {\n    while(true) {\n      var k = _k;\n      var acc = _acc;\n      if (k === len) {\n        return acc;\n      } else {\n        var a = s.charCodeAt(k);\n        if (a === /* \"_\" */95) {\n          _k = k + 1 | 0;\n          continue ;\n        } else {\n          var v = parse_digit(a);\n          if (v < 0 || v >= base) {\n            throw [\n                  Caml_builtin_exceptions.failure,\n                  \"int_of_string\"\n                ];\n          } else {\n            var acc$1 = base * acc + v;\n            if (acc$1 > threshold) {\n              throw [\n                    Caml_builtin_exceptions.failure,\n                    \"int_of_string\"\n                  ];\n            } else {\n              _k = k + 1 | 0;\n              _acc = acc$1;\n              continue ;\n            }\n          }\n        }\n      }\n    };\n  };\n  var res = match[1] * aux(d, i + 1 | 0);\n  var or_res = res | 0;\n  if (base === 10 && res !== or_res) {\n    throw [\n          Caml_builtin_exceptions.failure,\n          \"int_of_string\"\n        ];\n  }\n  return or_res;\n}\n\nfunction caml_int64_of_string(s) {\n  var match = parse_sign_and_base(s);\n  var hbase = match[2];\n  var i = match[0];\n  var base = Caml_int64.of_int32(int_of_string_base(hbase));\n  var sign = Caml_int64.of_int32(match[1]);\n  var threshold;\n  switch (hbase) {\n    case 0 : \n        threshold = /* int64 */[\n          /* hi */536870911,\n          /* lo */4294967295\n        ];\n        break;\n    case 1 : \n        threshold = /* int64 */[\n          /* hi */268435455,\n          /* lo */4294967295\n        ];\n        break;\n    case 2 : \n        threshold = /* int64 */[\n          /* hi */429496729,\n          /* lo */2576980377\n        ];\n        break;\n    case 3 : \n        threshold = /* int64 */[\n          /* hi */2147483647,\n          /* lo */4294967295\n        ];\n        break;\n    \n  }\n  var len = s.length;\n  var c = i < len ? s.charCodeAt(i) : /* \"\\000\" */0;\n  var d = Caml_int64.of_int32(parse_digit(c));\n  if (Caml_int64.lt(d, /* int64 */[\n          /* hi */0,\n          /* lo */0\n        ]) || Caml_int64.ge(d, base)) {\n    throw [\n          Caml_builtin_exceptions.failure,\n          \"int64_of_string\"\n        ];\n  }\n  var aux = function (_acc, _k) {\n    while(true) {\n      var k = _k;\n      var acc = _acc;\n      if (k === len) {\n        return acc;\n      } else {\n        var a = s.charCodeAt(k);\n        if (a === /* \"_\" */95) {\n          _k = k + 1 | 0;\n          continue ;\n        } else {\n          var v = Caml_int64.of_int32(parse_digit(a));\n          if (Caml_int64.lt(v, /* int64 */[\n                  /* hi */0,\n                  /* lo */0\n                ]) || Caml_int64.ge(v, base) || Caml_int64.gt(acc, threshold)) {\n            throw [\n                  Caml_builtin_exceptions.failure,\n                  \"int64_of_string\"\n                ];\n          } else {\n            var acc$1 = Caml_int64.add(Caml_int64.mul(base, acc), v);\n            _k = k + 1 | 0;\n            _acc = acc$1;\n            continue ;\n          }\n        }\n      }\n    };\n  };\n  var res = Caml_int64.mul(sign, aux(d, i + 1 | 0));\n  var or_res = Caml_int64.or_(res, /* int64 */[\n        /* hi */0,\n        /* lo */0\n      ]);\n  if (Caml_int64.eq(base, /* int64 */[\n          /* hi */0,\n          /* lo */10\n        ]) && Caml_int64.neq(res, or_res)) {\n    throw [\n          Caml_builtin_exceptions.failure,\n          \"int64_of_string\"\n        ];\n  }\n  return or_res;\n}\n\nfunction int_of_base(param) {\n  switch (param) {\n    case 0 : \n        return 8;\n    case 1 : \n        return 16;\n    case 2 : \n        return 10;\n    \n  }\n}\n\nfunction lowercase(c) {\n  if (c >= /* \"A\" */65 && c <= /* \"Z\" */90 || c >= /* \"\\192\" */192 && c <= /* \"\\214\" */214 || c >= /* \"\\216\" */216 && c <= /* \"\\222\" */222) {\n    return c + 32 | 0;\n  } else {\n    return c;\n  }\n}\n\nfunction parse_format(fmt) {\n  var len = fmt.length;\n  if (len > 31) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"format_int: format too long\"\n        ];\n  }\n  var f = /* record */[\n    /* justify */\"+\",\n    /* signstyle */\"-\",\n    /* filter */\" \",\n    /* alternate */false,\n    /* base : Dec */2,\n    /* signedconv */false,\n    /* width */0,\n    /* uppercase */false,\n    /* sign */1,\n    /* prec */-1,\n    /* conv */\"f\"\n  ];\n  var _i = 0;\n  while(true) {\n    var i = _i;\n    if (i >= len) {\n      return f;\n    } else {\n      var c = fmt.charCodeAt(i);\n      var exit = 0;\n      if (c >= 69) {\n        if (c >= 88) {\n          if (c >= 121) {\n            exit = 1;\n          } else {\n            switch (c - 88 | 0) {\n              case 0 : \n                  f[/* base */4] = /* Hex */1;\n                  f[/* uppercase */7] = true;\n                  _i = i + 1 | 0;\n                  continue ;\n              case 13 : \n              case 14 : \n              case 15 : \n                  exit = 5;\n                  break;\n              case 12 : \n              case 17 : \n                  exit = 4;\n                  break;\n              case 23 : \n                  f[/* base */4] = /* Oct */0;\n                  _i = i + 1 | 0;\n                  continue ;\n              case 29 : \n                  f[/* base */4] = /* Dec */2;\n                  _i = i + 1 | 0;\n                  continue ;\n              case 1 : \n              case 2 : \n              case 3 : \n              case 4 : \n              case 5 : \n              case 6 : \n              case 7 : \n              case 8 : \n              case 9 : \n              case 10 : \n              case 11 : \n              case 16 : \n              case 18 : \n              case 19 : \n              case 20 : \n              case 21 : \n              case 22 : \n              case 24 : \n              case 25 : \n              case 26 : \n              case 27 : \n              case 28 : \n              case 30 : \n              case 31 : \n                  exit = 1;\n                  break;\n              case 32 : \n                  f[/* base */4] = /* Hex */1;\n                  _i = i + 1 | 0;\n                  continue ;\n              \n            }\n          }\n        } else if (c >= 72) {\n          exit = 1;\n        } else {\n          f[/* signedconv */5] = true;\n          f[/* uppercase */7] = true;\n          f[/* conv */10] = String.fromCharCode(lowercase(c));\n          _i = i + 1 | 0;\n          continue ;\n        }\n      } else {\n        var switcher = c - 32 | 0;\n        if (switcher > 25 || switcher < 0) {\n          exit = 1;\n        } else {\n          switch (switcher) {\n            case 3 : \n                f[/* alternate */3] = true;\n                _i = i + 1 | 0;\n                continue ;\n            case 0 : \n            case 11 : \n                exit = 2;\n                break;\n            case 13 : \n                f[/* justify */0] = \"-\";\n                _i = i + 1 | 0;\n                continue ;\n            case 14 : \n                f[/* prec */9] = 0;\n                var j = i + 1 | 0;\n                while((function(j){\n                    return function () {\n                      var w = fmt.charCodeAt(j) - /* \"0\" */48 | 0;\n                      return w >= 0 && w <= 9;\n                    }\n                    }(j))()) {\n                  f[/* prec */9] = (Caml_int32.imul(f[/* prec */9], 10) + fmt.charCodeAt(j) | 0) - /* \"0\" */48 | 0;\n                  j = j + 1 | 0;\n                };\n                _i = j;\n                continue ;\n            case 1 : \n            case 2 : \n            case 4 : \n            case 5 : \n            case 6 : \n            case 7 : \n            case 8 : \n            case 9 : \n            case 10 : \n            case 12 : \n            case 15 : \n                exit = 1;\n                break;\n            case 16 : \n                f[/* filter */2] = \"0\";\n                _i = i + 1 | 0;\n                continue ;\n            case 17 : \n            case 18 : \n            case 19 : \n            case 20 : \n            case 21 : \n            case 22 : \n            case 23 : \n            case 24 : \n            case 25 : \n                exit = 3;\n                break;\n            \n          }\n        }\n      }\n      switch (exit) {\n        case 1 : \n            _i = i + 1 | 0;\n            continue ;\n        case 2 : \n            f[/* signstyle */1] = String.fromCharCode(c);\n            _i = i + 1 | 0;\n            continue ;\n        case 3 : \n            f[/* width */6] = 0;\n            var j$1 = i;\n            while((function(j$1){\n                return function () {\n                  var w = fmt.charCodeAt(j$1) - /* \"0\" */48 | 0;\n                  return w >= 0 && w <= 9;\n                }\n                }(j$1))()) {\n              f[/* width */6] = (Caml_int32.imul(f[/* width */6], 10) + fmt.charCodeAt(j$1) | 0) - /* \"0\" */48 | 0;\n              j$1 = j$1 + 1 | 0;\n            };\n            _i = j$1;\n            continue ;\n        case 4 : \n            f[/* signedconv */5] = true;\n            f[/* base */4] = /* Dec */2;\n            _i = i + 1 | 0;\n            continue ;\n        case 5 : \n            f[/* signedconv */5] = true;\n            f[/* conv */10] = String.fromCharCode(c);\n            _i = i + 1 | 0;\n            continue ;\n        \n      }\n    }\n  };\n}\n\nfunction finish_formatting(param, rawbuffer) {\n  var justify = param[/* justify */0];\n  var signstyle = param[/* signstyle */1];\n  var filter = param[/* filter */2];\n  var alternate = param[/* alternate */3];\n  var base = param[/* base */4];\n  var signedconv = param[/* signedconv */5];\n  var width = param[/* width */6];\n  var uppercase = param[/* uppercase */7];\n  var sign = param[/* sign */8];\n  var len = rawbuffer.length;\n  if (signedconv && (sign < 0 || signstyle !== \"-\")) {\n    len = len + 1 | 0;\n  }\n  if (alternate) {\n    if (base === /* Oct */0) {\n      len = len + 1 | 0;\n    } else if (base === /* Hex */1) {\n      len = len + 2 | 0;\n    }\n    \n  }\n  var buffer = \"\";\n  if (justify === \"+\" && filter === \" \") {\n    for(var i = len ,i_finish = width - 1 | 0; i <= i_finish; ++i){\n      buffer = buffer + filter;\n    }\n  }\n  if (signedconv) {\n    if (sign < 0) {\n      buffer = buffer + \"-\";\n    } else if (signstyle !== \"-\") {\n      buffer = buffer + signstyle;\n    }\n    \n  }\n  if (alternate && base === /* Oct */0) {\n    buffer = buffer + \"0\";\n  }\n  if (alternate && base === /* Hex */1) {\n    buffer = buffer + \"0x\";\n  }\n  if (justify === \"+\" && filter === \"0\") {\n    for(var i$1 = len ,i_finish$1 = width - 1 | 0; i$1 <= i_finish$1; ++i$1){\n      buffer = buffer + filter;\n    }\n  }\n  buffer = uppercase ? buffer + rawbuffer.toUpperCase() : buffer + rawbuffer;\n  if (justify === \"-\") {\n    for(var i$2 = len ,i_finish$2 = width - 1 | 0; i$2 <= i_finish$2; ++i$2){\n      buffer = buffer + \" \";\n    }\n  }\n  return buffer;\n}\n\nfunction caml_format_int(fmt, i) {\n  if (fmt === \"%d\") {\n    return String(i);\n  } else {\n    var f = parse_format(fmt);\n    var f$1 = f;\n    var i$1 = i;\n    var i$2 = i$1 < 0 ? (\n        f$1[/* signedconv */5] ? (f$1[/* sign */8] = -1, -i$1) : (i$1 >>> 0)\n      ) : i$1;\n    var s = i$2.toString(int_of_base(f$1[/* base */4]));\n    if (f$1[/* prec */9] >= 0) {\n      f$1[/* filter */2] = \" \";\n      var n = f$1[/* prec */9] - s.length | 0;\n      if (n > 0) {\n        s = Caml_utils.repeat(n, \"0\") + s;\n      }\n      \n    }\n    return finish_formatting(f$1, s);\n  }\n}\n\nfunction caml_int64_format(fmt, x) {\n  var f = parse_format(fmt);\n  var x$1 = f[/* signedconv */5] && Caml_int64.lt(x, /* int64 */[\n        /* hi */0,\n        /* lo */0\n      ]) ? (f[/* sign */8] = -1, Caml_int64.neg(x)) : x;\n  var s = \"\";\n  var match = f[/* base */4];\n  switch (match) {\n    case 0 : \n        var wbase = /* int64 */[\n          /* hi */0,\n          /* lo */8\n        ];\n        var cvtbl = \"01234567\";\n        if (Caml_int64.lt(x$1, /* int64 */[\n                /* hi */0,\n                /* lo */0\n              ])) {\n          var y = Caml_int64.discard_sign(x$1);\n          var match$1 = Caml_int64.div_mod(y, wbase);\n          var quotient = Caml_int64.add(/* int64 */[\n                /* hi */268435456,\n                /* lo */0\n              ], match$1[0]);\n          var modulus = match$1[1];\n          s = String.fromCharCode(cvtbl.charCodeAt(modulus[1] | 0)) + s;\n          while(Caml_int64.neq(quotient, /* int64 */[\n                  /* hi */0,\n                  /* lo */0\n                ])) {\n            var match$2 = Caml_int64.div_mod(quotient, wbase);\n            quotient = match$2[0];\n            modulus = match$2[1];\n            s = String.fromCharCode(cvtbl.charCodeAt(modulus[1] | 0)) + s;\n          };\n        } else {\n          var match$3 = Caml_int64.div_mod(x$1, wbase);\n          var quotient$1 = match$3[0];\n          var modulus$1 = match$3[1];\n          s = String.fromCharCode(cvtbl.charCodeAt(modulus$1[1] | 0)) + s;\n          while(Caml_int64.neq(quotient$1, /* int64 */[\n                  /* hi */0,\n                  /* lo */0\n                ])) {\n            var match$4 = Caml_int64.div_mod(quotient$1, wbase);\n            quotient$1 = match$4[0];\n            modulus$1 = match$4[1];\n            s = String.fromCharCode(cvtbl.charCodeAt(modulus$1[1] | 0)) + s;\n          };\n        }\n        break;\n    case 1 : \n        s = Caml_int64.to_hex(x$1) + s;\n        break;\n    case 2 : \n        var wbase$1 = /* int64 */[\n          /* hi */0,\n          /* lo */10\n        ];\n        var cvtbl$1 = \"0123456789\";\n        if (Caml_int64.lt(x$1, /* int64 */[\n                /* hi */0,\n                /* lo */0\n              ])) {\n          var y$1 = Caml_int64.discard_sign(x$1);\n          var match$5 = Caml_int64.div_mod(y$1, wbase$1);\n          var match$6 = Caml_int64.div_mod(Caml_int64.add(/* int64 */[\n                    /* hi */0,\n                    /* lo */8\n                  ], match$5[1]), wbase$1);\n          var quotient$2 = Caml_int64.add(Caml_int64.add(/* int64 */[\n                    /* hi */214748364,\n                    /* lo */3435973836\n                  ], match$5[0]), match$6[0]);\n          var modulus$2 = match$6[1];\n          s = String.fromCharCode(cvtbl$1.charCodeAt(modulus$2[1] | 0)) + s;\n          while(Caml_int64.neq(quotient$2, /* int64 */[\n                  /* hi */0,\n                  /* lo */0\n                ])) {\n            var match$7 = Caml_int64.div_mod(quotient$2, wbase$1);\n            quotient$2 = match$7[0];\n            modulus$2 = match$7[1];\n            s = String.fromCharCode(cvtbl$1.charCodeAt(modulus$2[1] | 0)) + s;\n          };\n        } else {\n          var match$8 = Caml_int64.div_mod(x$1, wbase$1);\n          var quotient$3 = match$8[0];\n          var modulus$3 = match$8[1];\n          s = String.fromCharCode(cvtbl$1.charCodeAt(modulus$3[1] | 0)) + s;\n          while(Caml_int64.neq(quotient$3, /* int64 */[\n                  /* hi */0,\n                  /* lo */0\n                ])) {\n            var match$9 = Caml_int64.div_mod(quotient$3, wbase$1);\n            quotient$3 = match$9[0];\n            modulus$3 = match$9[1];\n            s = String.fromCharCode(cvtbl$1.charCodeAt(modulus$3[1] | 0)) + s;\n          };\n        }\n        break;\n    \n  }\n  if (f[/* prec */9] >= 0) {\n    f[/* filter */2] = \" \";\n    var n = f[/* prec */9] - s.length | 0;\n    if (n > 0) {\n      s = Caml_utils.repeat(n, \"0\") + s;\n    }\n    \n  }\n  return finish_formatting(f, s);\n}\n\nfunction caml_format_float(fmt, x) {\n  var f = parse_format(fmt);\n  var prec = f[/* prec */9] < 0 ? 6 : f[/* prec */9];\n  var x$1 = x < 0 ? (f[/* sign */8] = -1, -x) : x;\n  var s = \"\";\n  if (isNaN(x$1)) {\n    s = \"nan\";\n    f[/* filter */2] = \" \";\n  } else if (isFinite(x$1)) {\n    var match = f[/* conv */10];\n    switch (match) {\n      case \"e\" : \n          s = x$1.toExponential(prec);\n          var i = s.length;\n          if (s[i - 3 | 0] === \"e\") {\n            s = s.slice(0, i - 1 | 0) + (\"0\" + s.slice(i - 1 | 0));\n          }\n          break;\n      case \"f\" : \n          s = x$1.toFixed(prec);\n          break;\n      case \"g\" : \n          var prec$1 = prec !== 0 ? prec : 1;\n          s = x$1.toExponential(prec$1 - 1 | 0);\n          var j = s.indexOf(\"e\");\n          var exp = Number(s.slice(j + 1 | 0)) | 0;\n          if (exp < -4 || x$1 >= 1e21 || x$1.toFixed().length > prec$1) {\n            var i$1 = j - 1 | 0;\n            while(s[i$1] === \"0\") {\n              i$1 = i$1 - 1 | 0;\n            };\n            if (s[i$1] === \".\") {\n              i$1 = i$1 - 1 | 0;\n            }\n            s = s.slice(0, i$1 + 1 | 0) + s.slice(j);\n            var i$2 = s.length;\n            if (s[i$2 - 3 | 0] === \"e\") {\n              s = s.slice(0, i$2 - 1 | 0) + (\"0\" + s.slice(i$2 - 1 | 0));\n            }\n            \n          } else {\n            var p = prec$1;\n            if (exp < 0) {\n              p = p - (exp + 1 | 0) | 0;\n              s = x$1.toFixed(p);\n            } else {\n              while((function () {\n                      s = x$1.toFixed(p);\n                      return s.length > (prec$1 + 1 | 0);\n                    })()) {\n                p = p - 1 | 0;\n              };\n            }\n            if (p !== 0) {\n              var k = s.length - 1 | 0;\n              while(s[k] === \"0\") {\n                k = k - 1 | 0;\n              };\n              if (s[k] === \".\") {\n                k = k - 1 | 0;\n              }\n              s = s.slice(0, k + 1 | 0);\n            }\n            \n          }\n          break;\n      default:\n        \n    }\n  } else {\n    s = \"inf\";\n    f[/* filter */2] = \" \";\n  }\n  return finish_formatting(f, s);\n}\n\nvar float_of_string = (\n  function (s, caml_failwith) {\n    var res = +s;\n    if ((s.length > 0) && (res === res))\n        return res;\n    s = s.replace(/_/g, \"\");\n    res = +s;\n    if (((s.length > 0) && (res === res)) || /^[+-]?nan$/i.test(s)) {\n        return res;\n    }\n    ;\n    if (/^ *0x[0-9a-f_]+p[+-]?[0-9_]+/i.test(s)) {\n        var pidx = s.indexOf('p');\n        pidx = (pidx == -1) ? s.indexOf('P') : pidx;\n        var exp = +s.substring(pidx + 1);\n        res = +s.substring(0, pidx);\n        return res * Math.pow(2, exp);\n    }\n    if (/^\\+?inf(inity)?$/i.test(s))\n        return Infinity;\n    if (/^-inf(inity)?$/i.test(s))\n        return -Infinity;\n    caml_failwith(\"float_of_string\");\n}\n\n);\n\nfunction caml_float_of_string(s) {\n  return Curry._2(float_of_string, s, caml_failwith);\n}\n\nvar caml_nativeint_format = caml_format_int;\n\nvar caml_int32_format = caml_format_int;\n\nvar caml_int32_of_string = caml_int_of_string;\n\nvar caml_nativeint_of_string = caml_int_of_string;\n\nexports.caml_format_float = caml_format_float;\nexports.caml_format_int = caml_format_int;\nexports.caml_nativeint_format = caml_nativeint_format;\nexports.caml_int32_format = caml_int32_format;\nexports.caml_float_of_string = caml_float_of_string;\nexports.caml_int64_format = caml_int64_format;\nexports.caml_int_of_string = caml_int_of_string;\nexports.caml_int32_of_string = caml_int32_of_string;\nexports.caml_int64_of_string = caml_int64_of_string;\nexports.caml_nativeint_of_string = caml_nativeint_of_string;\n/* float_of_string Not a pure module */\n","'use strict';\n\nvar Caml_builtin_exceptions = require(\"./caml_builtin_exceptions.js\");\n\nfunction string_of_char(prim) {\n  return String.fromCharCode(prim);\n}\n\nfunction caml_string_get(s, i) {\n  if (i >= s.length || i < 0) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"index out of bounds\"\n        ];\n  } else {\n    return s.charCodeAt(i);\n  }\n}\n\nfunction caml_create_string(len) {\n  if (len < 0) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"String.create\"\n        ];\n  } else {\n    var result = new Array(len);\n    for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n      result[i] = /* \"\\000\" */0;\n    }\n    return result;\n  }\n}\n\nfunction caml_fill_string(s, i, l, c) {\n  if (l > 0) {\n    for(var k = i ,k_finish = (l + i | 0) - 1 | 0; k <= k_finish; ++k){\n      s[k] = c;\n    }\n    return /* () */0;\n  } else {\n    return 0;\n  }\n}\n\nfunction caml_blit_string(s1, i1, s2, i2, len) {\n  if (len > 0) {\n    var off1 = s1.length - i1 | 0;\n    if (len <= off1) {\n      for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n        s2[i2 + i | 0] = s1.charCodeAt(i1 + i | 0);\n      }\n      return /* () */0;\n    } else {\n      for(var i$1 = 0 ,i_finish$1 = off1 - 1 | 0; i$1 <= i_finish$1; ++i$1){\n        s2[i2 + i$1 | 0] = s1.charCodeAt(i1 + i$1 | 0);\n      }\n      for(var i$2 = off1 ,i_finish$2 = len - 1 | 0; i$2 <= i_finish$2; ++i$2){\n        s2[i2 + i$2 | 0] = /* \"\\000\" */0;\n      }\n      return /* () */0;\n    }\n  } else {\n    return 0;\n  }\n}\n\nfunction caml_blit_bytes(s1, i1, s2, i2, len) {\n  if (len > 0) {\n    if (s1 === s2) {\n      var s1$1 = s1;\n      var i1$1 = i1;\n      var i2$1 = i2;\n      var len$1 = len;\n      if (i1$1 < i2$1) {\n        var range_a = (s1$1.length - i2$1 | 0) - 1 | 0;\n        var range_b = len$1 - 1 | 0;\n        var range = range_a > range_b ? range_b : range_a;\n        for(var j = range; j >= 0; --j){\n          s1$1[i2$1 + j | 0] = s1$1[i1$1 + j | 0];\n        }\n        return /* () */0;\n      } else if (i1$1 > i2$1) {\n        var range_a$1 = (s1$1.length - i1$1 | 0) - 1 | 0;\n        var range_b$1 = len$1 - 1 | 0;\n        var range$1 = range_a$1 > range_b$1 ? range_b$1 : range_a$1;\n        for(var k = 0; k <= range$1; ++k){\n          s1$1[i2$1 + k | 0] = s1$1[i1$1 + k | 0];\n        }\n        return /* () */0;\n      } else {\n        return 0;\n      }\n    } else {\n      var off1 = s1.length - i1 | 0;\n      if (len <= off1) {\n        for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n          s2[i2 + i | 0] = s1[i1 + i | 0];\n        }\n        return /* () */0;\n      } else {\n        for(var i$1 = 0 ,i_finish$1 = off1 - 1 | 0; i$1 <= i_finish$1; ++i$1){\n          s2[i2 + i$1 | 0] = s1[i1 + i$1 | 0];\n        }\n        for(var i$2 = off1 ,i_finish$2 = len - 1 | 0; i$2 <= i_finish$2; ++i$2){\n          s2[i2 + i$2 | 0] = /* \"\\000\" */0;\n        }\n        return /* () */0;\n      }\n    }\n  } else {\n    return 0;\n  }\n}\n\nfunction bytes_of_string(s) {\n  var len = s.length;\n  var res = new Array(len);\n  for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n    res[i] = s.charCodeAt(i);\n  }\n  return res;\n}\n\nfunction bytes_to_string(a) {\n  var bytes = a;\n  var i = 0;\n  var len = a.length;\n  var s = \"\";\n  var s_len = len;\n  if (i === 0 && len <= 4096 && len === bytes.length) {\n    return String.fromCharCode.apply(null, bytes);\n  } else {\n    var offset = 0;\n    while(s_len > 0) {\n      var next = s_len < 1024 ? s_len : 1024;\n      var tmp_bytes = new Array(next);\n      caml_blit_bytes(bytes, offset, tmp_bytes, 0, next);\n      s = s + String.fromCharCode.apply(null, tmp_bytes);\n      s_len = s_len - next | 0;\n      offset = offset + next | 0;\n    };\n    return s;\n  }\n}\n\nfunction caml_string_of_char_array(chars) {\n  var len = chars.length;\n  var bytes = new Array(len);\n  for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n    bytes[i] = chars[i];\n  }\n  return bytes_to_string(bytes);\n}\n\nfunction caml_is_printable(c) {\n  if (c > 31) {\n    return c < 127;\n  } else {\n    return false;\n  }\n}\n\nfunction caml_string_get16(s, i) {\n  return s.charCodeAt(i) + (s.charCodeAt(i + 1 | 0) << 8) | 0;\n}\n\nfunction caml_string_get32(s, i) {\n  return ((s.charCodeAt(i) + (s.charCodeAt(i + 1 | 0) << 8) | 0) + (s.charCodeAt(i + 2 | 0) << 16) | 0) + (s.charCodeAt(i + 3 | 0) << 24) | 0;\n}\n\nfunction get(s, i) {\n  if (i < 0 || i >= s.length) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"index out of bounds\"\n        ];\n  } else {\n    return s.charCodeAt(i);\n  }\n}\n\nexports.bytes_of_string = bytes_of_string;\nexports.bytes_to_string = bytes_to_string;\nexports.caml_is_printable = caml_is_printable;\nexports.caml_string_of_char_array = caml_string_of_char_array;\nexports.caml_string_get = caml_string_get;\nexports.caml_create_string = caml_create_string;\nexports.caml_fill_string = caml_fill_string;\nexports.caml_blit_string = caml_blit_string;\nexports.caml_blit_bytes = caml_blit_bytes;\nexports.caml_string_get16 = caml_string_get16;\nexports.caml_string_get32 = caml_string_get32;\nexports.string_of_char = string_of_char;\nexports.get = get;\n/* No side effect */\n","'use strict';\n\n\nvar id = [0];\n\nfunction caml_set_oo_id(b) {\n  b[1] = id[0];\n  id[0] += 1;\n  return b;\n}\n\nfunction get_id() {\n  id[0] += 1;\n  return id[0];\n}\n\nfunction create(str) {\n  var v_001 = get_id(/* () */0);\n  var v = /* tuple */[\n    str,\n    v_001\n  ];\n  v.tag = 248;\n  return v;\n}\n\nfunction isCamlExceptionOrOpenVariant(e) {\n  if (e === undefined) {\n    return false;\n  } else if (e.tag === 248) {\n    return true;\n  } else {\n    var slot = e[0];\n    if (slot !== undefined) {\n      return slot.tag === 248;\n    } else {\n      return false;\n    }\n  }\n}\n\nexports.caml_set_oo_id = caml_set_oo_id;\nexports.get_id = get_id;\nexports.create = create;\nexports.isCamlExceptionOrOpenVariant = isCamlExceptionOrOpenVariant;\n/* No side effect */\n","'use strict';\n\n\nfunction not_implemented(s) {\n  var str = s + \" not implemented by BuckleScript yet\\n\";\n  throw new Error(str);\n}\n\nexports.not_implemented = not_implemented;\n/* No side effect */\n","'use strict';\n\nvar Block = require(\"./block.js\");\n\nfunction erase_rel(param) {\n  if (typeof param === \"number\") {\n    return /* End_of_fmtty */0;\n  } else {\n    switch (param.tag | 0) {\n      case 0 : \n          return /* Char_ty */Block.__(0, [erase_rel(param[0])]);\n      case 1 : \n          return /* String_ty */Block.__(1, [erase_rel(param[0])]);\n      case 2 : \n          return /* Int_ty */Block.__(2, [erase_rel(param[0])]);\n      case 3 : \n          return /* Int32_ty */Block.__(3, [erase_rel(param[0])]);\n      case 4 : \n          return /* Nativeint_ty */Block.__(4, [erase_rel(param[0])]);\n      case 5 : \n          return /* Int64_ty */Block.__(5, [erase_rel(param[0])]);\n      case 6 : \n          return /* Float_ty */Block.__(6, [erase_rel(param[0])]);\n      case 7 : \n          return /* Bool_ty */Block.__(7, [erase_rel(param[0])]);\n      case 8 : \n          return /* Format_arg_ty */Block.__(8, [\n                    param[0],\n                    erase_rel(param[1])\n                  ]);\n      case 9 : \n          var ty1 = param[0];\n          return /* Format_subst_ty */Block.__(9, [\n                    ty1,\n                    ty1,\n                    erase_rel(param[2])\n                  ]);\n      case 10 : \n          return /* Alpha_ty */Block.__(10, [erase_rel(param[0])]);\n      case 11 : \n          return /* Theta_ty */Block.__(11, [erase_rel(param[0])]);\n      case 12 : \n          return /* Any_ty */Block.__(12, [erase_rel(param[0])]);\n      case 13 : \n          return /* Reader_ty */Block.__(13, [erase_rel(param[0])]);\n      case 14 : \n          return /* Ignored_reader_ty */Block.__(14, [erase_rel(param[0])]);\n      \n    }\n  }\n}\n\nfunction concat_fmtty(fmtty1, fmtty2) {\n  if (typeof fmtty1 === \"number\") {\n    return fmtty2;\n  } else {\n    switch (fmtty1.tag | 0) {\n      case 0 : \n          return /* Char_ty */Block.__(0, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 1 : \n          return /* String_ty */Block.__(1, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 2 : \n          return /* Int_ty */Block.__(2, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 3 : \n          return /* Int32_ty */Block.__(3, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 4 : \n          return /* Nativeint_ty */Block.__(4, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 5 : \n          return /* Int64_ty */Block.__(5, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 6 : \n          return /* Float_ty */Block.__(6, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 7 : \n          return /* Bool_ty */Block.__(7, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 8 : \n          return /* Format_arg_ty */Block.__(8, [\n                    fmtty1[0],\n                    concat_fmtty(fmtty1[1], fmtty2)\n                  ]);\n      case 9 : \n          return /* Format_subst_ty */Block.__(9, [\n                    fmtty1[0],\n                    fmtty1[1],\n                    concat_fmtty(fmtty1[2], fmtty2)\n                  ]);\n      case 10 : \n          return /* Alpha_ty */Block.__(10, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 11 : \n          return /* Theta_ty */Block.__(11, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 12 : \n          return /* Any_ty */Block.__(12, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 13 : \n          return /* Reader_ty */Block.__(13, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 14 : \n          return /* Ignored_reader_ty */Block.__(14, [concat_fmtty(fmtty1[0], fmtty2)]);\n      \n    }\n  }\n}\n\nfunction concat_fmt(fmt1, fmt2) {\n  if (typeof fmt1 === \"number\") {\n    return fmt2;\n  } else {\n    switch (fmt1.tag | 0) {\n      case 0 : \n          return /* Char */Block.__(0, [concat_fmt(fmt1[0], fmt2)]);\n      case 1 : \n          return /* Caml_char */Block.__(1, [concat_fmt(fmt1[0], fmt2)]);\n      case 2 : \n          return /* String */Block.__(2, [\n                    fmt1[0],\n                    concat_fmt(fmt1[1], fmt2)\n                  ]);\n      case 3 : \n          return /* Caml_string */Block.__(3, [\n                    fmt1[0],\n                    concat_fmt(fmt1[1], fmt2)\n                  ]);\n      case 4 : \n          return /* Int */Block.__(4, [\n                    fmt1[0],\n                    fmt1[1],\n                    fmt1[2],\n                    concat_fmt(fmt1[3], fmt2)\n                  ]);\n      case 5 : \n          return /* Int32 */Block.__(5, [\n                    fmt1[0],\n                    fmt1[1],\n                    fmt1[2],\n                    concat_fmt(fmt1[3], fmt2)\n                  ]);\n      case 6 : \n          return /* Nativeint */Block.__(6, [\n                    fmt1[0],\n                    fmt1[1],\n                    fmt1[2],\n                    concat_fmt(fmt1[3], fmt2)\n                  ]);\n      case 7 : \n          return /* Int64 */Block.__(7, [\n                    fmt1[0],\n                    fmt1[1],\n                    fmt1[2],\n                    concat_fmt(fmt1[3], fmt2)\n                  ]);\n      case 8 : \n          return /* Float */Block.__(8, [\n                    fmt1[0],\n                    fmt1[1],\n                    fmt1[2],\n                    concat_fmt(fmt1[3], fmt2)\n                  ]);\n      case 9 : \n          return /* Bool */Block.__(9, [concat_fmt(fmt1[0], fmt2)]);\n      case 10 : \n          return /* Flush */Block.__(10, [concat_fmt(fmt1[0], fmt2)]);\n      case 11 : \n          return /* String_literal */Block.__(11, [\n                    fmt1[0],\n                    concat_fmt(fmt1[1], fmt2)\n                  ]);\n      case 12 : \n          return /* Char_literal */Block.__(12, [\n                    fmt1[0],\n                    concat_fmt(fmt1[1], fmt2)\n                  ]);\n      case 13 : \n          return /* Format_arg */Block.__(13, [\n                    fmt1[0],\n                    fmt1[1],\n                    concat_fmt(fmt1[2], fmt2)\n                  ]);\n      case 14 : \n          return /* Format_subst */Block.__(14, [\n                    fmt1[0],\n                    fmt1[1],\n                    concat_fmt(fmt1[2], fmt2)\n                  ]);\n      case 15 : \n          return /* Alpha */Block.__(15, [concat_fmt(fmt1[0], fmt2)]);\n      case 16 : \n          return /* Theta */Block.__(16, [concat_fmt(fmt1[0], fmt2)]);\n      case 17 : \n          return /* Formatting_lit */Block.__(17, [\n                    fmt1[0],\n                    concat_fmt(fmt1[1], fmt2)\n                  ]);\n      case 18 : \n          return /* Formatting_gen */Block.__(18, [\n                    fmt1[0],\n                    concat_fmt(fmt1[1], fmt2)\n                  ]);\n      case 19 : \n          return /* Reader */Block.__(19, [concat_fmt(fmt1[0], fmt2)]);\n      case 20 : \n          return /* Scan_char_set */Block.__(20, [\n                    fmt1[0],\n                    fmt1[1],\n                    concat_fmt(fmt1[2], fmt2)\n                  ]);\n      case 21 : \n          return /* Scan_get_counter */Block.__(21, [\n                    fmt1[0],\n                    concat_fmt(fmt1[1], fmt2)\n                  ]);\n      case 22 : \n          return /* Scan_next_char */Block.__(22, [concat_fmt(fmt1[0], fmt2)]);\n      case 23 : \n          return /* Ignored_param */Block.__(23, [\n                    fmt1[0],\n                    concat_fmt(fmt1[1], fmt2)\n                  ]);\n      case 24 : \n          return /* Custom */Block.__(24, [\n                    fmt1[0],\n                    fmt1[1],\n                    concat_fmt(fmt1[2], fmt2)\n                  ]);\n      \n    }\n  }\n}\n\nexports.concat_fmtty = concat_fmtty;\nexports.erase_rel = erase_rel;\nexports.concat_fmt = concat_fmt;\n/* No side effect */\n","'use strict';\n\nvar Curry = require(\"./curry.js\");\nvar Caml_io = require(\"./caml_io.js\");\nvar Caml_sys = require(\"./caml_sys.js\");\nvar Caml_format = require(\"./caml_format.js\");\nvar Caml_string = require(\"./caml_string.js\");\nvar Caml_exceptions = require(\"./caml_exceptions.js\");\nvar Caml_missing_polyfill = require(\"./caml_missing_polyfill.js\");\nvar Caml_builtin_exceptions = require(\"./caml_builtin_exceptions.js\");\nvar CamlinternalFormatBasics = require(\"./camlinternalFormatBasics.js\");\n\nfunction failwith(s) {\n  throw [\n        Caml_builtin_exceptions.failure,\n        s\n      ];\n}\n\nfunction invalid_arg(s) {\n  throw [\n        Caml_builtin_exceptions.invalid_argument,\n        s\n      ];\n}\n\nvar Exit = Caml_exceptions.create(\"Pervasives.Exit\");\n\nfunction abs(x) {\n  if (x >= 0) {\n    return x;\n  } else {\n    return -x | 0;\n  }\n}\n\nfunction lnot(x) {\n  return x ^ -1;\n}\n\nvar min_int = -2147483648;\n\nfunction char_of_int(n) {\n  if (n < 0 || n > 255) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"char_of_int\"\n        ];\n  } else {\n    return n;\n  }\n}\n\nfunction string_of_bool(b) {\n  if (b) {\n    return \"true\";\n  } else {\n    return \"false\";\n  }\n}\n\nfunction bool_of_string(param) {\n  switch (param) {\n    case \"false\" : \n        return false;\n    case \"true\" : \n        return true;\n    default:\n      throw [\n            Caml_builtin_exceptions.invalid_argument,\n            \"bool_of_string\"\n          ];\n  }\n}\n\nfunction valid_float_lexem(s) {\n  var l = s.length;\n  var _i = 0;\n  while(true) {\n    var i = _i;\n    if (i >= l) {\n      return s + \".\";\n    } else {\n      var match = Caml_string.get(s, i);\n      if (match >= 48) {\n        if (match >= 58) {\n          return s;\n        } else {\n          _i = i + 1 | 0;\n          continue ;\n        }\n      } else if (match !== 45) {\n        return s;\n      } else {\n        _i = i + 1 | 0;\n        continue ;\n      }\n    }\n  };\n}\n\nfunction string_of_float(f) {\n  return valid_float_lexem(Caml_format.caml_format_float(\"%.12g\", f));\n}\n\nfunction $at(l1, l2) {\n  if (l1) {\n    return /* :: */[\n            l1[0],\n            $at(l1[1], l2)\n          ];\n  } else {\n    return l2;\n  }\n}\n\nvar stdin = Caml_io.stdin;\n\nvar stdout = Caml_io.stdout;\n\nvar stderr = Caml_io.stderr;\n\nfunction open_out_gen(_, _$1, _$2) {\n  return Caml_io.caml_ml_open_descriptor_out(Caml_missing_polyfill.not_implemented(\"caml_sys_open\"));\n}\n\nfunction open_out(name) {\n  return open_out_gen(/* :: */[\n              /* Open_wronly */1,\n              /* :: */[\n                /* Open_creat */3,\n                /* :: */[\n                  /* Open_trunc */4,\n                  /* :: */[\n                    /* Open_text */7,\n                    /* [] */0\n                  ]\n                ]\n              ]\n            ], 438, name);\n}\n\nfunction open_out_bin(name) {\n  return open_out_gen(/* :: */[\n              /* Open_wronly */1,\n              /* :: */[\n                /* Open_creat */3,\n                /* :: */[\n                  /* Open_trunc */4,\n                  /* :: */[\n                    /* Open_binary */6,\n                    /* [] */0\n                  ]\n                ]\n              ]\n            ], 438, name);\n}\n\nfunction flush_all() {\n  var _param = Caml_io.caml_ml_out_channels_list(/* () */0);\n  while(true) {\n    var param = _param;\n    if (param) {\n      try {\n        Caml_io.caml_ml_flush(param[0]);\n      }\n      catch (exn){\n        \n      }\n      _param = param[1];\n      continue ;\n    } else {\n      return /* () */0;\n    }\n  };\n}\n\nfunction output_bytes(oc, s) {\n  return Caml_io.caml_ml_output(oc, s, 0, s.length);\n}\n\nfunction output_string(oc, s) {\n  return Caml_io.caml_ml_output(oc, s, 0, s.length);\n}\n\nfunction output(oc, s, ofs, len) {\n  if (ofs < 0 || len < 0 || ofs > (s.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"output\"\n        ];\n  } else {\n    return Caml_io.caml_ml_output(oc, s, ofs, len);\n  }\n}\n\nfunction output_substring(oc, s, ofs, len) {\n  if (ofs < 0 || len < 0 || ofs > (s.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"output_substring\"\n        ];\n  } else {\n    return Caml_io.caml_ml_output(oc, s, ofs, len);\n  }\n}\n\nfunction output_value(_, _$1) {\n  return Caml_missing_polyfill.not_implemented(\"caml_output_value\");\n}\n\nfunction close_out(oc) {\n  Caml_io.caml_ml_flush(oc);\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_close_channel\");\n}\n\nfunction close_out_noerr(oc) {\n  try {\n    Caml_io.caml_ml_flush(oc);\n  }\n  catch (exn){\n    \n  }\n  try {\n    return Caml_missing_polyfill.not_implemented(\"caml_ml_close_channel\");\n  }\n  catch (exn$1){\n    return /* () */0;\n  }\n}\n\nfunction open_in_gen(_, _$1, _$2) {\n  return Caml_io.caml_ml_open_descriptor_in(Caml_missing_polyfill.not_implemented(\"caml_sys_open\"));\n}\n\nfunction open_in(name) {\n  return open_in_gen(/* :: */[\n              /* Open_rdonly */0,\n              /* :: */[\n                /* Open_text */7,\n                /* [] */0\n              ]\n            ], 0, name);\n}\n\nfunction open_in_bin(name) {\n  return open_in_gen(/* :: */[\n              /* Open_rdonly */0,\n              /* :: */[\n                /* Open_binary */6,\n                /* [] */0\n              ]\n            ], 0, name);\n}\n\nfunction input(_, s, ofs, len) {\n  if (ofs < 0 || len < 0 || ofs > (s.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"input\"\n        ];\n  } else {\n    return Caml_missing_polyfill.not_implemented(\"caml_ml_input\");\n  }\n}\n\nfunction unsafe_really_input(_, _$1, _ofs, _len) {\n  while(true) {\n    var len = _len;\n    var ofs = _ofs;\n    if (len <= 0) {\n      return /* () */0;\n    } else {\n      var r = Caml_missing_polyfill.not_implemented(\"caml_ml_input\");\n      if (r === 0) {\n        throw Caml_builtin_exceptions.end_of_file;\n      } else {\n        _len = len - r | 0;\n        _ofs = ofs + r | 0;\n        continue ;\n      }\n    }\n  };\n}\n\nfunction really_input(ic, s, ofs, len) {\n  if (ofs < 0 || len < 0 || ofs > (s.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"really_input\"\n        ];\n  } else {\n    return unsafe_really_input(ic, s, ofs, len);\n  }\n}\n\nfunction really_input_string(ic, len) {\n  var s = Caml_string.caml_create_string(len);\n  really_input(ic, s, 0, len);\n  return Caml_string.bytes_to_string(s);\n}\n\nfunction input_line(chan) {\n  var build_result = function (buf, _pos, _param) {\n    while(true) {\n      var param = _param;\n      var pos = _pos;\n      if (param) {\n        var hd = param[0];\n        var len = hd.length;\n        Caml_string.caml_blit_bytes(hd, 0, buf, pos - len | 0, len);\n        _param = param[1];\n        _pos = pos - len | 0;\n        continue ;\n      } else {\n        return buf;\n      }\n    };\n  };\n  var scan = function (_accu, _len) {\n    while(true) {\n      var len = _len;\n      var accu = _accu;\n      var n = Caml_missing_polyfill.not_implemented(\"caml_ml_input_scan_line\");\n      if (n === 0) {\n        if (accu) {\n          return build_result(Caml_string.caml_create_string(len), len, accu);\n        } else {\n          throw Caml_builtin_exceptions.end_of_file;\n        }\n      } else if (n > 0) {\n        var res = Caml_string.caml_create_string(n - 1 | 0);\n        Caml_missing_polyfill.not_implemented(\"caml_ml_input\");\n        Caml_io.caml_ml_input_char(chan);\n        if (accu) {\n          var len$1 = (len + n | 0) - 1 | 0;\n          return build_result(Caml_string.caml_create_string(len$1), len$1, /* :: */[\n                      res,\n                      accu\n                    ]);\n        } else {\n          return res;\n        }\n      } else {\n        var beg = Caml_string.caml_create_string(-n | 0);\n        Caml_missing_polyfill.not_implemented(\"caml_ml_input\");\n        _len = len - n | 0;\n        _accu = /* :: */[\n          beg,\n          accu\n        ];\n        continue ;\n      }\n    };\n  };\n  return Caml_string.bytes_to_string(scan(/* [] */0, 0));\n}\n\nfunction close_in_noerr() {\n  try {\n    return Caml_missing_polyfill.not_implemented(\"caml_ml_close_channel\");\n  }\n  catch (exn){\n    return /* () */0;\n  }\n}\n\nfunction print_char(c) {\n  return Caml_io.caml_ml_output_char(stdout, c);\n}\n\nfunction print_string(s) {\n  return output_string(stdout, s);\n}\n\nfunction print_bytes(s) {\n  return output_bytes(stdout, s);\n}\n\nfunction print_int(i) {\n  return output_string(stdout, String(i));\n}\n\nfunction print_float(f) {\n  return output_string(stdout, valid_float_lexem(Caml_format.caml_format_float(\"%.12g\", f)));\n}\n\nfunction print_newline() {\n  Caml_io.caml_ml_output_char(stdout, /* \"\\n\" */10);\n  return Caml_io.caml_ml_flush(stdout);\n}\n\nfunction prerr_char(c) {\n  return Caml_io.caml_ml_output_char(stderr, c);\n}\n\nfunction prerr_string(s) {\n  return output_string(stderr, s);\n}\n\nfunction prerr_bytes(s) {\n  return output_bytes(stderr, s);\n}\n\nfunction prerr_int(i) {\n  return output_string(stderr, String(i));\n}\n\nfunction prerr_float(f) {\n  return output_string(stderr, valid_float_lexem(Caml_format.caml_format_float(\"%.12g\", f)));\n}\n\nfunction prerr_newline() {\n  Caml_io.caml_ml_output_char(stderr, /* \"\\n\" */10);\n  return Caml_io.caml_ml_flush(stderr);\n}\n\nfunction read_line() {\n  Caml_io.caml_ml_flush(stdout);\n  return input_line(stdin);\n}\n\nfunction read_int() {\n  return Caml_format.caml_int_of_string((Caml_io.caml_ml_flush(stdout), input_line(stdin)));\n}\n\nfunction read_float() {\n  return Caml_format.caml_float_of_string((Caml_io.caml_ml_flush(stdout), input_line(stdin)));\n}\n\nfunction string_of_format(param) {\n  return param[1];\n}\n\nfunction $caret$caret(param, param$1) {\n  return /* Format */[\n          CamlinternalFormatBasics.concat_fmt(param[0], param$1[0]),\n          param[1] + (\"%,\" + param$1[1])\n        ];\n}\n\nvar exit_function = [flush_all];\n\nfunction at_exit(f) {\n  var g = exit_function[0];\n  exit_function[0] = (function () {\n      Curry._1(f, /* () */0);\n      return Curry._1(g, /* () */0);\n    });\n  return /* () */0;\n}\n\nfunction do_at_exit() {\n  return Curry._1(exit_function[0], /* () */0);\n}\n\nfunction exit(retcode) {\n  do_at_exit(/* () */0);\n  return Caml_sys.caml_sys_exit(retcode);\n}\n\nvar max_int = 2147483647;\n\nvar epsilon_float = 2.220446049250313e-16;\n\nvar flush = Caml_io.caml_ml_flush;\n\nvar output_char = Caml_io.caml_ml_output_char;\n\nvar output_byte = Caml_io.caml_ml_output_char;\n\nfunction output_binary_int(_, _$1) {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_output_int\");\n}\n\nfunction seek_out(_, _$1) {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_seek_out\");\n}\n\nfunction pos_out() {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_pos_out\");\n}\n\nfunction out_channel_length() {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_channel_size\");\n}\n\nfunction set_binary_mode_out(_, _$1) {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_set_binary_mode\");\n}\n\nvar input_char = Caml_io.caml_ml_input_char;\n\nvar input_byte = Caml_io.caml_ml_input_char;\n\nfunction input_binary_int() {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_input_int\");\n}\n\nfunction input_value() {\n  return Caml_missing_polyfill.not_implemented(\"caml_input_value\");\n}\n\nfunction seek_in(_, _$1) {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_seek_in\");\n}\n\nfunction pos_in() {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_pos_in\");\n}\n\nfunction in_channel_length() {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_channel_size\");\n}\n\nfunction close_in() {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_close_channel\");\n}\n\nfunction set_binary_mode_in(_, _$1) {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_set_binary_mode\");\n}\n\nfunction LargeFile_000(_, _$1) {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_seek_out_64\");\n}\n\nfunction LargeFile_001() {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_pos_out_64\");\n}\n\nfunction LargeFile_002() {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_channel_size_64\");\n}\n\nfunction LargeFile_003(_, _$1) {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_seek_in_64\");\n}\n\nfunction LargeFile_004() {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_pos_in_64\");\n}\n\nfunction LargeFile_005() {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_channel_size_64\");\n}\n\nvar LargeFile = [\n  LargeFile_000,\n  LargeFile_001,\n  LargeFile_002,\n  LargeFile_003,\n  LargeFile_004,\n  LargeFile_005\n];\n\nexports.invalid_arg = invalid_arg;\nexports.failwith = failwith;\nexports.Exit = Exit;\nexports.abs = abs;\nexports.max_int = max_int;\nexports.min_int = min_int;\nexports.lnot = lnot;\nexports.epsilon_float = epsilon_float;\nexports.char_of_int = char_of_int;\nexports.string_of_bool = string_of_bool;\nexports.bool_of_string = bool_of_string;\nexports.string_of_float = string_of_float;\nexports.$at = $at;\nexports.stdin = stdin;\nexports.stdout = stdout;\nexports.stderr = stderr;\nexports.print_char = print_char;\nexports.print_string = print_string;\nexports.print_bytes = print_bytes;\nexports.print_int = print_int;\nexports.print_float = print_float;\nexports.print_newline = print_newline;\nexports.prerr_char = prerr_char;\nexports.prerr_string = prerr_string;\nexports.prerr_bytes = prerr_bytes;\nexports.prerr_int = prerr_int;\nexports.prerr_float = prerr_float;\nexports.prerr_newline = prerr_newline;\nexports.read_line = read_line;\nexports.read_int = read_int;\nexports.read_float = read_float;\nexports.open_out = open_out;\nexports.open_out_bin = open_out_bin;\nexports.open_out_gen = open_out_gen;\nexports.flush = flush;\nexports.flush_all = flush_all;\nexports.output_char = output_char;\nexports.output_string = output_string;\nexports.output_bytes = output_bytes;\nexports.output = output;\nexports.output_substring = output_substring;\nexports.output_byte = output_byte;\nexports.output_binary_int = output_binary_int;\nexports.output_value = output_value;\nexports.seek_out = seek_out;\nexports.pos_out = pos_out;\nexports.out_channel_length = out_channel_length;\nexports.close_out = close_out;\nexports.close_out_noerr = close_out_noerr;\nexports.set_binary_mode_out = set_binary_mode_out;\nexports.open_in = open_in;\nexports.open_in_bin = open_in_bin;\nexports.open_in_gen = open_in_gen;\nexports.input_char = input_char;\nexports.input_line = input_line;\nexports.input = input;\nexports.really_input = really_input;\nexports.really_input_string = really_input_string;\nexports.input_byte = input_byte;\nexports.input_binary_int = input_binary_int;\nexports.input_value = input_value;\nexports.seek_in = seek_in;\nexports.pos_in = pos_in;\nexports.in_channel_length = in_channel_length;\nexports.close_in = close_in;\nexports.close_in_noerr = close_in_noerr;\nexports.set_binary_mode_in = set_binary_mode_in;\nexports.LargeFile = LargeFile;\nexports.string_of_format = string_of_format;\nexports.$caret$caret = $caret$caret;\nexports.exit = exit;\nexports.at_exit = at_exit;\nexports.valid_float_lexem = valid_float_lexem;\nexports.unsafe_really_input = unsafe_really_input;\nexports.do_at_exit = do_at_exit;\n/* No side effect */\n","'use strict';\n\nvar Curry = require(\"./curry.js\");\nvar Caml_obj = require(\"./caml_obj.js\");\nvar Pervasives = require(\"./pervasives.js\");\nvar Caml_builtin_exceptions = require(\"./caml_builtin_exceptions.js\");\n\nfunction length(l) {\n  var _len = 0;\n  var _param = l;\n  while(true) {\n    var param = _param;\n    var len = _len;\n    if (param) {\n      _param = param[1];\n      _len = len + 1 | 0;\n      continue ;\n    } else {\n      return len;\n    }\n  };\n}\n\nfunction hd(param) {\n  if (param) {\n    return param[0];\n  } else {\n    throw [\n          Caml_builtin_exceptions.failure,\n          \"hd\"\n        ];\n  }\n}\n\nfunction tl(param) {\n  if (param) {\n    return param[1];\n  } else {\n    throw [\n          Caml_builtin_exceptions.failure,\n          \"tl\"\n        ];\n  }\n}\n\nfunction nth(l, n) {\n  if (n < 0) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"List.nth\"\n        ];\n  } else {\n    var _l = l;\n    var _n = n;\n    while(true) {\n      var n$1 = _n;\n      var l$1 = _l;\n      if (l$1) {\n        if (n$1 === 0) {\n          return l$1[0];\n        } else {\n          _n = n$1 - 1 | 0;\n          _l = l$1[1];\n          continue ;\n        }\n      } else {\n        throw [\n              Caml_builtin_exceptions.failure,\n              \"nth\"\n            ];\n      }\n    };\n  }\n}\n\nfunction rev_append(_l1, _l2) {\n  while(true) {\n    var l2 = _l2;\n    var l1 = _l1;\n    if (l1) {\n      _l2 = /* :: */[\n        l1[0],\n        l2\n      ];\n      _l1 = l1[1];\n      continue ;\n    } else {\n      return l2;\n    }\n  };\n}\n\nfunction rev(l) {\n  return rev_append(l, /* [] */0);\n}\n\nfunction flatten(param) {\n  if (param) {\n    return Pervasives.$at(param[0], flatten(param[1]));\n  } else {\n    return /* [] */0;\n  }\n}\n\nfunction map(f, param) {\n  if (param) {\n    var r = Curry._1(f, param[0]);\n    return /* :: */[\n            r,\n            map(f, param[1])\n          ];\n  } else {\n    return /* [] */0;\n  }\n}\n\nfunction mapi(i, f, param) {\n  if (param) {\n    var r = Curry._2(f, i, param[0]);\n    return /* :: */[\n            r,\n            mapi(i + 1 | 0, f, param[1])\n          ];\n  } else {\n    return /* [] */0;\n  }\n}\n\nfunction mapi$1(f, l) {\n  return mapi(0, f, l);\n}\n\nfunction rev_map(f, l) {\n  var _accu = /* [] */0;\n  var _param = l;\n  while(true) {\n    var param = _param;\n    var accu = _accu;\n    if (param) {\n      _param = param[1];\n      _accu = /* :: */[\n        Curry._1(f, param[0]),\n        accu\n      ];\n      continue ;\n    } else {\n      return accu;\n    }\n  };\n}\n\nfunction iter(f, _param) {\n  while(true) {\n    var param = _param;\n    if (param) {\n      Curry._1(f, param[0]);\n      _param = param[1];\n      continue ;\n    } else {\n      return /* () */0;\n    }\n  };\n}\n\nfunction iteri(f, l) {\n  var _i = 0;\n  var f$1 = f;\n  var _param = l;\n  while(true) {\n    var param = _param;\n    var i = _i;\n    if (param) {\n      Curry._2(f$1, i, param[0]);\n      _param = param[1];\n      _i = i + 1 | 0;\n      continue ;\n    } else {\n      return /* () */0;\n    }\n  };\n}\n\nfunction fold_left(f, _accu, _l) {\n  while(true) {\n    var l = _l;\n    var accu = _accu;\n    if (l) {\n      _l = l[1];\n      _accu = Curry._2(f, accu, l[0]);\n      continue ;\n    } else {\n      return accu;\n    }\n  };\n}\n\nfunction fold_right(f, l, accu) {\n  if (l) {\n    return Curry._2(f, l[0], fold_right(f, l[1], accu));\n  } else {\n    return accu;\n  }\n}\n\nfunction map2(f, l1, l2) {\n  if (l1) {\n    if (l2) {\n      var r = Curry._2(f, l1[0], l2[0]);\n      return /* :: */[\n              r,\n              map2(f, l1[1], l2[1])\n            ];\n    } else {\n      throw [\n            Caml_builtin_exceptions.invalid_argument,\n            \"List.map2\"\n          ];\n    }\n  } else if (l2) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"List.map2\"\n        ];\n  } else {\n    return /* [] */0;\n  }\n}\n\nfunction rev_map2(f, l1, l2) {\n  var _accu = /* [] */0;\n  var _l1 = l1;\n  var _l2 = l2;\n  while(true) {\n    var l2$1 = _l2;\n    var l1$1 = _l1;\n    var accu = _accu;\n    if (l1$1) {\n      if (l2$1) {\n        _l2 = l2$1[1];\n        _l1 = l1$1[1];\n        _accu = /* :: */[\n          Curry._2(f, l1$1[0], l2$1[0]),\n          accu\n        ];\n        continue ;\n      } else {\n        throw [\n              Caml_builtin_exceptions.invalid_argument,\n              \"List.rev_map2\"\n            ];\n      }\n    } else if (l2$1) {\n      throw [\n            Caml_builtin_exceptions.invalid_argument,\n            \"List.rev_map2\"\n          ];\n    } else {\n      return accu;\n    }\n  };\n}\n\nfunction iter2(f, _l1, _l2) {\n  while(true) {\n    var l2 = _l2;\n    var l1 = _l1;\n    if (l1) {\n      if (l2) {\n        Curry._2(f, l1[0], l2[0]);\n        _l2 = l2[1];\n        _l1 = l1[1];\n        continue ;\n      } else {\n        throw [\n              Caml_builtin_exceptions.invalid_argument,\n              \"List.iter2\"\n            ];\n      }\n    } else if (l2) {\n      throw [\n            Caml_builtin_exceptions.invalid_argument,\n            \"List.iter2\"\n          ];\n    } else {\n      return /* () */0;\n    }\n  };\n}\n\nfunction fold_left2(f, _accu, _l1, _l2) {\n  while(true) {\n    var l2 = _l2;\n    var l1 = _l1;\n    var accu = _accu;\n    if (l1) {\n      if (l2) {\n        _l2 = l2[1];\n        _l1 = l1[1];\n        _accu = Curry._3(f, accu, l1[0], l2[0]);\n        continue ;\n      } else {\n        throw [\n              Caml_builtin_exceptions.invalid_argument,\n              \"List.fold_left2\"\n            ];\n      }\n    } else if (l2) {\n      throw [\n            Caml_builtin_exceptions.invalid_argument,\n            \"List.fold_left2\"\n          ];\n    } else {\n      return accu;\n    }\n  };\n}\n\nfunction fold_right2(f, l1, l2, accu) {\n  if (l1) {\n    if (l2) {\n      return Curry._3(f, l1[0], l2[0], fold_right2(f, l1[1], l2[1], accu));\n    } else {\n      throw [\n            Caml_builtin_exceptions.invalid_argument,\n            \"List.fold_right2\"\n          ];\n    }\n  } else if (l2) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"List.fold_right2\"\n        ];\n  } else {\n    return accu;\n  }\n}\n\nfunction for_all(p, _param) {\n  while(true) {\n    var param = _param;\n    if (param) {\n      if (Curry._1(p, param[0])) {\n        _param = param[1];\n        continue ;\n      } else {\n        return false;\n      }\n    } else {\n      return true;\n    }\n  };\n}\n\nfunction exists(p, _param) {\n  while(true) {\n    var param = _param;\n    if (param) {\n      if (Curry._1(p, param[0])) {\n        return true;\n      } else {\n        _param = param[1];\n        continue ;\n      }\n    } else {\n      return false;\n    }\n  };\n}\n\nfunction for_all2(p, _l1, _l2) {\n  while(true) {\n    var l2 = _l2;\n    var l1 = _l1;\n    if (l1) {\n      if (l2) {\n        if (Curry._2(p, l1[0], l2[0])) {\n          _l2 = l2[1];\n          _l1 = l1[1];\n          continue ;\n        } else {\n          return false;\n        }\n      } else {\n        throw [\n              Caml_builtin_exceptions.invalid_argument,\n              \"List.for_all2\"\n            ];\n      }\n    } else if (l2) {\n      throw [\n            Caml_builtin_exceptions.invalid_argument,\n            \"List.for_all2\"\n          ];\n    } else {\n      return true;\n    }\n  };\n}\n\nfunction exists2(p, _l1, _l2) {\n  while(true) {\n    var l2 = _l2;\n    var l1 = _l1;\n    if (l1) {\n      if (l2) {\n        if (Curry._2(p, l1[0], l2[0])) {\n          return true;\n        } else {\n          _l2 = l2[1];\n          _l1 = l1[1];\n          continue ;\n        }\n      } else {\n        throw [\n              Caml_builtin_exceptions.invalid_argument,\n              \"List.exists2\"\n            ];\n      }\n    } else if (l2) {\n      throw [\n            Caml_builtin_exceptions.invalid_argument,\n            \"List.exists2\"\n          ];\n    } else {\n      return false;\n    }\n  };\n}\n\nfunction mem(x, _param) {\n  while(true) {\n    var param = _param;\n    if (param) {\n      if (Caml_obj.caml_equal(param[0], x)) {\n        return true;\n      } else {\n        _param = param[1];\n        continue ;\n      }\n    } else {\n      return false;\n    }\n  };\n}\n\nfunction memq(x, _param) {\n  while(true) {\n    var param = _param;\n    if (param) {\n      if (param[0] === x) {\n        return true;\n      } else {\n        _param = param[1];\n        continue ;\n      }\n    } else {\n      return false;\n    }\n  };\n}\n\nfunction assoc(x, _param) {\n  while(true) {\n    var param = _param;\n    if (param) {\n      var match = param[0];\n      if (Caml_obj.caml_equal(match[0], x)) {\n        return match[1];\n      } else {\n        _param = param[1];\n        continue ;\n      }\n    } else {\n      throw Caml_builtin_exceptions.not_found;\n    }\n  };\n}\n\nfunction assq(x, _param) {\n  while(true) {\n    var param = _param;\n    if (param) {\n      var match = param[0];\n      if (match[0] === x) {\n        return match[1];\n      } else {\n        _param = param[1];\n        continue ;\n      }\n    } else {\n      throw Caml_builtin_exceptions.not_found;\n    }\n  };\n}\n\nfunction mem_assoc(x, _param) {\n  while(true) {\n    var param = _param;\n    if (param) {\n      if (Caml_obj.caml_equal(param[0][0], x)) {\n        return true;\n      } else {\n        _param = param[1];\n        continue ;\n      }\n    } else {\n      return false;\n    }\n  };\n}\n\nfunction mem_assq(x, _param) {\n  while(true) {\n    var param = _param;\n    if (param) {\n      if (param[0][0] === x) {\n        return true;\n      } else {\n        _param = param[1];\n        continue ;\n      }\n    } else {\n      return false;\n    }\n  };\n}\n\nfunction remove_assoc(x, param) {\n  if (param) {\n    var l = param[1];\n    var pair = param[0];\n    if (Caml_obj.caml_equal(pair[0], x)) {\n      return l;\n    } else {\n      return /* :: */[\n              pair,\n              remove_assoc(x, l)\n            ];\n    }\n  } else {\n    return /* [] */0;\n  }\n}\n\nfunction remove_assq(x, param) {\n  if (param) {\n    var l = param[1];\n    var pair = param[0];\n    if (pair[0] === x) {\n      return l;\n    } else {\n      return /* :: */[\n              pair,\n              remove_assq(x, l)\n            ];\n    }\n  } else {\n    return /* [] */0;\n  }\n}\n\nfunction find(p, _param) {\n  while(true) {\n    var param = _param;\n    if (param) {\n      var x = param[0];\n      if (Curry._1(p, x)) {\n        return x;\n      } else {\n        _param = param[1];\n        continue ;\n      }\n    } else {\n      throw Caml_builtin_exceptions.not_found;\n    }\n  };\n}\n\nfunction find_all(p) {\n  return (function (param) {\n      var _accu = /* [] */0;\n      var _param = param;\n      while(true) {\n        var param$1 = _param;\n        var accu = _accu;\n        if (param$1) {\n          var l = param$1[1];\n          var x = param$1[0];\n          if (Curry._1(p, x)) {\n            _param = l;\n            _accu = /* :: */[\n              x,\n              accu\n            ];\n            continue ;\n          } else {\n            _param = l;\n            continue ;\n          }\n        } else {\n          return rev_append(accu, /* [] */0);\n        }\n      };\n    });\n}\n\nfunction partition(p, l) {\n  var _yes = /* [] */0;\n  var _no = /* [] */0;\n  var _param = l;\n  while(true) {\n    var param = _param;\n    var no = _no;\n    var yes = _yes;\n    if (param) {\n      var l$1 = param[1];\n      var x = param[0];\n      if (Curry._1(p, x)) {\n        _param = l$1;\n        _yes = /* :: */[\n          x,\n          yes\n        ];\n        continue ;\n      } else {\n        _param = l$1;\n        _no = /* :: */[\n          x,\n          no\n        ];\n        continue ;\n      }\n    } else {\n      return /* tuple */[\n              rev_append(yes, /* [] */0),\n              rev_append(no, /* [] */0)\n            ];\n    }\n  };\n}\n\nfunction split(param) {\n  if (param) {\n    var match = param[0];\n    var match$1 = split(param[1]);\n    return /* tuple */[\n            /* :: */[\n              match[0],\n              match$1[0]\n            ],\n            /* :: */[\n              match[1],\n              match$1[1]\n            ]\n          ];\n  } else {\n    return /* tuple */[\n            /* [] */0,\n            /* [] */0\n          ];\n  }\n}\n\nfunction combine(l1, l2) {\n  if (l1) {\n    if (l2) {\n      return /* :: */[\n              /* tuple */[\n                l1[0],\n                l2[0]\n              ],\n              combine(l1[1], l2[1])\n            ];\n    } else {\n      throw [\n            Caml_builtin_exceptions.invalid_argument,\n            \"List.combine\"\n          ];\n    }\n  } else if (l2) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"List.combine\"\n        ];\n  } else {\n    return /* [] */0;\n  }\n}\n\nfunction merge(cmp, l1, l2) {\n  if (l1) {\n    if (l2) {\n      var h2 = l2[0];\n      var h1 = l1[0];\n      if (Curry._2(cmp, h1, h2) <= 0) {\n        return /* :: */[\n                h1,\n                merge(cmp, l1[1], l2)\n              ];\n      } else {\n        return /* :: */[\n                h2,\n                merge(cmp, l1, l2[1])\n              ];\n      }\n    } else {\n      return l1;\n    }\n  } else {\n    return l2;\n  }\n}\n\nfunction chop(_k, _l) {\n  while(true) {\n    var l = _l;\n    var k = _k;\n    if (k === 0) {\n      return l;\n    } else if (l) {\n      _l = l[1];\n      _k = k - 1 | 0;\n      continue ;\n    } else {\n      throw [\n            Caml_builtin_exceptions.assert_failure,\n            [\n              \"list.ml\",\n              223,\n              11\n            ]\n          ];\n    }\n  };\n}\n\nfunction stable_sort(cmp, l) {\n  var sort = function (n, l) {\n    var exit = 0;\n    if (n !== 2) {\n      if (n !== 3 || !l) {\n        exit = 1;\n      } else {\n        var match = l[1];\n        if (match) {\n          var match$1 = match[1];\n          if (match$1) {\n            var x3 = match$1[0];\n            var x2 = match[0];\n            var x1 = l[0];\n            if (Curry._2(cmp, x1, x2) <= 0) {\n              if (Curry._2(cmp, x2, x3) <= 0) {\n                return /* :: */[\n                        x1,\n                        /* :: */[\n                          x2,\n                          /* :: */[\n                            x3,\n                            /* [] */0\n                          ]\n                        ]\n                      ];\n              } else if (Curry._2(cmp, x1, x3) <= 0) {\n                return /* :: */[\n                        x1,\n                        /* :: */[\n                          x3,\n                          /* :: */[\n                            x2,\n                            /* [] */0\n                          ]\n                        ]\n                      ];\n              } else {\n                return /* :: */[\n                        x3,\n                        /* :: */[\n                          x1,\n                          /* :: */[\n                            x2,\n                            /* [] */0\n                          ]\n                        ]\n                      ];\n              }\n            } else if (Curry._2(cmp, x1, x3) <= 0) {\n              return /* :: */[\n                      x2,\n                      /* :: */[\n                        x1,\n                        /* :: */[\n                          x3,\n                          /* [] */0\n                        ]\n                      ]\n                    ];\n            } else if (Curry._2(cmp, x2, x3) <= 0) {\n              return /* :: */[\n                      x2,\n                      /* :: */[\n                        x3,\n                        /* :: */[\n                          x1,\n                          /* [] */0\n                        ]\n                      ]\n                    ];\n            } else {\n              return /* :: */[\n                      x3,\n                      /* :: */[\n                        x2,\n                        /* :: */[\n                          x1,\n                          /* [] */0\n                        ]\n                      ]\n                    ];\n            }\n          } else {\n            exit = 1;\n          }\n        } else {\n          exit = 1;\n        }\n      }\n    } else if (l) {\n      var match$2 = l[1];\n      if (match$2) {\n        var x2$1 = match$2[0];\n        var x1$1 = l[0];\n        if (Curry._2(cmp, x1$1, x2$1) <= 0) {\n          return /* :: */[\n                  x1$1,\n                  /* :: */[\n                    x2$1,\n                    /* [] */0\n                  ]\n                ];\n        } else {\n          return /* :: */[\n                  x2$1,\n                  /* :: */[\n                    x1$1,\n                    /* [] */0\n                  ]\n                ];\n        }\n      } else {\n        exit = 1;\n      }\n    } else {\n      exit = 1;\n    }\n    if (exit === 1) {\n      var n1 = (n >> 1);\n      var n2 = n - n1 | 0;\n      var l2 = chop(n1, l);\n      var s1 = rev_sort(n1, l);\n      var s2 = rev_sort(n2, l2);\n      var _l1 = s1;\n      var _l2 = s2;\n      var _accu = /* [] */0;\n      while(true) {\n        var accu = _accu;\n        var l2$1 = _l2;\n        var l1 = _l1;\n        if (l1) {\n          if (l2$1) {\n            var h2 = l2$1[0];\n            var h1 = l1[0];\n            if (Curry._2(cmp, h1, h2) > 0) {\n              _accu = /* :: */[\n                h1,\n                accu\n              ];\n              _l1 = l1[1];\n              continue ;\n            } else {\n              _accu = /* :: */[\n                h2,\n                accu\n              ];\n              _l2 = l2$1[1];\n              continue ;\n            }\n          } else {\n            return rev_append(l1, accu);\n          }\n        } else {\n          return rev_append(l2$1, accu);\n        }\n      };\n    }\n    \n  };\n  var rev_sort = function (n, l) {\n    var exit = 0;\n    if (n !== 2) {\n      if (n !== 3 || !l) {\n        exit = 1;\n      } else {\n        var match = l[1];\n        if (match) {\n          var match$1 = match[1];\n          if (match$1) {\n            var x3 = match$1[0];\n            var x2 = match[0];\n            var x1 = l[0];\n            if (Curry._2(cmp, x1, x2) > 0) {\n              if (Curry._2(cmp, x2, x3) > 0) {\n                return /* :: */[\n                        x1,\n                        /* :: */[\n                          x2,\n                          /* :: */[\n                            x3,\n                            /* [] */0\n                          ]\n                        ]\n                      ];\n              } else if (Curry._2(cmp, x1, x3) > 0) {\n                return /* :: */[\n                        x1,\n                        /* :: */[\n                          x3,\n                          /* :: */[\n                            x2,\n                            /* [] */0\n                          ]\n                        ]\n                      ];\n              } else {\n                return /* :: */[\n                        x3,\n                        /* :: */[\n                          x1,\n                          /* :: */[\n                            x2,\n                            /* [] */0\n                          ]\n                        ]\n                      ];\n              }\n            } else if (Curry._2(cmp, x1, x3) > 0) {\n              return /* :: */[\n                      x2,\n                      /* :: */[\n                        x1,\n                        /* :: */[\n                          x3,\n                          /* [] */0\n                        ]\n                      ]\n                    ];\n            } else if (Curry._2(cmp, x2, x3) > 0) {\n              return /* :: */[\n                      x2,\n                      /* :: */[\n                        x3,\n                        /* :: */[\n                          x1,\n                          /* [] */0\n                        ]\n                      ]\n                    ];\n            } else {\n              return /* :: */[\n                      x3,\n                      /* :: */[\n                        x2,\n                        /* :: */[\n                          x1,\n                          /* [] */0\n                        ]\n                      ]\n                    ];\n            }\n          } else {\n            exit = 1;\n          }\n        } else {\n          exit = 1;\n        }\n      }\n    } else if (l) {\n      var match$2 = l[1];\n      if (match$2) {\n        var x2$1 = match$2[0];\n        var x1$1 = l[0];\n        if (Curry._2(cmp, x1$1, x2$1) > 0) {\n          return /* :: */[\n                  x1$1,\n                  /* :: */[\n                    x2$1,\n                    /* [] */0\n                  ]\n                ];\n        } else {\n          return /* :: */[\n                  x2$1,\n                  /* :: */[\n                    x1$1,\n                    /* [] */0\n                  ]\n                ];\n        }\n      } else {\n        exit = 1;\n      }\n    } else {\n      exit = 1;\n    }\n    if (exit === 1) {\n      var n1 = (n >> 1);\n      var n2 = n - n1 | 0;\n      var l2 = chop(n1, l);\n      var s1 = sort(n1, l);\n      var s2 = sort(n2, l2);\n      var _l1 = s1;\n      var _l2 = s2;\n      var _accu = /* [] */0;\n      while(true) {\n        var accu = _accu;\n        var l2$1 = _l2;\n        var l1 = _l1;\n        if (l1) {\n          if (l2$1) {\n            var h2 = l2$1[0];\n            var h1 = l1[0];\n            if (Curry._2(cmp, h1, h2) <= 0) {\n              _accu = /* :: */[\n                h1,\n                accu\n              ];\n              _l1 = l1[1];\n              continue ;\n            } else {\n              _accu = /* :: */[\n                h2,\n                accu\n              ];\n              _l2 = l2$1[1];\n              continue ;\n            }\n          } else {\n            return rev_append(l1, accu);\n          }\n        } else {\n          return rev_append(l2$1, accu);\n        }\n      };\n    }\n    \n  };\n  var len = length(l);\n  if (len < 2) {\n    return l;\n  } else {\n    return sort(len, l);\n  }\n}\n\nfunction sort_uniq(cmp, l) {\n  var sort = function (n, l) {\n    var exit = 0;\n    if (n !== 2) {\n      if (n !== 3 || !l) {\n        exit = 1;\n      } else {\n        var match = l[1];\n        if (match) {\n          var match$1 = match[1];\n          if (match$1) {\n            var x3 = match$1[0];\n            var x2 = match[0];\n            var x1 = l[0];\n            var c = Curry._2(cmp, x1, x2);\n            if (c === 0) {\n              var c$1 = Curry._2(cmp, x2, x3);\n              if (c$1 === 0) {\n                return /* :: */[\n                        x2,\n                        /* [] */0\n                      ];\n              } else if (c$1 < 0) {\n                return /* :: */[\n                        x2,\n                        /* :: */[\n                          x3,\n                          /* [] */0\n                        ]\n                      ];\n              } else {\n                return /* :: */[\n                        x3,\n                        /* :: */[\n                          x2,\n                          /* [] */0\n                        ]\n                      ];\n              }\n            } else if (c < 0) {\n              var c$2 = Curry._2(cmp, x2, x3);\n              if (c$2 === 0) {\n                return /* :: */[\n                        x1,\n                        /* :: */[\n                          x2,\n                          /* [] */0\n                        ]\n                      ];\n              } else if (c$2 < 0) {\n                return /* :: */[\n                        x1,\n                        /* :: */[\n                          x2,\n                          /* :: */[\n                            x3,\n                            /* [] */0\n                          ]\n                        ]\n                      ];\n              } else {\n                var c$3 = Curry._2(cmp, x1, x3);\n                if (c$3 === 0) {\n                  return /* :: */[\n                          x1,\n                          /* :: */[\n                            x2,\n                            /* [] */0\n                          ]\n                        ];\n                } else if (c$3 < 0) {\n                  return /* :: */[\n                          x1,\n                          /* :: */[\n                            x3,\n                            /* :: */[\n                              x2,\n                              /* [] */0\n                            ]\n                          ]\n                        ];\n                } else {\n                  return /* :: */[\n                          x3,\n                          /* :: */[\n                            x1,\n                            /* :: */[\n                              x2,\n                              /* [] */0\n                            ]\n                          ]\n                        ];\n                }\n              }\n            } else {\n              var c$4 = Curry._2(cmp, x1, x3);\n              if (c$4 === 0) {\n                return /* :: */[\n                        x2,\n                        /* :: */[\n                          x1,\n                          /* [] */0\n                        ]\n                      ];\n              } else if (c$4 < 0) {\n                return /* :: */[\n                        x2,\n                        /* :: */[\n                          x1,\n                          /* :: */[\n                            x3,\n                            /* [] */0\n                          ]\n                        ]\n                      ];\n              } else {\n                var c$5 = Curry._2(cmp, x2, x3);\n                if (c$5 === 0) {\n                  return /* :: */[\n                          x2,\n                          /* :: */[\n                            x1,\n                            /* [] */0\n                          ]\n                        ];\n                } else if (c$5 < 0) {\n                  return /* :: */[\n                          x2,\n                          /* :: */[\n                            x3,\n                            /* :: */[\n                              x1,\n                              /* [] */0\n                            ]\n                          ]\n                        ];\n                } else {\n                  return /* :: */[\n                          x3,\n                          /* :: */[\n                            x2,\n                            /* :: */[\n                              x1,\n                              /* [] */0\n                            ]\n                          ]\n                        ];\n                }\n              }\n            }\n          } else {\n            exit = 1;\n          }\n        } else {\n          exit = 1;\n        }\n      }\n    } else if (l) {\n      var match$2 = l[1];\n      if (match$2) {\n        var x2$1 = match$2[0];\n        var x1$1 = l[0];\n        var c$6 = Curry._2(cmp, x1$1, x2$1);\n        if (c$6 === 0) {\n          return /* :: */[\n                  x1$1,\n                  /* [] */0\n                ];\n        } else if (c$6 < 0) {\n          return /* :: */[\n                  x1$1,\n                  /* :: */[\n                    x2$1,\n                    /* [] */0\n                  ]\n                ];\n        } else {\n          return /* :: */[\n                  x2$1,\n                  /* :: */[\n                    x1$1,\n                    /* [] */0\n                  ]\n                ];\n        }\n      } else {\n        exit = 1;\n      }\n    } else {\n      exit = 1;\n    }\n    if (exit === 1) {\n      var n1 = (n >> 1);\n      var n2 = n - n1 | 0;\n      var l2 = chop(n1, l);\n      var s1 = rev_sort(n1, l);\n      var s2 = rev_sort(n2, l2);\n      var _l1 = s1;\n      var _l2 = s2;\n      var _accu = /* [] */0;\n      while(true) {\n        var accu = _accu;\n        var l2$1 = _l2;\n        var l1 = _l1;\n        if (l1) {\n          if (l2$1) {\n            var t2 = l2$1[1];\n            var h2 = l2$1[0];\n            var t1 = l1[1];\n            var h1 = l1[0];\n            var c$7 = Curry._2(cmp, h1, h2);\n            if (c$7 === 0) {\n              _accu = /* :: */[\n                h1,\n                accu\n              ];\n              _l2 = t2;\n              _l1 = t1;\n              continue ;\n            } else if (c$7 > 0) {\n              _accu = /* :: */[\n                h1,\n                accu\n              ];\n              _l1 = t1;\n              continue ;\n            } else {\n              _accu = /* :: */[\n                h2,\n                accu\n              ];\n              _l2 = t2;\n              continue ;\n            }\n          } else {\n            return rev_append(l1, accu);\n          }\n        } else {\n          return rev_append(l2$1, accu);\n        }\n      };\n    }\n    \n  };\n  var rev_sort = function (n, l) {\n    var exit = 0;\n    if (n !== 2) {\n      if (n !== 3 || !l) {\n        exit = 1;\n      } else {\n        var match = l[1];\n        if (match) {\n          var match$1 = match[1];\n          if (match$1) {\n            var x3 = match$1[0];\n            var x2 = match[0];\n            var x1 = l[0];\n            var c = Curry._2(cmp, x1, x2);\n            if (c === 0) {\n              var c$1 = Curry._2(cmp, x2, x3);\n              if (c$1 === 0) {\n                return /* :: */[\n                        x2,\n                        /* [] */0\n                      ];\n              } else if (c$1 > 0) {\n                return /* :: */[\n                        x2,\n                        /* :: */[\n                          x3,\n                          /* [] */0\n                        ]\n                      ];\n              } else {\n                return /* :: */[\n                        x3,\n                        /* :: */[\n                          x2,\n                          /* [] */0\n                        ]\n                      ];\n              }\n            } else if (c > 0) {\n              var c$2 = Curry._2(cmp, x2, x3);\n              if (c$2 === 0) {\n                return /* :: */[\n                        x1,\n                        /* :: */[\n                          x2,\n                          /* [] */0\n                        ]\n                      ];\n              } else if (c$2 > 0) {\n                return /* :: */[\n                        x1,\n                        /* :: */[\n                          x2,\n                          /* :: */[\n                            x3,\n                            /* [] */0\n                          ]\n                        ]\n                      ];\n              } else {\n                var c$3 = Curry._2(cmp, x1, x3);\n                if (c$3 === 0) {\n                  return /* :: */[\n                          x1,\n                          /* :: */[\n                            x2,\n                            /* [] */0\n                          ]\n                        ];\n                } else if (c$3 > 0) {\n                  return /* :: */[\n                          x1,\n                          /* :: */[\n                            x3,\n                            /* :: */[\n                              x2,\n                              /* [] */0\n                            ]\n                          ]\n                        ];\n                } else {\n                  return /* :: */[\n                          x3,\n                          /* :: */[\n                            x1,\n                            /* :: */[\n                              x2,\n                              /* [] */0\n                            ]\n                          ]\n                        ];\n                }\n              }\n            } else {\n              var c$4 = Curry._2(cmp, x1, x3);\n              if (c$4 === 0) {\n                return /* :: */[\n                        x2,\n                        /* :: */[\n                          x1,\n                          /* [] */0\n                        ]\n                      ];\n              } else if (c$4 > 0) {\n                return /* :: */[\n                        x2,\n                        /* :: */[\n                          x1,\n                          /* :: */[\n                            x3,\n                            /* [] */0\n                          ]\n                        ]\n                      ];\n              } else {\n                var c$5 = Curry._2(cmp, x2, x3);\n                if (c$5 === 0) {\n                  return /* :: */[\n                          x2,\n                          /* :: */[\n                            x1,\n                            /* [] */0\n                          ]\n                        ];\n                } else if (c$5 > 0) {\n                  return /* :: */[\n                          x2,\n                          /* :: */[\n                            x3,\n                            /* :: */[\n                              x1,\n                              /* [] */0\n                            ]\n                          ]\n                        ];\n                } else {\n                  return /* :: */[\n                          x3,\n                          /* :: */[\n                            x2,\n                            /* :: */[\n                              x1,\n                              /* [] */0\n                            ]\n                          ]\n                        ];\n                }\n              }\n            }\n          } else {\n            exit = 1;\n          }\n        } else {\n          exit = 1;\n        }\n      }\n    } else if (l) {\n      var match$2 = l[1];\n      if (match$2) {\n        var x2$1 = match$2[0];\n        var x1$1 = l[0];\n        var c$6 = Curry._2(cmp, x1$1, x2$1);\n        if (c$6 === 0) {\n          return /* :: */[\n                  x1$1,\n                  /* [] */0\n                ];\n        } else if (c$6 > 0) {\n          return /* :: */[\n                  x1$1,\n                  /* :: */[\n                    x2$1,\n                    /* [] */0\n                  ]\n                ];\n        } else {\n          return /* :: */[\n                  x2$1,\n                  /* :: */[\n                    x1$1,\n                    /* [] */0\n                  ]\n                ];\n        }\n      } else {\n        exit = 1;\n      }\n    } else {\n      exit = 1;\n    }\n    if (exit === 1) {\n      var n1 = (n >> 1);\n      var n2 = n - n1 | 0;\n      var l2 = chop(n1, l);\n      var s1 = sort(n1, l);\n      var s2 = sort(n2, l2);\n      var _l1 = s1;\n      var _l2 = s2;\n      var _accu = /* [] */0;\n      while(true) {\n        var accu = _accu;\n        var l2$1 = _l2;\n        var l1 = _l1;\n        if (l1) {\n          if (l2$1) {\n            var t2 = l2$1[1];\n            var h2 = l2$1[0];\n            var t1 = l1[1];\n            var h1 = l1[0];\n            var c$7 = Curry._2(cmp, h1, h2);\n            if (c$7 === 0) {\n              _accu = /* :: */[\n                h1,\n                accu\n              ];\n              _l2 = t2;\n              _l1 = t1;\n              continue ;\n            } else if (c$7 < 0) {\n              _accu = /* :: */[\n                h1,\n                accu\n              ];\n              _l1 = t1;\n              continue ;\n            } else {\n              _accu = /* :: */[\n                h2,\n                accu\n              ];\n              _l2 = t2;\n              continue ;\n            }\n          } else {\n            return rev_append(l1, accu);\n          }\n        } else {\n          return rev_append(l2$1, accu);\n        }\n      };\n    }\n    \n  };\n  var len = length(l);\n  if (len < 2) {\n    return l;\n  } else {\n    return sort(len, l);\n  }\n}\n\nvar append = Pervasives.$at;\n\nvar concat = flatten;\n\nvar filter = find_all;\n\nvar sort = stable_sort;\n\nvar fast_sort = stable_sort;\n\nexports.length = length;\nexports.hd = hd;\nexports.tl = tl;\nexports.nth = nth;\nexports.rev = rev;\nexports.append = append;\nexports.rev_append = rev_append;\nexports.concat = concat;\nexports.flatten = flatten;\nexports.iter = iter;\nexports.iteri = iteri;\nexports.map = map;\nexports.mapi = mapi$1;\nexports.rev_map = rev_map;\nexports.fold_left = fold_left;\nexports.fold_right = fold_right;\nexports.iter2 = iter2;\nexports.map2 = map2;\nexports.rev_map2 = rev_map2;\nexports.fold_left2 = fold_left2;\nexports.fold_right2 = fold_right2;\nexports.for_all = for_all;\nexports.exists = exists;\nexports.for_all2 = for_all2;\nexports.exists2 = exists2;\nexports.mem = mem;\nexports.memq = memq;\nexports.find = find;\nexports.filter = filter;\nexports.find_all = find_all;\nexports.partition = partition;\nexports.assoc = assoc;\nexports.assq = assq;\nexports.mem_assoc = mem_assoc;\nexports.mem_assq = mem_assq;\nexports.remove_assoc = remove_assoc;\nexports.remove_assq = remove_assq;\nexports.split = split;\nexports.combine = combine;\nexports.sort = sort;\nexports.stable_sort = stable_sort;\nexports.fast_sort = fast_sort;\nexports.sort_uniq = sort_uniq;\nexports.merge = merge;\n/* No side effect */\n","// Generated by BUCKLESCRIPT VERSION 3.0.0, PLEASE EDIT WITH CARE\n'use strict';\n\nvar List = require(\"bs-platform/lib/js/list.js\");\nvar Curry = require(\"bs-platform/lib/js/curry.js\");\nvar Caml_int32 = require(\"bs-platform/lib/js/caml_int32.js\");\nvar LifePng = require(\"../assets/life.png\");\nvar Caml_builtin_exceptions = require(\"bs-platform/lib/js/caml_builtin_exceptions.js\");\nvar Goal_frog_0Png = require(\"../assets/goal_frog_0.png\");\nvar Frogger_sprites2Png = require(\"../assets/frogger_sprites2.png\");\n\nfunction $less$less(f, g, x) {\n  return Curry._1(f, Curry._1(g, x));\n}\n\nfunction isSome(param) {\n  if (param) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction deoptionalize(lst) {\n  return List.map((function (param) {\n                if (param) {\n                  return param[0];\n                } else {\n                  throw [\n                        Caml_builtin_exceptions.assert_failure,\n                        [\n                          \"utils.ml\",\n                          14,\n                          16\n                        ]\n                      ];\n                }\n              }), List.filter(isSome)(lst));\n}\n\nfunction $less$neg$great(i, j) {\n  var _n = j;\n  var _acc = /* [] */0;\n  while(true) {\n    var acc = _acc;\n    var n = _n;\n    if (n < i) {\n      return acc;\n    } else {\n      _acc = /* :: */[\n        n,\n        acc\n      ];\n      _n = n - 1 | 0;\n      continue ;\n    }\n  };\n}\n\nfunction repeat(s, n) {\n  if (n === 0) {\n    return \"\";\n  } else {\n    return s + repeat(s, n - 1 | 0);\n  }\n}\n\nfunction padWithZeros(str, n) {\n  var strlen = str.length;\n  if (strlen >= n) {\n    return str;\n  } else {\n    return repeat(\"0\", n - strlen | 0) + str;\n  }\n}\n\nfunction find_opt(f, lst) {\n  try {\n    return /* Some */[List.find(f, lst)];\n  }\n  catch (exn){\n    if (exn === Caml_builtin_exceptions.not_found) {\n      return /* None */0;\n    } else {\n      throw exn;\n    }\n  }\n}\n\nvar tileSize = 30;\n\nvar halfTileSize = tileSize / 2 | 0;\n\nfunction getRowForY(y) {\n  return Caml_int32.div(480 - y | 0, tileSize);\n}\n\nfunction getYForRow(row) {\n  return 480 - Caml_int32.imul(row, tileSize) | 0;\n}\n\nfunction intersects(rect1, rect2) {\n  var bottom1 = rect1[/* y */1] + rect1[/* height */3];\n  var bottom2 = rect2[/* y */1] + rect2[/* height */3];\n  var top1 = rect1[/* y */1];\n  var top2 = rect2[/* y */1];\n  var left1 = rect1[/* x */0];\n  var left2 = rect2[/* x */0];\n  var right1 = rect1[/* x */0] + rect1[/* width */2];\n  var right2 = rect2[/* x */0] + rect2[/* width */2];\n  return !(bottom1 < top2 || top1 > bottom2 || right1 < left2 || left1 > right2);\n}\n\nfunction isRectOutOfBounds(rect) {\n  var x = rect[/* x */0] | 0;\n  var y = rect[/* y */1] | 0;\n  if ((x + rect[/* width */2] | 0) < 0 || x > 420 || (y + rect[/* height */3] | 0) < 0) {\n    return true;\n  } else {\n    return y > (480 - tileSize | 0);\n  }\n}\n\nfunction isRectInBounds(param) {\n  return !isRectOutOfBounds(param);\n}\n\nvar spriteSheet = new Image();\n\nspriteSheet.src = Frogger_sprites2Png;\n\nvar goalSprite = new Image();\n\ngoalSprite.src = Goal_frog_0Png;\n\nvar lifeSprite = new Image();\n\nlifeSprite.src = LifePng;\n\nfunction makeSpriteImage($staropt$star, $staropt$star$1, xStart, yStart, frames, frameSpeed, width) {\n  var number = $staropt$star ? $staropt$star[0] : 1;\n  var height = $staropt$star$1 ? $staropt$star$1[0] : 30;\n  return /* record */[\n          /* xStart */xStart,\n          /* yStart */yStart,\n          /* frames */frames,\n          /* frameSpeed */frameSpeed,\n          /* width */width,\n          /* height */height,\n          /* number */number\n        ];\n}\n\nvar yellowCarImage = makeSpriteImage(/* None */0, /* None */0, 80, 262, 0, 0, 33);\n\nvar greenCarImage = makeSpriteImage(/* None */0, /* None */0, 70, 296, 0, 0, 33);\n\nvar pinkCarImage = makeSpriteImage(/* None */0, /* None */0, 10, 262, 0, 0, 31);\n\nvar raceCarImage = makeSpriteImage(/* None */0, /* None */0, 40, 260, 0, 0, 33);\n\nvar whiteTruckImage = makeSpriteImage(/* None */0, /* None */0, 110, 296, 0, 0, 43);\n\nvar threeTurtleImage = makeSpriteImage(/* Some */[3], /* None */0, 15, 402, 3, 2, 35);\n\nvar divingThreeTurtles = makeSpriteImage(/* Some */[3], /* None */0, 15, 402, 6, 2, 36);\n\nvar twoTurtleImage = makeSpriteImage(/* Some */[2], /* None */0, 15, 402, 3, 2, 35);\n\nvar divingTwoTurtles = makeSpriteImage(/* Some */[2], /* None */0, 15, 402, 6, 2, 36);\n\nvar smallLogImage = makeSpriteImage(/* None */0, /* None */0, 10, 225, 0, 0, 80);\n\nvar mediumLogImage = makeSpriteImage(/* None */0, /* None */0, 10, 193, 0, 0, 115);\n\nvar bigLogImage = makeSpriteImage(/* None */0, /* None */0, 10, 162, 0, 0, 175);\n\nvar frogUp = makeSpriteImage(/* None */0, /* Some */[23], 8, 370, 2, 20, 28);\n\nvar frogDown = makeSpriteImage(/* None */0, /* Some */[23], 76, 370, 2, 20, 28);\n\nvar frogLeft = makeSpriteImage(/* None */0, /* Some */[28], 76, 336, 2, 20, 33);\n\nvar frogRight = makeSpriteImage(/* None */0, /* Some */[28], 8, 336, 2, 20, 33);\n\nvar height = 480;\n\nvar width = 420;\n\nvar rows = 16;\n\nvar cols = 14;\n\nexports.$less$less = $less$less;\nexports.isSome = isSome;\nexports.deoptionalize = deoptionalize;\nexports.$less$neg$great = $less$neg$great;\nexports.repeat = repeat;\nexports.padWithZeros = padWithZeros;\nexports.find_opt = find_opt;\nexports.height = height;\nexports.width = width;\nexports.rows = rows;\nexports.cols = cols;\nexports.tileSize = tileSize;\nexports.halfTileSize = halfTileSize;\nexports.getRowForY = getRowForY;\nexports.getYForRow = getYForRow;\nexports.intersects = intersects;\nexports.isRectOutOfBounds = isRectOutOfBounds;\nexports.isRectInBounds = isRectInBounds;\nexports.spriteSheet = spriteSheet;\nexports.goalSprite = goalSprite;\nexports.lifeSprite = lifeSprite;\nexports.makeSpriteImage = makeSpriteImage;\nexports.yellowCarImage = yellowCarImage;\nexports.greenCarImage = greenCarImage;\nexports.pinkCarImage = pinkCarImage;\nexports.raceCarImage = raceCarImage;\nexports.whiteTruckImage = whiteTruckImage;\nexports.threeTurtleImage = threeTurtleImage;\nexports.divingThreeTurtles = divingThreeTurtles;\nexports.twoTurtleImage = twoTurtleImage;\nexports.divingTwoTurtles = divingTwoTurtles;\nexports.smallLogImage = smallLogImage;\nexports.mediumLogImage = mediumLogImage;\nexports.bigLogImage = bigLogImage;\nexports.frogUp = frogUp;\nexports.frogDown = frogDown;\nexports.frogLeft = frogLeft;\nexports.frogRight = frogRight;\n/* spriteSheet Not a pure module */\n","'use strict';\n\nvar Caml_exceptions = require(\"./caml_exceptions.js\");\n\nvar $$Error = Caml_exceptions.create(\"Js_exn.Error\");\n\nfunction internalToOCamlException(e) {\n  if (Caml_exceptions.isCamlExceptionOrOpenVariant(e)) {\n    return e;\n  } else {\n    return [\n            $$Error,\n            e\n          ];\n  }\n}\n\nfunction raiseError(str) {\n  throw new Error(str);\n}\n\nfunction raiseEvalError(str) {\n  throw new EvalError(str);\n}\n\nfunction raiseRangeError(str) {\n  throw new RangeError(str);\n}\n\nfunction raiseReferenceError(str) {\n  throw new ReferenceError(str);\n}\n\nfunction raiseSyntaxError(str) {\n  throw new SyntaxError(str);\n}\n\nfunction raiseTypeError(str) {\n  throw new TypeError(str);\n}\n\nfunction raiseUriError(str) {\n  throw new URIError(str);\n}\n\nexports.$$Error = $$Error;\nexports.internalToOCamlException = internalToOCamlException;\nexports.raiseError = raiseError;\nexports.raiseEvalError = raiseEvalError;\nexports.raiseRangeError = raiseRangeError;\nexports.raiseReferenceError = raiseReferenceError;\nexports.raiseSyntaxError = raiseSyntaxError;\nexports.raiseTypeError = raiseTypeError;\nexports.raiseUriError = raiseUriError;\n/* No side effect */\n","'use strict';\n\nvar Curry = require(\"./curry.js\");\nvar Js_exn = require(\"./js_exn.js\");\nvar Caml_array = require(\"./caml_array.js\");\nvar Caml_exceptions = require(\"./caml_exceptions.js\");\nvar Caml_builtin_exceptions = require(\"./caml_builtin_exceptions.js\");\n\nfunction init(l, f) {\n  if (l === 0) {\n    return /* array */[];\n  } else if (l < 0) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Array.init\"\n        ];\n  } else {\n    var res = Caml_array.caml_make_vect(l, Curry._1(f, 0));\n    for(var i = 1 ,i_finish = l - 1 | 0; i <= i_finish; ++i){\n      res[i] = Curry._1(f, i);\n    }\n    return res;\n  }\n}\n\nfunction make_matrix(sx, sy, init) {\n  var res = Caml_array.caml_make_vect(sx, /* array */[]);\n  for(var x = 0 ,x_finish = sx - 1 | 0; x <= x_finish; ++x){\n    res[x] = Caml_array.caml_make_vect(sy, init);\n  }\n  return res;\n}\n\nfunction copy(a) {\n  var l = a.length;\n  if (l === 0) {\n    return /* array */[];\n  } else {\n    return Caml_array.caml_array_sub(a, 0, l);\n  }\n}\n\nfunction append(a1, a2) {\n  var l1 = a1.length;\n  if (l1 === 0) {\n    return copy(a2);\n  } else if (a2.length === 0) {\n    return Caml_array.caml_array_sub(a1, 0, l1);\n  } else {\n    return a1.concat(a2);\n  }\n}\n\nfunction sub(a, ofs, len) {\n  if (len < 0 || ofs > (a.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Array.sub\"\n        ];\n  } else {\n    return Caml_array.caml_array_sub(a, ofs, len);\n  }\n}\n\nfunction fill(a, ofs, len, v) {\n  if (ofs < 0 || len < 0 || ofs > (a.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Array.fill\"\n        ];\n  } else {\n    for(var i = ofs ,i_finish = (ofs + len | 0) - 1 | 0; i <= i_finish; ++i){\n      a[i] = v;\n    }\n    return /* () */0;\n  }\n}\n\nfunction blit(a1, ofs1, a2, ofs2, len) {\n  if (len < 0 || ofs1 < 0 || ofs1 > (a1.length - len | 0) || ofs2 < 0 || ofs2 > (a2.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Array.blit\"\n        ];\n  } else {\n    return Caml_array.caml_array_blit(a1, ofs1, a2, ofs2, len);\n  }\n}\n\nfunction iter(f, a) {\n  for(var i = 0 ,i_finish = a.length - 1 | 0; i <= i_finish; ++i){\n    Curry._1(f, a[i]);\n  }\n  return /* () */0;\n}\n\nfunction map(f, a) {\n  var l = a.length;\n  if (l === 0) {\n    return /* array */[];\n  } else {\n    var r = Caml_array.caml_make_vect(l, Curry._1(f, a[0]));\n    for(var i = 1 ,i_finish = l - 1 | 0; i <= i_finish; ++i){\n      r[i] = Curry._1(f, a[i]);\n    }\n    return r;\n  }\n}\n\nfunction iteri(f, a) {\n  for(var i = 0 ,i_finish = a.length - 1 | 0; i <= i_finish; ++i){\n    Curry._2(f, i, a[i]);\n  }\n  return /* () */0;\n}\n\nfunction mapi(f, a) {\n  var l = a.length;\n  if (l === 0) {\n    return /* array */[];\n  } else {\n    var r = Caml_array.caml_make_vect(l, Curry._2(f, 0, a[0]));\n    for(var i = 1 ,i_finish = l - 1 | 0; i <= i_finish; ++i){\n      r[i] = Curry._2(f, i, a[i]);\n    }\n    return r;\n  }\n}\n\nfunction to_list(a) {\n  var _i = a.length - 1 | 0;\n  var _res = /* [] */0;\n  while(true) {\n    var res = _res;\n    var i = _i;\n    if (i < 0) {\n      return res;\n    } else {\n      _res = /* :: */[\n        a[i],\n        res\n      ];\n      _i = i - 1 | 0;\n      continue ;\n    }\n  };\n}\n\nfunction list_length(_accu, _param) {\n  while(true) {\n    var param = _param;\n    var accu = _accu;\n    if (param) {\n      _param = param[1];\n      _accu = accu + 1 | 0;\n      continue ;\n    } else {\n      return accu;\n    }\n  };\n}\n\nfunction of_list(l) {\n  if (l) {\n    var a = Caml_array.caml_make_vect(list_length(0, l), l[0]);\n    var _i = 1;\n    var _param = l[1];\n    while(true) {\n      var param = _param;\n      var i = _i;\n      if (param) {\n        a[i] = param[0];\n        _param = param[1];\n        _i = i + 1 | 0;\n        continue ;\n      } else {\n        return a;\n      }\n    };\n  } else {\n    return /* array */[];\n  }\n}\n\nfunction fold_left(f, x, a) {\n  var r = x;\n  for(var i = 0 ,i_finish = a.length - 1 | 0; i <= i_finish; ++i){\n    r = Curry._2(f, r, a[i]);\n  }\n  return r;\n}\n\nfunction fold_right(f, a, x) {\n  var r = x;\n  for(var i = a.length - 1 | 0; i >= 0; --i){\n    r = Curry._2(f, a[i], r);\n  }\n  return r;\n}\n\nvar Bottom = Caml_exceptions.create(\"Array.Bottom\");\n\nfunction sort(cmp, a) {\n  var maxson = function (l, i) {\n    var i31 = ((i + i | 0) + i | 0) + 1 | 0;\n    var x = i31;\n    if ((i31 + 2 | 0) < l) {\n      if (Curry._2(cmp, Caml_array.caml_array_get(a, i31), Caml_array.caml_array_get(a, i31 + 1 | 0)) < 0) {\n        x = i31 + 1 | 0;\n      }\n      if (Curry._2(cmp, Caml_array.caml_array_get(a, x), Caml_array.caml_array_get(a, i31 + 2 | 0)) < 0) {\n        x = i31 + 2 | 0;\n      }\n      return x;\n    } else if ((i31 + 1 | 0) < l && Curry._2(cmp, Caml_array.caml_array_get(a, i31), Caml_array.caml_array_get(a, i31 + 1 | 0)) < 0) {\n      return i31 + 1 | 0;\n    } else if (i31 < l) {\n      return i31;\n    } else {\n      throw [\n            Bottom,\n            i\n          ];\n    }\n  };\n  var trickle = function (l, i, e) {\n    try {\n      var l$1 = l;\n      var _i = i;\n      var e$1 = e;\n      while(true) {\n        var i$1 = _i;\n        var j = maxson(l$1, i$1);\n        if (Curry._2(cmp, Caml_array.caml_array_get(a, j), e$1) > 0) {\n          Caml_array.caml_array_set(a, i$1, Caml_array.caml_array_get(a, j));\n          _i = j;\n          continue ;\n        } else {\n          return Caml_array.caml_array_set(a, i$1, e$1);\n        }\n      };\n    }\n    catch (raw_exn){\n      var exn = Js_exn.internalToOCamlException(raw_exn);\n      if (exn[0] === Bottom) {\n        return Caml_array.caml_array_set(a, exn[1], e);\n      } else {\n        throw exn;\n      }\n    }\n  };\n  var bubble = function (l, i) {\n    try {\n      var l$1 = l;\n      var _i = i;\n      while(true) {\n        var i$1 = _i;\n        var j = maxson(l$1, i$1);\n        Caml_array.caml_array_set(a, i$1, Caml_array.caml_array_get(a, j));\n        _i = j;\n        continue ;\n      };\n    }\n    catch (raw_exn){\n      var exn = Js_exn.internalToOCamlException(raw_exn);\n      if (exn[0] === Bottom) {\n        return exn[1];\n      } else {\n        throw exn;\n      }\n    }\n  };\n  var trickleup = function (_i, e) {\n    while(true) {\n      var i = _i;\n      var father = (i - 1 | 0) / 3 | 0;\n      if (i === father) {\n        throw [\n              Caml_builtin_exceptions.assert_failure,\n              [\n                \"array.ml\",\n                173,\n                4\n              ]\n            ];\n      }\n      if (Curry._2(cmp, Caml_array.caml_array_get(a, father), e) < 0) {\n        Caml_array.caml_array_set(a, i, Caml_array.caml_array_get(a, father));\n        if (father > 0) {\n          _i = father;\n          continue ;\n        } else {\n          return Caml_array.caml_array_set(a, 0, e);\n        }\n      } else {\n        return Caml_array.caml_array_set(a, i, e);\n      }\n    };\n  };\n  var l = a.length;\n  for(var i = ((l + 1 | 0) / 3 | 0) - 1 | 0; i >= 0; --i){\n    trickle(l, i, Caml_array.caml_array_get(a, i));\n  }\n  for(var i$1 = l - 1 | 0; i$1 >= 2; --i$1){\n    var e = Caml_array.caml_array_get(a, i$1);\n    Caml_array.caml_array_set(a, i$1, Caml_array.caml_array_get(a, 0));\n    trickleup(bubble(i$1, 0), e);\n  }\n  if (l > 1) {\n    var e$1 = Caml_array.caml_array_get(a, 1);\n    Caml_array.caml_array_set(a, 1, Caml_array.caml_array_get(a, 0));\n    return Caml_array.caml_array_set(a, 0, e$1);\n  } else {\n    return 0;\n  }\n}\n\nfunction stable_sort(cmp, a) {\n  var merge = function (src1ofs, src1len, src2, src2ofs, src2len, dst, dstofs) {\n    var src1r = src1ofs + src1len | 0;\n    var src2r = src2ofs + src2len | 0;\n    var _i1 = src1ofs;\n    var _s1 = Caml_array.caml_array_get(a, src1ofs);\n    var _i2 = src2ofs;\n    var _s2 = Caml_array.caml_array_get(src2, src2ofs);\n    var _d = dstofs;\n    while(true) {\n      var d = _d;\n      var s2 = _s2;\n      var i2 = _i2;\n      var s1 = _s1;\n      var i1 = _i1;\n      if (Curry._2(cmp, s1, s2) <= 0) {\n        Caml_array.caml_array_set(dst, d, s1);\n        var i1$1 = i1 + 1 | 0;\n        if (i1$1 < src1r) {\n          _d = d + 1 | 0;\n          _s1 = Caml_array.caml_array_get(a, i1$1);\n          _i1 = i1$1;\n          continue ;\n        } else {\n          return blit(src2, i2, dst, d + 1 | 0, src2r - i2 | 0);\n        }\n      } else {\n        Caml_array.caml_array_set(dst, d, s2);\n        var i2$1 = i2 + 1 | 0;\n        if (i2$1 < src2r) {\n          _d = d + 1 | 0;\n          _s2 = Caml_array.caml_array_get(src2, i2$1);\n          _i2 = i2$1;\n          continue ;\n        } else {\n          return blit(a, i1, dst, d + 1 | 0, src1r - i1 | 0);\n        }\n      }\n    };\n  };\n  var isortto = function (srcofs, dst, dstofs, len) {\n    for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n      var e = Caml_array.caml_array_get(a, srcofs + i | 0);\n      var j = (dstofs + i | 0) - 1 | 0;\n      while(j >= dstofs && Curry._2(cmp, Caml_array.caml_array_get(dst, j), e) > 0) {\n        Caml_array.caml_array_set(dst, j + 1 | 0, Caml_array.caml_array_get(dst, j));\n        j = j - 1 | 0;\n      };\n      Caml_array.caml_array_set(dst, j + 1 | 0, e);\n    }\n    return /* () */0;\n  };\n  var sortto = function (srcofs, dst, dstofs, len) {\n    if (len <= 5) {\n      return isortto(srcofs, dst, dstofs, len);\n    } else {\n      var l1 = len / 2 | 0;\n      var l2 = len - l1 | 0;\n      sortto(srcofs + l1 | 0, dst, dstofs + l1 | 0, l2);\n      sortto(srcofs, a, srcofs + l2 | 0, l1);\n      return merge(srcofs + l2 | 0, l1, dst, dstofs + l1 | 0, l2, dst, dstofs);\n    }\n  };\n  var l = a.length;\n  if (l <= 5) {\n    return isortto(0, a, 0, l);\n  } else {\n    var l1 = l / 2 | 0;\n    var l2 = l - l1 | 0;\n    var t = Caml_array.caml_make_vect(l2, Caml_array.caml_array_get(a, 0));\n    sortto(l1, t, 0, l2);\n    sortto(0, a, l2, l1);\n    return merge(l2, l1, t, 0, l2, a, 0);\n  }\n}\n\nvar create_matrix = make_matrix;\n\nvar concat = Caml_array.caml_array_concat;\n\nvar fast_sort = stable_sort;\n\nexports.init = init;\nexports.make_matrix = make_matrix;\nexports.create_matrix = create_matrix;\nexports.append = append;\nexports.concat = concat;\nexports.sub = sub;\nexports.copy = copy;\nexports.fill = fill;\nexports.blit = blit;\nexports.to_list = to_list;\nexports.of_list = of_list;\nexports.iter = iter;\nexports.map = map;\nexports.iteri = iteri;\nexports.mapi = mapi;\nexports.fold_left = fold_left;\nexports.fold_right = fold_right;\nexports.sort = sort;\nexports.stable_sort = stable_sort;\nexports.fast_sort = fast_sort;\n/* No side effect */\n","'use strict';\n\nvar Caml_format = require(\"./caml_format.js\");\nvar Caml_primitive = require(\"./caml_primitive.js\");\n\nfunction succ(n) {\n  return n + 1 | 0;\n}\n\nfunction pred(n) {\n  return n - 1 | 0;\n}\n\nfunction abs(n) {\n  if (n >= 0) {\n    return n;\n  } else {\n    return -n | 0;\n  }\n}\n\nfunction lognot(n) {\n  return n ^ -1;\n}\n\nfunction to_string(n) {\n  return Caml_format.caml_int32_format(\"%d\", n);\n}\n\nvar compare = Caml_primitive.caml_int32_compare;\n\nvar zero = 0;\n\nvar one = 1;\n\nvar minus_one = -1;\n\nvar max_int = 2147483647;\n\nvar min_int = -2147483648;\n\nexports.zero = zero;\nexports.one = one;\nexports.minus_one = minus_one;\nexports.succ = succ;\nexports.pred = pred;\nexports.abs = abs;\nexports.max_int = max_int;\nexports.min_int = min_int;\nexports.lognot = lognot;\nexports.to_string = to_string;\nexports.compare = compare;\n/* No side effect */\n","'use strict';\n\nvar Caml_int64 = require(\"./caml_int64.js\");\nvar Caml_format = require(\"./caml_format.js\");\n\nfunction succ(n) {\n  return Caml_int64.add(n, /* int64 */[\n              /* hi */0,\n              /* lo */1\n            ]);\n}\n\nfunction pred(n) {\n  return Caml_int64.sub(n, /* int64 */[\n              /* hi */0,\n              /* lo */1\n            ]);\n}\n\nfunction abs(n) {\n  if (Caml_int64.ge(n, /* int64 */[\n          /* hi */0,\n          /* lo */0\n        ])) {\n    return n;\n  } else {\n    return Caml_int64.neg(n);\n  }\n}\n\nfunction lognot(n) {\n  return Caml_int64.xor(n, /* int64 */[\n              /* hi */-1,\n              /* lo */4294967295\n            ]);\n}\n\nfunction to_string(n) {\n  return Caml_format.caml_int64_format(\"%d\", n);\n}\n\nvar compare = Caml_int64.compare;\n\nvar zero = /* int64 */[\n  /* hi */0,\n  /* lo */0\n];\n\nvar one = /* int64 */[\n  /* hi */0,\n  /* lo */1\n];\n\nvar minus_one = /* int64 */[\n  /* hi */-1,\n  /* lo */4294967295\n];\n\nvar max_int = /* int64 */[\n  /* hi */2147483647,\n  /* lo */4294967295\n];\n\nvar min_int = /* int64 */[\n  /* hi */-2147483648,\n  /* lo */0\n];\n\nexports.zero = zero;\nexports.one = one;\nexports.minus_one = minus_one;\nexports.succ = succ;\nexports.pred = pred;\nexports.abs = abs;\nexports.max_int = max_int;\nexports.min_int = min_int;\nexports.lognot = lognot;\nexports.to_string = to_string;\nexports.compare = compare;\n/* No side effect */\n","'use strict';\n\nvar Caml_string = require(\"./caml_string.js\");\nvar Caml_builtin_exceptions = require(\"./caml_builtin_exceptions.js\");\n\nfunction chr(n) {\n  if (n < 0 || n > 255) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Char.chr\"\n        ];\n  } else {\n    return n;\n  }\n}\n\nfunction escaped(c) {\n  var exit = 0;\n  if (c >= 40) {\n    if (c !== 92) {\n      exit = c >= 127 ? 1 : 2;\n    } else {\n      return \"\\\\\\\\\";\n    }\n  } else if (c >= 32) {\n    if (c >= 39) {\n      return \"\\\\'\";\n    } else {\n      exit = 2;\n    }\n  } else if (c >= 14) {\n    exit = 1;\n  } else {\n    switch (c) {\n      case 8 : \n          return \"\\\\b\";\n      case 9 : \n          return \"\\\\t\";\n      case 10 : \n          return \"\\\\n\";\n      case 0 : \n      case 1 : \n      case 2 : \n      case 3 : \n      case 4 : \n      case 5 : \n      case 6 : \n      case 7 : \n      case 11 : \n      case 12 : \n          exit = 1;\n          break;\n      case 13 : \n          return \"\\\\r\";\n      \n    }\n  }\n  switch (exit) {\n    case 1 : \n        var s = Caml_string.caml_create_string(4);\n        s[0] = /* \"\\\\\" */92;\n        s[1] = 48 + (c / 100 | 0) | 0;\n        s[2] = 48 + (c / 10 | 0) % 10 | 0;\n        s[3] = 48 + c % 10 | 0;\n        return Caml_string.bytes_to_string(s);\n    case 2 : \n        var s$1 = Caml_string.caml_create_string(1);\n        s$1[0] = c;\n        return Caml_string.bytes_to_string(s$1);\n    \n  }\n}\n\nfunction lowercase(c) {\n  if (c >= /* \"A\" */65 && c <= /* \"Z\" */90 || c >= /* \"\\192\" */192 && c <= /* \"\\214\" */214 || c >= /* \"\\216\" */216 && c <= /* \"\\222\" */222) {\n    return c + 32 | 0;\n  } else {\n    return c;\n  }\n}\n\nfunction uppercase(c) {\n  if (c >= /* \"a\" */97 && c <= /* \"z\" */122 || c >= /* \"\\224\" */224 && c <= /* \"\\246\" */246 || c >= /* \"\\248\" */248 && c <= /* \"\\254\" */254) {\n    return c - 32 | 0;\n  } else {\n    return c;\n  }\n}\n\nfunction compare(c1, c2) {\n  return c1 - c2 | 0;\n}\n\nexports.chr = chr;\nexports.escaped = escaped;\nexports.lowercase = lowercase;\nexports.uppercase = uppercase;\nexports.compare = compare;\n/* No side effect */\n","'use strict';\n\nvar Char = require(\"./char.js\");\nvar List = require(\"./list.js\");\nvar Curry = require(\"./curry.js\");\nvar Caml_obj = require(\"./caml_obj.js\");\nvar Caml_int32 = require(\"./caml_int32.js\");\nvar Caml_string = require(\"./caml_string.js\");\nvar Caml_primitive = require(\"./caml_primitive.js\");\nvar Caml_builtin_exceptions = require(\"./caml_builtin_exceptions.js\");\n\nfunction make(n, c) {\n  var s = Caml_string.caml_create_string(n);\n  Caml_string.caml_fill_string(s, 0, n, c);\n  return s;\n}\n\nfunction init(n, f) {\n  var s = Caml_string.caml_create_string(n);\n  for(var i = 0 ,i_finish = n - 1 | 0; i <= i_finish; ++i){\n    s[i] = Curry._1(f, i);\n  }\n  return s;\n}\n\nvar empty = [];\n\nfunction copy(s) {\n  var len = s.length;\n  var r = Caml_string.caml_create_string(len);\n  Caml_string.caml_blit_bytes(s, 0, r, 0, len);\n  return r;\n}\n\nfunction to_string(b) {\n  return Caml_string.bytes_to_string(copy(b));\n}\n\nfunction of_string(s) {\n  return copy(Caml_string.bytes_of_string(s));\n}\n\nfunction sub(s, ofs, len) {\n  if (ofs < 0 || len < 0 || ofs > (s.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"String.sub / Bytes.sub\"\n        ];\n  } else {\n    var r = Caml_string.caml_create_string(len);\n    Caml_string.caml_blit_bytes(s, ofs, r, 0, len);\n    return r;\n  }\n}\n\nfunction sub_string(b, ofs, len) {\n  return Caml_string.bytes_to_string(sub(b, ofs, len));\n}\n\nfunction extend(s, left, right) {\n  var len = (s.length + left | 0) + right | 0;\n  var r = Caml_string.caml_create_string(len);\n  var match = left < 0 ? /* tuple */[\n      -left | 0,\n      0\n    ] : /* tuple */[\n      0,\n      left\n    ];\n  var dstoff = match[1];\n  var srcoff = match[0];\n  var cpylen = Caml_primitive.caml_int_min(s.length - srcoff | 0, len - dstoff | 0);\n  if (cpylen > 0) {\n    Caml_string.caml_blit_bytes(s, srcoff, r, dstoff, cpylen);\n  }\n  return r;\n}\n\nfunction fill(s, ofs, len, c) {\n  if (ofs < 0 || len < 0 || ofs > (s.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"String.fill / Bytes.fill\"\n        ];\n  } else {\n    return Caml_string.caml_fill_string(s, ofs, len, c);\n  }\n}\n\nfunction blit(s1, ofs1, s2, ofs2, len) {\n  if (len < 0 || ofs1 < 0 || ofs1 > (s1.length - len | 0) || ofs2 < 0 || ofs2 > (s2.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Bytes.blit\"\n        ];\n  } else {\n    return Caml_string.caml_blit_bytes(s1, ofs1, s2, ofs2, len);\n  }\n}\n\nfunction blit_string(s1, ofs1, s2, ofs2, len) {\n  if (len < 0 || ofs1 < 0 || ofs1 > (s1.length - len | 0) || ofs2 < 0 || ofs2 > (s2.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"String.blit / Bytes.blit_string\"\n        ];\n  } else {\n    return Caml_string.caml_blit_string(s1, ofs1, s2, ofs2, len);\n  }\n}\n\nfunction iter(f, a) {\n  for(var i = 0 ,i_finish = a.length - 1 | 0; i <= i_finish; ++i){\n    Curry._1(f, a[i]);\n  }\n  return /* () */0;\n}\n\nfunction iteri(f, a) {\n  for(var i = 0 ,i_finish = a.length - 1 | 0; i <= i_finish; ++i){\n    Curry._2(f, i, a[i]);\n  }\n  return /* () */0;\n}\n\nfunction concat(sep, l) {\n  if (l) {\n    var hd = l[0];\n    var num = [0];\n    var len = [0];\n    List.iter((function (s) {\n            num[0] = num[0] + 1 | 0;\n            len[0] = len[0] + s.length | 0;\n            return /* () */0;\n          }), l);\n    var r = Caml_string.caml_create_string(len[0] + Caml_int32.imul(sep.length, num[0] - 1 | 0) | 0);\n    Caml_string.caml_blit_bytes(hd, 0, r, 0, hd.length);\n    var pos = [hd.length];\n    List.iter((function (s) {\n            Caml_string.caml_blit_bytes(sep, 0, r, pos[0], sep.length);\n            pos[0] = pos[0] + sep.length | 0;\n            Caml_string.caml_blit_bytes(s, 0, r, pos[0], s.length);\n            pos[0] = pos[0] + s.length | 0;\n            return /* () */0;\n          }), l[1]);\n    return r;\n  } else {\n    return empty;\n  }\n}\n\nfunction cat(s1, s2) {\n  var l1 = s1.length;\n  var l2 = s2.length;\n  var r = Caml_string.caml_create_string(l1 + l2 | 0);\n  Caml_string.caml_blit_bytes(s1, 0, r, 0, l1);\n  Caml_string.caml_blit_bytes(s2, 0, r, l1, l2);\n  return r;\n}\n\nfunction is_space(param) {\n  var switcher = param - 9 | 0;\n  if (switcher > 4 || switcher < 0) {\n    if (switcher !== 23) {\n      return false;\n    } else {\n      return true;\n    }\n  } else if (switcher !== 2) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction trim(s) {\n  var len = s.length;\n  var i = 0;\n  while(i < len && is_space(s[i])) {\n    i = i + 1 | 0;\n  };\n  var j = len - 1 | 0;\n  while(j >= i && is_space(s[j])) {\n    j = j - 1 | 0;\n  };\n  if (j >= i) {\n    return sub(s, i, (j - i | 0) + 1 | 0);\n  } else {\n    return empty;\n  }\n}\n\nfunction escaped(s) {\n  var n = 0;\n  for(var i = 0 ,i_finish = s.length - 1 | 0; i <= i_finish; ++i){\n    var match = s[i];\n    var tmp;\n    if (match >= 32) {\n      var switcher = match - 34 | 0;\n      tmp = switcher > 58 || switcher < 0 ? (\n          switcher >= 93 ? 4 : 1\n        ) : (\n          switcher > 57 || switcher < 1 ? 2 : 1\n        );\n    } else {\n      tmp = match >= 11 ? (\n          match !== 13 ? 4 : 2\n        ) : (\n          match >= 8 ? 2 : 4\n        );\n    }\n    n = n + tmp | 0;\n  }\n  if (n === s.length) {\n    return copy(s);\n  } else {\n    var s$prime = Caml_string.caml_create_string(n);\n    n = 0;\n    for(var i$1 = 0 ,i_finish$1 = s.length - 1 | 0; i$1 <= i_finish$1; ++i$1){\n      var c = s[i$1];\n      var exit = 0;\n      if (c >= 35) {\n        if (c !== 92) {\n          if (c >= 127) {\n            exit = 1;\n          } else {\n            s$prime[n] = c;\n          }\n        } else {\n          exit = 2;\n        }\n      } else if (c >= 32) {\n        if (c >= 34) {\n          exit = 2;\n        } else {\n          s$prime[n] = c;\n        }\n      } else if (c >= 14) {\n        exit = 1;\n      } else {\n        switch (c) {\n          case 8 : \n              s$prime[n] = /* \"\\\\\" */92;\n              n = n + 1 | 0;\n              s$prime[n] = /* \"b\" */98;\n              break;\n          case 9 : \n              s$prime[n] = /* \"\\\\\" */92;\n              n = n + 1 | 0;\n              s$prime[n] = /* \"t\" */116;\n              break;\n          case 10 : \n              s$prime[n] = /* \"\\\\\" */92;\n              n = n + 1 | 0;\n              s$prime[n] = /* \"n\" */110;\n              break;\n          case 0 : \n          case 1 : \n          case 2 : \n          case 3 : \n          case 4 : \n          case 5 : \n          case 6 : \n          case 7 : \n          case 11 : \n          case 12 : \n              exit = 1;\n              break;\n          case 13 : \n              s$prime[n] = /* \"\\\\\" */92;\n              n = n + 1 | 0;\n              s$prime[n] = /* \"r\" */114;\n              break;\n          \n        }\n      }\n      switch (exit) {\n        case 1 : \n            s$prime[n] = /* \"\\\\\" */92;\n            n = n + 1 | 0;\n            s$prime[n] = 48 + (c / 100 | 0) | 0;\n            n = n + 1 | 0;\n            s$prime[n] = 48 + (c / 10 | 0) % 10 | 0;\n            n = n + 1 | 0;\n            s$prime[n] = 48 + c % 10 | 0;\n            break;\n        case 2 : \n            s$prime[n] = /* \"\\\\\" */92;\n            n = n + 1 | 0;\n            s$prime[n] = c;\n            break;\n        \n      }\n      n = n + 1 | 0;\n    }\n    return s$prime;\n  }\n}\n\nfunction map(f, s) {\n  var l = s.length;\n  if (l === 0) {\n    return s;\n  } else {\n    var r = Caml_string.caml_create_string(l);\n    for(var i = 0 ,i_finish = l - 1 | 0; i <= i_finish; ++i){\n      r[i] = Curry._1(f, s[i]);\n    }\n    return r;\n  }\n}\n\nfunction mapi(f, s) {\n  var l = s.length;\n  if (l === 0) {\n    return s;\n  } else {\n    var r = Caml_string.caml_create_string(l);\n    for(var i = 0 ,i_finish = l - 1 | 0; i <= i_finish; ++i){\n      r[i] = Curry._2(f, i, s[i]);\n    }\n    return r;\n  }\n}\n\nfunction uppercase(s) {\n  return map(Char.uppercase, s);\n}\n\nfunction lowercase(s) {\n  return map(Char.lowercase, s);\n}\n\nfunction apply1(f, s) {\n  if (s.length === 0) {\n    return s;\n  } else {\n    var r = copy(s);\n    r[0] = Curry._1(f, s[0]);\n    return r;\n  }\n}\n\nfunction capitalize(s) {\n  return apply1(Char.uppercase, s);\n}\n\nfunction uncapitalize(s) {\n  return apply1(Char.lowercase, s);\n}\n\nfunction index_rec(s, lim, _i, c) {\n  while(true) {\n    var i = _i;\n    if (i >= lim) {\n      throw Caml_builtin_exceptions.not_found;\n    } else if (s[i] === c) {\n      return i;\n    } else {\n      _i = i + 1 | 0;\n      continue ;\n    }\n  };\n}\n\nfunction index(s, c) {\n  return index_rec(s, s.length, 0, c);\n}\n\nfunction index_from(s, i, c) {\n  var l = s.length;\n  if (i < 0 || i > l) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"String.index_from / Bytes.index_from\"\n        ];\n  } else {\n    return index_rec(s, l, i, c);\n  }\n}\n\nfunction rindex_rec(s, _i, c) {\n  while(true) {\n    var i = _i;\n    if (i < 0) {\n      throw Caml_builtin_exceptions.not_found;\n    } else if (s[i] === c) {\n      return i;\n    } else {\n      _i = i - 1 | 0;\n      continue ;\n    }\n  };\n}\n\nfunction rindex(s, c) {\n  return rindex_rec(s, s.length - 1 | 0, c);\n}\n\nfunction rindex_from(s, i, c) {\n  if (i < -1 || i >= s.length) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"String.rindex_from / Bytes.rindex_from\"\n        ];\n  } else {\n    return rindex_rec(s, i, c);\n  }\n}\n\nfunction contains_from(s, i, c) {\n  var l = s.length;\n  if (i < 0 || i > l) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"String.contains_from / Bytes.contains_from\"\n        ];\n  } else {\n    try {\n      index_rec(s, l, i, c);\n      return true;\n    }\n    catch (exn){\n      if (exn === Caml_builtin_exceptions.not_found) {\n        return false;\n      } else {\n        throw exn;\n      }\n    }\n  }\n}\n\nfunction contains(s, c) {\n  return contains_from(s, 0, c);\n}\n\nfunction rcontains_from(s, i, c) {\n  if (i < 0 || i >= s.length) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"String.rcontains_from / Bytes.rcontains_from\"\n        ];\n  } else {\n    try {\n      rindex_rec(s, i, c);\n      return true;\n    }\n    catch (exn){\n      if (exn === Caml_builtin_exceptions.not_found) {\n        return false;\n      } else {\n        throw exn;\n      }\n    }\n  }\n}\n\nvar compare = Caml_obj.caml_compare;\n\nvar unsafe_to_string = Caml_string.bytes_to_string;\n\nvar unsafe_of_string = Caml_string.bytes_of_string;\n\nexports.make = make;\nexports.init = init;\nexports.empty = empty;\nexports.copy = copy;\nexports.of_string = of_string;\nexports.to_string = to_string;\nexports.sub = sub;\nexports.sub_string = sub_string;\nexports.extend = extend;\nexports.fill = fill;\nexports.blit = blit;\nexports.blit_string = blit_string;\nexports.concat = concat;\nexports.cat = cat;\nexports.iter = iter;\nexports.iteri = iteri;\nexports.map = map;\nexports.mapi = mapi;\nexports.trim = trim;\nexports.escaped = escaped;\nexports.index = index;\nexports.rindex = rindex;\nexports.index_from = index_from;\nexports.rindex_from = rindex_from;\nexports.contains = contains;\nexports.contains_from = contains_from;\nexports.rcontains_from = rcontains_from;\nexports.uppercase = uppercase;\nexports.lowercase = lowercase;\nexports.capitalize = capitalize;\nexports.uncapitalize = uncapitalize;\nexports.compare = compare;\nexports.unsafe_to_string = unsafe_to_string;\nexports.unsafe_of_string = unsafe_of_string;\n/* No side effect */\n","'use strict';\n\nvar List = require(\"./list.js\");\nvar Bytes = require(\"./bytes.js\");\nvar Caml_int32 = require(\"./caml_int32.js\");\nvar Caml_string = require(\"./caml_string.js\");\nvar Caml_primitive = require(\"./caml_primitive.js\");\n\nfunction make(n, c) {\n  return Caml_string.bytes_to_string(Bytes.make(n, c));\n}\n\nfunction init(n, f) {\n  return Caml_string.bytes_to_string(Bytes.init(n, f));\n}\n\nfunction copy(s) {\n  return Caml_string.bytes_to_string(Bytes.copy(Caml_string.bytes_of_string(s)));\n}\n\nfunction sub(s, ofs, len) {\n  return Caml_string.bytes_to_string(Bytes.sub(Caml_string.bytes_of_string(s), ofs, len));\n}\n\nfunction concat(sep, l) {\n  if (l) {\n    var hd = l[0];\n    var num = [0];\n    var len = [0];\n    List.iter((function (s) {\n            num[0] = num[0] + 1 | 0;\n            len[0] = len[0] + s.length | 0;\n            return /* () */0;\n          }), l);\n    var r = Caml_string.caml_create_string(len[0] + Caml_int32.imul(sep.length, num[0] - 1 | 0) | 0);\n    Caml_string.caml_blit_string(hd, 0, r, 0, hd.length);\n    var pos = [hd.length];\n    List.iter((function (s) {\n            Caml_string.caml_blit_string(sep, 0, r, pos[0], sep.length);\n            pos[0] = pos[0] + sep.length | 0;\n            Caml_string.caml_blit_string(s, 0, r, pos[0], s.length);\n            pos[0] = pos[0] + s.length | 0;\n            return /* () */0;\n          }), l[1]);\n    return Caml_string.bytes_to_string(r);\n  } else {\n    return \"\";\n  }\n}\n\nfunction iter(f, s) {\n  return Bytes.iter(f, Caml_string.bytes_of_string(s));\n}\n\nfunction iteri(f, s) {\n  return Bytes.iteri(f, Caml_string.bytes_of_string(s));\n}\n\nfunction map(f, s) {\n  return Caml_string.bytes_to_string(Bytes.map(f, Caml_string.bytes_of_string(s)));\n}\n\nfunction mapi(f, s) {\n  return Caml_string.bytes_to_string(Bytes.mapi(f, Caml_string.bytes_of_string(s)));\n}\n\nfunction is_space(param) {\n  var switcher = param - 9 | 0;\n  if (switcher > 4 || switcher < 0) {\n    if (switcher !== 23) {\n      return false;\n    } else {\n      return true;\n    }\n  } else if (switcher !== 2) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction trim(s) {\n  if (s === \"\" || !(is_space(s.charCodeAt(0)) || is_space(s.charCodeAt(s.length - 1 | 0)))) {\n    return s;\n  } else {\n    return Caml_string.bytes_to_string(Bytes.trim(Caml_string.bytes_of_string(s)));\n  }\n}\n\nfunction escaped(s) {\n  var needs_escape = function (_i) {\n    while(true) {\n      var i = _i;\n      if (i >= s.length) {\n        return false;\n      } else {\n        var match = s.charCodeAt(i);\n        if (match >= 32) {\n          var switcher = match - 34 | 0;\n          if (switcher > 58 || switcher < 0) {\n            if (switcher >= 93) {\n              return true;\n            } else {\n              _i = i + 1 | 0;\n              continue ;\n            }\n          } else if (switcher > 57 || switcher < 1) {\n            return true;\n          } else {\n            _i = i + 1 | 0;\n            continue ;\n          }\n        } else {\n          return true;\n        }\n      }\n    };\n  };\n  if (needs_escape(0)) {\n    return Caml_string.bytes_to_string(Bytes.escaped(Caml_string.bytes_of_string(s)));\n  } else {\n    return s;\n  }\n}\n\nfunction index(s, c) {\n  return Bytes.index(Caml_string.bytes_of_string(s), c);\n}\n\nfunction rindex(s, c) {\n  return Bytes.rindex(Caml_string.bytes_of_string(s), c);\n}\n\nfunction index_from(s, i, c) {\n  return Bytes.index_from(Caml_string.bytes_of_string(s), i, c);\n}\n\nfunction rindex_from(s, i, c) {\n  return Bytes.rindex_from(Caml_string.bytes_of_string(s), i, c);\n}\n\nfunction contains(s, c) {\n  return Bytes.contains(Caml_string.bytes_of_string(s), c);\n}\n\nfunction contains_from(s, i, c) {\n  return Bytes.contains_from(Caml_string.bytes_of_string(s), i, c);\n}\n\nfunction rcontains_from(s, i, c) {\n  return Bytes.rcontains_from(Caml_string.bytes_of_string(s), i, c);\n}\n\nfunction uppercase(s) {\n  return Caml_string.bytes_to_string(Bytes.uppercase(Caml_string.bytes_of_string(s)));\n}\n\nfunction lowercase(s) {\n  return Caml_string.bytes_to_string(Bytes.lowercase(Caml_string.bytes_of_string(s)));\n}\n\nfunction capitalize(s) {\n  return Caml_string.bytes_to_string(Bytes.capitalize(Caml_string.bytes_of_string(s)));\n}\n\nfunction uncapitalize(s) {\n  return Caml_string.bytes_to_string(Bytes.uncapitalize(Caml_string.bytes_of_string(s)));\n}\n\nvar compare = Caml_primitive.caml_string_compare;\n\nvar fill = Bytes.fill;\n\nvar blit = Bytes.blit_string;\n\nexports.make = make;\nexports.init = init;\nexports.copy = copy;\nexports.sub = sub;\nexports.fill = fill;\nexports.blit = blit;\nexports.concat = concat;\nexports.iter = iter;\nexports.iteri = iteri;\nexports.map = map;\nexports.mapi = mapi;\nexports.trim = trim;\nexports.escaped = escaped;\nexports.index = index;\nexports.rindex = rindex;\nexports.index_from = index_from;\nexports.rindex_from = rindex_from;\nexports.contains = contains;\nexports.contains_from = contains_from;\nexports.rcontains_from = rcontains_from;\nexports.uppercase = uppercase;\nexports.lowercase = lowercase;\nexports.capitalize = capitalize;\nexports.uncapitalize = uncapitalize;\nexports.compare = compare;\n/* No side effect */\n","'use strict';\n\n\nfunction cmn(q, a, b, x, s, t) {\n  var a$1 = ((a + q | 0) + x | 0) + t | 0;\n  return ((a$1 << s) | (a$1 >>> (32 - s | 0)) | 0) + b | 0;\n}\n\nfunction f(a, b, c, d, x, s, t) {\n  return cmn(b & c | (b ^ -1) & d, a, b, x, s, t);\n}\n\nfunction g(a, b, c, d, x, s, t) {\n  return cmn(b & d | c & (d ^ -1), a, b, x, s, t);\n}\n\nfunction h(a, b, c, d, x, s, t) {\n  return cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction i(a, b, c, d, x, s, t) {\n  return cmn(c ^ (b | d ^ -1), a, b, x, s, t);\n}\n\nfunction cycle(x, k) {\n  var a = x[0];\n  var b = x[1];\n  var c = x[2];\n  var d = x[3];\n  a = f(a, b, c, d, k[0], 7, -680876936);\n  d = f(d, a, b, c, k[1], 12, -389564586);\n  c = f(c, d, a, b, k[2], 17, 606105819);\n  b = f(b, c, d, a, k[3], 22, -1044525330);\n  a = f(a, b, c, d, k[4], 7, -176418897);\n  d = f(d, a, b, c, k[5], 12, 1200080426);\n  c = f(c, d, a, b, k[6], 17, -1473231341);\n  b = f(b, c, d, a, k[7], 22, -45705983);\n  a = f(a, b, c, d, k[8], 7, 1770035416);\n  d = f(d, a, b, c, k[9], 12, -1958414417);\n  c = f(c, d, a, b, k[10], 17, -42063);\n  b = f(b, c, d, a, k[11], 22, -1990404162);\n  a = f(a, b, c, d, k[12], 7, 1804603682);\n  d = f(d, a, b, c, k[13], 12, -40341101);\n  c = f(c, d, a, b, k[14], 17, -1502002290);\n  b = f(b, c, d, a, k[15], 22, 1236535329);\n  a = g(a, b, c, d, k[1], 5, -165796510);\n  d = g(d, a, b, c, k[6], 9, -1069501632);\n  c = g(c, d, a, b, k[11], 14, 643717713);\n  b = g(b, c, d, a, k[0], 20, -373897302);\n  a = g(a, b, c, d, k[5], 5, -701558691);\n  d = g(d, a, b, c, k[10], 9, 38016083);\n  c = g(c, d, a, b, k[15], 14, -660478335);\n  b = g(b, c, d, a, k[4], 20, -405537848);\n  a = g(a, b, c, d, k[9], 5, 568446438);\n  d = g(d, a, b, c, k[14], 9, -1019803690);\n  c = g(c, d, a, b, k[3], 14, -187363961);\n  b = g(b, c, d, a, k[8], 20, 1163531501);\n  a = g(a, b, c, d, k[13], 5, -1444681467);\n  d = g(d, a, b, c, k[2], 9, -51403784);\n  c = g(c, d, a, b, k[7], 14, 1735328473);\n  b = g(b, c, d, a, k[12], 20, -1926607734);\n  a = h(a, b, c, d, k[5], 4, -378558);\n  d = h(d, a, b, c, k[8], 11, -2022574463);\n  c = h(c, d, a, b, k[11], 16, 1839030562);\n  b = h(b, c, d, a, k[14], 23, -35309556);\n  a = h(a, b, c, d, k[1], 4, -1530992060);\n  d = h(d, a, b, c, k[4], 11, 1272893353);\n  c = h(c, d, a, b, k[7], 16, -155497632);\n  b = h(b, c, d, a, k[10], 23, -1094730640);\n  a = h(a, b, c, d, k[13], 4, 681279174);\n  d = h(d, a, b, c, k[0], 11, -358537222);\n  c = h(c, d, a, b, k[3], 16, -722521979);\n  b = h(b, c, d, a, k[6], 23, 76029189);\n  a = h(a, b, c, d, k[9], 4, -640364487);\n  d = h(d, a, b, c, k[12], 11, -421815835);\n  c = h(c, d, a, b, k[15], 16, 530742520);\n  b = h(b, c, d, a, k[2], 23, -995338651);\n  a = i(a, b, c, d, k[0], 6, -198630844);\n  d = i(d, a, b, c, k[7], 10, 1126891415);\n  c = i(c, d, a, b, k[14], 15, -1416354905);\n  b = i(b, c, d, a, k[5], 21, -57434055);\n  a = i(a, b, c, d, k[12], 6, 1700485571);\n  d = i(d, a, b, c, k[3], 10, -1894986606);\n  c = i(c, d, a, b, k[10], 15, -1051523);\n  b = i(b, c, d, a, k[1], 21, -2054922799);\n  a = i(a, b, c, d, k[8], 6, 1873313359);\n  d = i(d, a, b, c, k[15], 10, -30611744);\n  c = i(c, d, a, b, k[6], 15, -1560198380);\n  b = i(b, c, d, a, k[13], 21, 1309151649);\n  a = i(a, b, c, d, k[4], 6, -145523070);\n  d = i(d, a, b, c, k[11], 10, -1120210379);\n  c = i(c, d, a, b, k[2], 15, 718787259);\n  b = i(b, c, d, a, k[9], 21, -343485551);\n  x[0] = a + x[0] | 0;\n  x[1] = b + x[1] | 0;\n  x[2] = c + x[2] | 0;\n  x[3] = d + x[3] | 0;\n  return /* () */0;\n}\n\nvar state = /* array */[\n  1732584193,\n  -271733879,\n  -1732584194,\n  271733878\n];\n\nvar md5blk = /* array */[\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0\n];\n\nfunction caml_md5_string(s, start, len) {\n  var s$1 = s.slice(start, len);\n  var n = s$1.length;\n  state[0] = 1732584193;\n  state[1] = -271733879;\n  state[2] = -1732584194;\n  state[3] = 271733878;\n  for(var i = 0; i <= 15; ++i){\n    md5blk[i] = 0;\n  }\n  var i_end = n / 64 | 0;\n  for(var i$1 = 1; i$1 <= i_end; ++i$1){\n    for(var j = 0; j <= 15; ++j){\n      var k = ((i$1 << 6) - 64 | 0) + (j << 2) | 0;\n      md5blk[j] = ((s$1.charCodeAt(k) + (s$1.charCodeAt(k + 1 | 0) << 8) | 0) + (s$1.charCodeAt(k + 2 | 0) << 16) | 0) + (s$1.charCodeAt(k + 3 | 0) << 24) | 0;\n    }\n    cycle(state, md5blk);\n  }\n  var s_tail = s$1.slice((i_end << 6));\n  for(var kk = 0; kk <= 15; ++kk){\n    md5blk[kk] = 0;\n  }\n  var i_end$1 = s_tail.length - 1 | 0;\n  for(var i$2 = 0; i$2 <= i_end$1; ++i$2){\n    md5blk[i$2 / 4 | 0] = md5blk[i$2 / 4 | 0] | (s_tail.charCodeAt(i$2) << (i$2 % 4 << 3));\n  }\n  var i$3 = i_end$1 + 1 | 0;\n  md5blk[i$3 / 4 | 0] = md5blk[i$3 / 4 | 0] | (128 << (i$3 % 4 << 3));\n  if (i$3 > 55) {\n    cycle(state, md5blk);\n    for(var i$4 = 0; i$4 <= 15; ++i$4){\n      md5blk[i$4] = 0;\n    }\n  }\n  md5blk[14] = (n << 3);\n  cycle(state, md5blk);\n  return String.fromCharCode(state[0] & 255, (state[0] >> 8) & 255, (state[0] >> 16) & 255, (state[0] >> 24) & 255, state[1] & 255, (state[1] >> 8) & 255, (state[1] >> 16) & 255, (state[1] >> 24) & 255, state[2] & 255, (state[2] >> 8) & 255, (state[2] >> 16) & 255, (state[2] >> 24) & 255, state[3] & 255, (state[3] >> 8) & 255, (state[3] >> 16) & 255, (state[3] >> 24) & 255);\n}\n\nexports.caml_md5_string = caml_md5_string;\n/* No side effect */\n","'use strict';\n\nvar Char = require(\"./char.js\");\nvar $$String = require(\"./string.js\");\nvar Caml_md5 = require(\"./caml_md5.js\");\nvar Pervasives = require(\"./pervasives.js\");\nvar Caml_string = require(\"./caml_string.js\");\nvar Caml_missing_polyfill = require(\"./caml_missing_polyfill.js\");\nvar Caml_builtin_exceptions = require(\"./caml_builtin_exceptions.js\");\n\nfunction string(str) {\n  return Caml_md5.caml_md5_string(str, 0, str.length);\n}\n\nfunction bytes(b) {\n  return string(Caml_string.bytes_to_string(b));\n}\n\nfunction substring(str, ofs, len) {\n  if (ofs < 0 || len < 0 || ofs > (str.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Digest.substring\"\n        ];\n  } else {\n    return Caml_md5.caml_md5_string(str, ofs, len);\n  }\n}\n\nfunction subbytes(b, ofs, len) {\n  return substring(Caml_string.bytes_to_string(b), ofs, len);\n}\n\nfunction file(filename) {\n  Pervasives.open_in_bin(filename);\n  var exit = 0;\n  var d;\n  try {\n    d = Caml_missing_polyfill.not_implemented(\"caml_md5_chan\");\n    exit = 1;\n  }\n  catch (e){\n    Caml_missing_polyfill.not_implemented(\"caml_ml_close_channel\");\n    throw e;\n  }\n  if (exit === 1) {\n    Caml_missing_polyfill.not_implemented(\"caml_ml_close_channel\");\n    return d;\n  }\n  \n}\n\nvar output = Pervasives.output_string;\n\nfunction input(chan) {\n  return Pervasives.really_input_string(chan, 16);\n}\n\nfunction char_hex(n) {\n  return n + (\n          n < 10 ? /* \"0\" */48 : 87\n        ) | 0;\n}\n\nfunction to_hex(d) {\n  var result = Caml_string.caml_create_string(32);\n  for(var i = 0; i <= 15; ++i){\n    var x = Caml_string.get(d, i);\n    result[(i << 1)] = char_hex((x >>> 4));\n    result[(i << 1) + 1 | 0] = char_hex(x & 15);\n  }\n  return Caml_string.bytes_to_string(result);\n}\n\nfunction from_hex(s) {\n  if (s.length !== 32) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Digest.from_hex\"\n        ];\n  }\n  var digit = function (c) {\n    if (c >= 65) {\n      if (c >= 97) {\n        if (c >= 103) {\n          throw [\n                Caml_builtin_exceptions.invalid_argument,\n                \"Digest.from_hex\"\n              ];\n        } else {\n          return (c - /* \"a\" */97 | 0) + 10 | 0;\n        }\n      } else if (c >= 71) {\n        throw [\n              Caml_builtin_exceptions.invalid_argument,\n              \"Digest.from_hex\"\n            ];\n      } else {\n        return (c - /* \"A\" */65 | 0) + 10 | 0;\n      }\n    } else if (c > 57 || c < 48) {\n      throw [\n            Caml_builtin_exceptions.invalid_argument,\n            \"Digest.from_hex\"\n          ];\n    } else {\n      return c - /* \"0\" */48 | 0;\n    }\n  };\n  var $$byte = function (i) {\n    return (digit(Caml_string.get(s, i)) << 4) + digit(Caml_string.get(s, i + 1 | 0)) | 0;\n  };\n  var result = Caml_string.caml_create_string(16);\n  for(var i = 0; i <= 15; ++i){\n    result[i] = Char.chr($$byte((i << 1)));\n  }\n  return Caml_string.bytes_to_string(result);\n}\n\nvar compare = $$String.compare;\n\nexports.compare = compare;\nexports.string = string;\nexports.bytes = bytes;\nexports.substring = substring;\nexports.subbytes = subbytes;\nexports.file = file;\nexports.output = output;\nexports.input = input;\nexports.to_hex = to_hex;\nexports.from_hex = from_hex;\n/* No side effect */\n","'use strict';\n\nvar Caml_format = require(\"./caml_format.js\");\nvar Caml_primitive = require(\"./caml_primitive.js\");\n\nfunction succ(n) {\n  return n + 1;\n}\n\nfunction pred(n) {\n  return n - 1;\n}\n\nfunction abs(n) {\n  if (n >= 0) {\n    return n;\n  } else {\n    return -n;\n  }\n}\n\nfunction lognot(n) {\n  return n ^ -1;\n}\n\nfunction to_string(n) {\n  return Caml_format.caml_nativeint_format(\"%d\", n);\n}\n\nvar compare = Caml_primitive.caml_nativeint_compare;\n\nvar zero = 0;\n\nvar one = 1;\n\nvar minus_one = -1;\n\nvar size = 54;\n\nvar max_int = 9007199254740991;\n\nvar min_int = -9007199254740991;\n\nexports.zero = zero;\nexports.one = one;\nexports.minus_one = minus_one;\nexports.succ = succ;\nexports.pred = pred;\nexports.abs = abs;\nexports.size = size;\nexports.max_int = max_int;\nexports.min_int = min_int;\nexports.lognot = lognot;\nexports.to_string = to_string;\nexports.compare = compare;\n/* No side effect */\n","'use strict';\n\nvar $$Array = require(\"./array.js\");\nvar Curry = require(\"./curry.js\");\nvar Int32 = require(\"./int32.js\");\nvar Int64 = require(\"./int64.js\");\nvar Digest = require(\"./digest.js\");\nvar Caml_sys = require(\"./caml_sys.js\");\nvar Nativeint = require(\"./nativeint.js\");\nvar Caml_array = require(\"./caml_array.js\");\nvar Caml_int64 = require(\"./caml_int64.js\");\nvar Caml_string = require(\"./caml_string.js\");\nvar Caml_builtin_exceptions = require(\"./caml_builtin_exceptions.js\");\n\nfunction assign(st1, st2) {\n  $$Array.blit(st2[/* st */0], 0, st1[/* st */0], 0, 55);\n  st1[/* idx */1] = st2[/* idx */1];\n  return /* () */0;\n}\n\nfunction full_init(s, seed) {\n  var combine = function (accu, x) {\n    return Digest.string(accu + String(x));\n  };\n  var extract = function (d) {\n    return ((Caml_string.get(d, 0) + (Caml_string.get(d, 1) << 8) | 0) + (Caml_string.get(d, 2) << 16) | 0) + (Caml_string.get(d, 3) << 24) | 0;\n  };\n  var seed$1 = seed.length === 0 ? /* array */[0] : seed;\n  var l = seed$1.length;\n  for(var i = 0; i <= 54; ++i){\n    Caml_array.caml_array_set(s[/* st */0], i, i);\n  }\n  var accu = \"x\";\n  for(var i$1 = 0 ,i_finish = 54 + (\n      55 > l ? 55 : l\n    ) | 0; i$1 <= i_finish; ++i$1){\n    var j = i$1 % 55;\n    var k = i$1 % l;\n    accu = combine(accu, Caml_array.caml_array_get(seed$1, k));\n    Caml_array.caml_array_set(s[/* st */0], j, (Caml_array.caml_array_get(s[/* st */0], j) ^ extract(accu)) & 1073741823);\n  }\n  s[/* idx */1] = 0;\n  return /* () */0;\n}\n\nfunction make(seed) {\n  var result = /* record */[\n    /* st */Caml_array.caml_make_vect(55, 0),\n    /* idx */0\n  ];\n  full_init(result, seed);\n  return result;\n}\n\nfunction make_self_init() {\n  return make(Caml_sys.caml_sys_random_seed(/* () */0));\n}\n\nfunction copy(s) {\n  var result = /* record */[\n    /* st */Caml_array.caml_make_vect(55, 0),\n    /* idx */0\n  ];\n  assign(result, s);\n  return result;\n}\n\nfunction bits(s) {\n  s[/* idx */1] = (s[/* idx */1] + 1 | 0) % 55;\n  var curval = Caml_array.caml_array_get(s[/* st */0], s[/* idx */1]);\n  var newval = Caml_array.caml_array_get(s[/* st */0], (s[/* idx */1] + 24 | 0) % 55) + (curval ^ (curval >>> 25) & 31) | 0;\n  var newval30 = newval & 1073741823;\n  Caml_array.caml_array_set(s[/* st */0], s[/* idx */1], newval30);\n  return newval30;\n}\n\nfunction $$int(s, bound) {\n  if (bound > 1073741823 || bound <= 0) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Random.int\"\n        ];\n  } else {\n    var s$1 = s;\n    var n = bound;\n    while(true) {\n      var r = bits(s$1);\n      var v = r % n;\n      if ((r - v | 0) > ((1073741823 - n | 0) + 1 | 0)) {\n        continue ;\n      } else {\n        return v;\n      }\n    };\n  }\n}\n\nfunction int32(s, bound) {\n  if (bound <= 0) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Random.int32\"\n        ];\n  } else {\n    var s$1 = s;\n    var n = bound;\n    while(true) {\n      var b1 = bits(s$1);\n      var b2 = ((bits(s$1) & 1) << 30);\n      var r = b1 | b2;\n      var v = r % n;\n      if ((r - v | 0) > ((Int32.max_int - n | 0) + 1 | 0)) {\n        continue ;\n      } else {\n        return v;\n      }\n    };\n  }\n}\n\nfunction int64(s, bound) {\n  if (Caml_int64.le(bound, /* int64 */[\n          /* hi */0,\n          /* lo */0\n        ])) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Random.int64\"\n        ];\n  } else {\n    var s$1 = s;\n    var n = bound;\n    while(true) {\n      var b1 = Caml_int64.of_int32(bits(s$1));\n      var b2 = Caml_int64.lsl_(Caml_int64.of_int32(bits(s$1)), 30);\n      var b3 = Caml_int64.lsl_(Caml_int64.of_int32(bits(s$1) & 7), 60);\n      var r = Caml_int64.or_(b1, /* int64 */[\n            /* hi */b2[0] | b3[0],\n            /* lo */((b2[1] | b3[1]) >>> 0)\n          ]);\n      var v = Caml_int64.mod_(r, n);\n      if (Caml_int64.gt(Caml_int64.sub(r, v), Caml_int64.add(Caml_int64.sub(Int64.max_int, n), /* int64 */[\n                  /* hi */0,\n                  /* lo */1\n                ]))) {\n        continue ;\n      } else {\n        return v;\n      }\n    };\n  }\n}\n\nvar nativeint = Nativeint.size === 32 ? int32 : (function (s, bound) {\n      return int64(s, Caml_int64.of_int32(bound))[1] | 0;\n    });\n\nfunction rawfloat(s) {\n  var r1 = bits(s);\n  var r2 = bits(s);\n  return (r1 / 1073741824.0 + r2) / 1073741824.0;\n}\n\nfunction $$float(s, bound) {\n  return rawfloat(s) * bound;\n}\n\nfunction bool(s) {\n  return (bits(s) & 1) === 0;\n}\n\nvar $$default = /* record */[\n  /* st : array */[\n    987910699,\n    495797812,\n    364182224,\n    414272206,\n    318284740,\n    990407751,\n    383018966,\n    270373319,\n    840823159,\n    24560019,\n    536292337,\n    512266505,\n    189156120,\n    730249596,\n    143776328,\n    51606627,\n    140166561,\n    366354223,\n    1003410265,\n    700563762,\n    981890670,\n    913149062,\n    526082594,\n    1021425055,\n    784300257,\n    667753350,\n    630144451,\n    949649812,\n    48546892,\n    415514493,\n    258888527,\n    511570777,\n    89983870,\n    283659902,\n    308386020,\n    242688715,\n    482270760,\n    865188196,\n    1027664170,\n    207196989,\n    193777847,\n    619708188,\n    671350186,\n    149669678,\n    257044018,\n    87658204,\n    558145612,\n    183450813,\n    28133145,\n    901332182,\n    710253903,\n    510646120,\n    652377910,\n    409934019,\n    801085050\n  ],\n  /* idx */0\n];\n\nfunction bits$1() {\n  return bits($$default);\n}\n\nfunction $$int$1(bound) {\n  return $$int($$default, bound);\n}\n\nfunction int32$1(bound) {\n  return int32($$default, bound);\n}\n\nfunction nativeint$1(bound) {\n  return Curry._2(nativeint, $$default, bound);\n}\n\nfunction int64$1(bound) {\n  return int64($$default, bound);\n}\n\nfunction $$float$1(scale) {\n  return rawfloat($$default) * scale;\n}\n\nfunction bool$1() {\n  return bool($$default);\n}\n\nfunction full_init$1(seed) {\n  return full_init($$default, seed);\n}\n\nfunction init(seed) {\n  return full_init($$default, /* array */[seed]);\n}\n\nfunction self_init() {\n  return full_init$1(Caml_sys.caml_sys_random_seed(/* () */0));\n}\n\nfunction get_state() {\n  return copy($$default);\n}\n\nfunction set_state(s) {\n  return assign($$default, s);\n}\n\nvar State = [\n  make,\n  make_self_init,\n  copy,\n  bits,\n  $$int,\n  int32,\n  nativeint,\n  int64,\n  $$float,\n  bool\n];\n\nexports.init = init;\nexports.full_init = full_init$1;\nexports.self_init = self_init;\nexports.bits = bits$1;\nexports.$$int = $$int$1;\nexports.int32 = int32$1;\nexports.nativeint = nativeint$1;\nexports.int64 = int64$1;\nexports.$$float = $$float$1;\nexports.bool = bool$1;\nexports.State = State;\nexports.get_state = get_state;\nexports.set_state = set_state;\n/* No side effect */\n","// Generated by BUCKLESCRIPT VERSION 3.0.0, PLEASE EDIT WITH CARE\n'use strict';\n\nvar List = require(\"bs-platform/lib/js/list.js\");\nvar Curry = require(\"bs-platform/lib/js/curry.js\");\nvar Utils = require(\"./utils.bs.js\");\nvar Random = require(\"bs-platform/lib/js/random.js\");\nvar Caml_int32 = require(\"bs-platform/lib/js/caml_int32.js\");\nvar Pervasives = require(\"bs-platform/lib/js/pervasives.js\");\nvar Caml_format = require(\"bs-platform/lib/js/caml_format.js\");\nvar Caml_primitive = require(\"bs-platform/lib/js/caml_primitive.js\");\nvar Caml_builtin_exceptions = require(\"bs-platform/lib/js/caml_builtin_exceptions.js\");\n\nvar match = localStorage.getItem(\"highscore\");\n\nvar savedHighScore = match !== null ? Caml_format.caml_int_of_string(match) : 0;\n\nvar pressedKeys = /* record */[\n  /* direction : None */0,\n  /* bbox */false,\n  /* grid */false\n];\n\nfunction keydown(evt) {\n  var match = evt.keyCode;\n  var exit = 0;\n  if (match >= 41) {\n    var switcher = match - 65 | 0;\n    if (switcher > 22 || switcher < 0) {\n      exit = 1;\n    } else {\n      switch (switcher) {\n        case 0 : \n            pressedKeys[/* direction */0] = /* Some */[/* Left */0];\n            return /* () */0;\n        case 1 : \n            pressedKeys[/* bbox */1] = !pressedKeys[/* bbox */1];\n            return /* () */0;\n        case 3 : \n            pressedKeys[/* direction */0] = /* Some */[/* Right */1];\n            return /* () */0;\n        case 6 : \n            pressedKeys[/* grid */2] = !pressedKeys[/* grid */2];\n            return /* () */0;\n        case 18 : \n            pressedKeys[/* direction */0] = /* Some */[/* Down */3];\n            return /* () */0;\n        case 2 : \n        case 4 : \n        case 5 : \n        case 7 : \n        case 8 : \n        case 9 : \n        case 10 : \n        case 11 : \n        case 12 : \n        case 13 : \n        case 14 : \n        case 15 : \n        case 16 : \n        case 17 : \n        case 19 : \n        case 20 : \n        case 21 : \n            exit = 1;\n            break;\n        case 22 : \n            pressedKeys[/* direction */0] = /* Some */[/* Up */2];\n            return /* () */0;\n        \n      }\n    }\n  } else if (match >= 32) {\n    switch (match - 32 | 0) {\n      case 1 : \n      case 2 : \n      case 3 : \n      case 4 : \n          exit = 1;\n          break;\n      case 5 : \n          pressedKeys[/* direction */0] = /* Some */[/* Left */0];\n          return /* () */0;\n      case 0 : \n      case 6 : \n          pressedKeys[/* direction */0] = /* Some */[/* Up */2];\n          return /* () */0;\n      case 7 : \n          pressedKeys[/* direction */0] = /* Some */[/* Right */1];\n          return /* () */0;\n      case 8 : \n          pressedKeys[/* direction */0] = /* Some */[/* Down */3];\n          return /* () */0;\n      \n    }\n  } else {\n    exit = 1;\n  }\n  if (exit === 1) {\n    console.log(\"did not find nothing\" + evt.keyCode);\n    return /* () */0;\n  }\n  \n}\n\nvar xDown = [/* None */0];\n\nvar yDown = [/* None */0];\n\nfunction handleTouchStart() {\n  ((arguments[0].preventDefault()));\n  xDown[0] = /* Some */[(arguments[0].touches[0].clientX)];\n  yDown[0] = /* Some */[(arguments[0].touches[0].clientY)];\n  return /* () */0;\n}\n\nfunction handleTouchMove() {\n  ((arguments[0].preventDefault()));\n  var match = xDown[0];\n  var match$1 = yDown[0];\n  if (match && match$1) {\n    var xUp = (arguments[0].touches[0].clientX);\n    var yUp = (arguments[0].touches[0].clientY);\n    var xDiff = match[0] - xUp | 0;\n    var yDiff = match$1[0] - yUp | 0;\n    if (Pervasives.abs(xDiff) > Pervasives.abs(yDiff)) {\n      pressedKeys[/* direction */0] = xDiff > 0 ? /* Some */[/* Left */0] : /* Some */[/* Right */1];\n      return /* () */0;\n    } else {\n      pressedKeys[/* direction */0] = yDiff > 0 ? /* Some */[/* Up */2] : /* Some */[/* Down */3];\n      return /* () */0;\n    }\n  } else {\n    return /* () */0;\n  }\n}\n\nwindow.addEventListener(\"touchstart\", handleTouchStart);\n\nwindow.addEventListener(\"touchmove\", handleTouchMove);\n\nwindow.addEventListener(\"keydown\", keydown);\n\nvar startWorld_000 = /* frog : record */[\n  /* rect : record */[\n    /* x */Caml_int32.imul(Utils.tileSize, (Utils.cols / 2 | 0) - 1 | 0),\n    /* y */Utils.getYForRow(2) + 8 | 0,\n    /* width */10,\n    /* height */10\n  ],\n  /* leftInJump */0,\n  /* leftInAnimation : None */0,\n  /* direction : Up */2\n];\n\nvar startWorld_009 = /* endzone : :: */[\n  /* tuple */[\n    0,\n    false\n  ],\n  /* :: */[\n    /* tuple */[\n      1,\n      false\n    ],\n    /* :: */[\n      /* tuple */[\n        2,\n        false\n      ],\n      /* :: */[\n        /* tuple */[\n          3,\n          false\n        ],\n        /* :: */[\n          /* tuple */[\n            4,\n            false\n          ],\n          /* [] */0\n        ]\n      ]\n    ]\n  ]\n];\n\nvar startWorld = /* record */[\n  startWorld_000,\n  /* keys */pressedKeys,\n  /* objects : [] */0,\n  /* state : Start */0,\n  /* lives */5,\n  /* score */0,\n  /* highscore */savedHighScore,\n  /* maxRow */1,\n  /* timer */30000,\n  startWorld_009\n];\n\nvar endzoneRects = List.map((function (i) {\n        var x = (Caml_int32.imul(Caml_int32.imul(3, i), Utils.tileSize) + Utils.halfTileSize | 0) - (i << 0) | 0;\n        var rect_001 = /* y */(Utils.tileSize << 1);\n        var rect = /* record */[\n          /* x */x,\n          rect_001,\n          /* width */Utils.tileSize,\n          /* height */Utils.tileSize\n        ];\n        return /* tuple */[\n                i,\n                rect\n              ];\n      }), Utils.$less$neg$great(0, 4));\n\nfunction secondsPerWidthToPixels(vel, dt) {\n  var speed = Utils.width / vel;\n  return speed * dt / 1000;\n}\n\nfunction updateObj(obj, dt) {\n  var nextFrameIndex = obj[/* frameIndex */1] + dt * obj[/* img */3][/* frameSpeed */3];\n  var nextFrame = nextFrameIndex / 1000;\n  var frameSpeed = nextFrame >= obj[/* img */3][/* frames */2] && obj[/* img */3][/* frameSpeed */3] > 0 || nextFrame <= 0 && obj[/* img */3][/* frameSpeed */3] < 0 ? obj[/* img */3][/* frameSpeed */3] * -1 : obj[/* img */3][/* frameSpeed */3];\n  var init = obj[/* rect */0];\n  var init$1 = obj[/* img */3];\n  return /* record */[\n          /* rect : record */[\n            /* x */obj[/* rect */0][/* x */0] + secondsPerWidthToPixels(obj[/* velocity */4], dt),\n            /* y */init[/* y */1],\n            /* width */init[/* width */2],\n            /* height */init[/* height */3]\n          ],\n          /* frameIndex */nextFrame < obj[/* img */3][/* frames */2] && nextFrame > 0 ? nextFrameIndex : (\n              obj[/* objType */5] === /* DivingTurtles */2 ? obj[/* frameIndex */1] : 0\n            ),\n          /* direction */obj[/* direction */2],\n          /* img : record */[\n            /* xStart */init$1[/* xStart */0],\n            /* yStart */init$1[/* yStart */1],\n            /* frames */init$1[/* frames */2],\n            /* frameSpeed */frameSpeed,\n            /* width */init$1[/* width */4],\n            /* height */init$1[/* height */5],\n            /* number */init$1[/* number */6]\n          ],\n          /* velocity */obj[/* velocity */4],\n          /* objType */obj[/* objType */5]\n        ];\n}\n\nfunction isCar(obj) {\n  var match = obj[/* objType */5];\n  if (match !== 0) {\n    return false;\n  } else {\n    return true;\n  }\n}\n\nvar twoTurtleCount = [0];\n\nvar threeTurtleCount = [0];\n\nfunction makeLaneObject(param) {\n  var laneConfig = param[1];\n  var row = param[0];\n  var direction = laneConfig[/* velocity */0] > 0 ? /* Right */1 : /* Left */0;\n  var match = row !== 9 ? (\n      row !== 12 ? /* tuple */[\n          laneConfig[/* objType */3],\n          laneConfig[/* img */4]\n        ] : (twoTurtleCount[0] = twoTurtleCount[0] + 1 | 0, twoTurtleCount[0] % 4 === 0 ? /* tuple */[\n              /* DivingTurtles */2,\n              Utils.divingTwoTurtles\n            ] : /* tuple */[\n              laneConfig[/* objType */3],\n              Utils.twoTurtleImage\n            ])\n    ) : (threeTurtleCount[0] = threeTurtleCount[0] + 1 | 0, threeTurtleCount[0] % 4 === 0 ? /* tuple */[\n          /* DivingTurtles */2,\n          Utils.divingThreeTurtles\n        ] : /* tuple */[\n          laneConfig[/* objType */3],\n          Utils.threeTurtleImage\n        ]);\n  var img = match[1];\n  var tmp;\n  if (direction !== 1) {\n    if (direction !== 0) {\n      throw [\n            Caml_builtin_exceptions.assert_failure,\n            [\n              \"state.ml\",\n              155,\n              25\n            ]\n          ];\n    } else {\n      tmp = Utils.width;\n    }\n  } else {\n    tmp = -img[/* width */4] | 0;\n  }\n  return /* record */[\n          /* rect : record */[\n            /* x */tmp,\n            /* y */Utils.getYForRow(row),\n            /* width */Caml_int32.imul(img[/* width */4], img[/* number */6]),\n            /* height */img[/* height */5]\n          ],\n          /* frameIndex */0,\n          /* direction */direction,\n          /* img */img,\n          /* velocity */laneConfig[/* velocity */0],\n          /* objType */match[0]\n        ];\n}\n\nfunction getJitter() {\n  return Random.$$int(1000);\n}\n\nfunction getJitterFromNow() {\n  return (Date.now() | 0) + Random.$$int(1000) | 0;\n}\n\nvar laneConfig_000 = /* tuple */[\n  3,\n  /* record */[\n    /* velocity */-10,\n    /* objectsAtOnceIsh */4,\n    /* nextSpawnTime */getJitterFromNow(/* () */0),\n    /* objType : Car */0,\n    /* img */Utils.yellowCarImage\n  ]\n];\n\nvar laneConfig_001 = /* :: */[\n  /* tuple */[\n    4,\n    /* record */[\n      /* velocity */6,\n      /* objectsAtOnceIsh */3,\n      /* nextSpawnTime */getJitterFromNow(/* () */0),\n      /* objType : Car */0,\n      /* img */Utils.greenCarImage\n    ]\n  ],\n  /* :: */[\n    /* tuple */[\n      5,\n      /* record */[\n        /* velocity */-6,\n        /* objectsAtOnceIsh */4,\n        /* nextSpawnTime */getJitterFromNow(/* () */0),\n        /* objType : Car */0,\n        /* img */Utils.pinkCarImage\n      ]\n    ],\n    /* :: */[\n      /* tuple */[\n        6,\n        /* record */[\n          /* velocity */6,\n          /* objectsAtOnceIsh */2,\n          /* nextSpawnTime */getJitterFromNow(/* () */0),\n          /* objType : Car */0,\n          /* img */Utils.raceCarImage\n        ]\n      ],\n      /* :: */[\n        /* tuple */[\n          7,\n          /* record */[\n            /* velocity */-6,\n            /* objectsAtOnceIsh */3,\n            /* nextSpawnTime */getJitterFromNow(/* () */0),\n            /* objType : Car */0,\n            /* img */Utils.whiteTruckImage\n          ]\n        ],\n        /* :: */[\n          /* tuple */[\n            9,\n            /* record */[\n              /* velocity */-10,\n              /* objectsAtOnceIsh */2,\n              /* nextSpawnTime */getJitterFromNow(/* () */0),\n              /* objType : BasicFloater */1,\n              /* img */Utils.threeTurtleImage\n            ]\n          ],\n          /* :: */[\n            /* tuple */[\n              10,\n              /* record */[\n                /* velocity */6,\n                /* objectsAtOnceIsh */3,\n                /* nextSpawnTime */getJitterFromNow(/* () */0),\n                /* objType : BasicFloater */1,\n                /* img */Utils.smallLogImage\n              ]\n            ],\n            /* :: */[\n              /* tuple */[\n                11,\n                /* record */[\n                  /* velocity */4,\n                  /* objectsAtOnceIsh */1.7,\n                  /* nextSpawnTime */getJitterFromNow(/* () */0),\n                  /* objType : BasicFloater */1,\n                  /* img */Utils.bigLogImage\n                ]\n              ],\n              /* :: */[\n                /* tuple */[\n                  12,\n                  /* record */[\n                    /* velocity */-6,\n                    /* objectsAtOnceIsh */2,\n                    /* nextSpawnTime */getJitterFromNow(/* () */0),\n                    /* objType : BasicFloater */1,\n                    /* img */Utils.twoTurtleImage\n                  ]\n                ],\n                /* :: */[\n                  /* tuple */[\n                    13,\n                    /* record */[\n                      /* velocity */5,\n                      /* objectsAtOnceIsh */3,\n                      /* nextSpawnTime */getJitterFromNow(/* () */0),\n                      /* objType : BasicFloater */1,\n                      /* img */Utils.mediumLogImage\n                    ]\n                  ],\n                  /* [] */0\n                ]\n              ]\n            ]\n          ]\n        ]\n      ]\n    ]\n  ]\n];\n\nvar laneConfig = /* :: */[\n  laneConfig_000,\n  laneConfig_001\n];\n\nfunction updateFrog(param) {\n  var tmp = param[2];\n  var dt = param[1];\n  var world = param[0];\n  var frog = world[/* frog */0];\n  var floatedX;\n  try {\n    var floatieThing = List.find((function (obj) {\n            var match = obj[/* objType */5];\n            if (match !== 0) {\n              return true;\n            } else {\n              return false;\n            }\n          }), tmp[/* laneCollisions */0]);\n    floatedX = secondsPerWidthToPixels(floatieThing[/* velocity */4], dt);\n  }\n  catch (exn){\n    if (exn === Caml_builtin_exceptions.not_found) {\n      floatedX = 0;\n    } else {\n      throw exn;\n    }\n  }\n  var newFrog;\n  if (Utils.isSome(frog[/* leftInAnimation */2])) {\n    newFrog = world[/* frog */0];\n  } else if (frog[/* leftInJump */1] > 0) {\n    var distanceToTravel = Caml_primitive.caml_float_min(Utils.tileSize * (dt / 100), frog[/* leftInJump */1]);\n    var init = frog[/* rect */0];\n    var match = frog[/* direction */3];\n    var match$1 = frog[/* direction */3];\n    newFrog = /* record */[\n      /* rect : record */[\n        /* x */frog[/* rect */0][/* x */0] + distanceToTravel * (\n          match !== 1 ? (\n              match !== 0 ? 0 : -1\n            ) : 1\n        ) + floatedX,\n        /* y */frog[/* rect */0][/* y */1] + distanceToTravel * (\n          match$1 !== 2 ? (\n              match$1 >= 3 ? 1 : 0\n            ) : -1\n        ),\n        /* width */init[/* width */2],\n        /* height */init[/* height */3]\n      ],\n      /* leftInJump */frog[/* leftInJump */1] - distanceToTravel,\n      /* leftInAnimation */frog[/* leftInAnimation */2],\n      /* direction */frog[/* direction */3]\n    ];\n  } else {\n    var match$2 = pressedKeys[/* direction */0];\n    if (match$2) {\n      var direction = match$2[0];\n      var init$1 = frog[/* rect */0];\n      var nextRect_000 = /* x */frog[/* rect */0][/* x */0] + Utils.tileSize * (\n        direction !== 1 ? (\n            direction !== 0 ? 0 : -1\n          ) : 1\n      );\n      var nextRect_001 = /* y */frog[/* rect */0][/* y */1] + Utils.tileSize * (\n        direction !== 2 ? (\n            direction >= 3 ? 1 : 0\n          ) : -1\n      );\n      var nextRect_002 = /* width */init$1[/* width */2];\n      var nextRect_003 = /* height */init$1[/* height */3];\n      var nextRect = /* record */[\n        nextRect_000,\n        nextRect_001,\n        nextRect_002,\n        nextRect_003\n      ];\n      var isValid = Utils.isRectInBounds(nextRect);\n      newFrog = isValid ? /* record */[\n          /* rect */frog[/* rect */0],\n          /* leftInJump */Utils.tileSize,\n          /* leftInAnimation */frog[/* leftInAnimation */2],\n          /* direction */direction\n        ] : frog;\n    } else {\n      var init$2 = frog[/* rect */0];\n      newFrog = /* record */[\n        /* rect : record */[\n          /* x */frog[/* rect */0][/* x */0] + floatedX,\n          /* y */init$2[/* y */1],\n          /* width */init$2[/* width */2],\n          /* height */init$2[/* height */3]\n        ],\n        /* leftInJump */frog[/* leftInJump */1],\n        /* leftInAnimation */frog[/* leftInAnimation */2],\n        /* direction */frog[/* direction */3]\n      ];\n    }\n  }\n  return /* tuple */[\n          /* record */[\n            /* frog */newFrog,\n            /* keys */world[/* keys */1],\n            /* objects */world[/* objects */2],\n            /* state */world[/* state */3],\n            /* lives */world[/* lives */4],\n            /* score */world[/* score */5],\n            /* highscore */world[/* highscore */6],\n            /* maxRow */world[/* maxRow */7],\n            /* timer */world[/* timer */8],\n            /* endzone */world[/* endzone */9]\n          ],\n          dt,\n          tmp\n        ];\n}\n\nfunction rejectUnderWaterTurtles(laneObjects) {\n  return List.filter((function (obj) {\n                  if (obj[/* objType */5] !== /* DivingTurtles */2) {\n                    return true;\n                  } else {\n                    return Math.floor(obj[/* frameIndex */1] / 1000) !== 5;\n                  }\n                }))(laneObjects);\n}\n\nfunction handleDeathCheck(tmp) {\n  var laneCollisions = tmp[2][/* laneCollisions */0];\n  var dt = tmp[1];\n  var world = tmp[0];\n  var hasCarCollision = List.exists(isCar, laneCollisions);\n  var isInWater = List.length(rejectUnderWaterTurtles(laneCollisions)) === 0 && Utils.getRowForY(world[/* frog */0][/* rect */0][/* y */1] | 0) > 7 && world[/* frog */0][/* leftInJump */1] === 0;\n  var isOutOfBounds = Utils.isRectOutOfBounds(world[/* frog */0][/* rect */0]);\n  var timerIsUp = world[/* timer */8] <= 0;\n  var isDead = hasCarCollision || isInWater || timerIsUp || isOutOfBounds;\n  var match = world[/* frog */0][/* leftInAnimation */2];\n  var match$1 = world[/* lives */4];\n  var newWorld;\n  var exit = 0;\n  if (isDead) {\n    if (match) {\n      exit = 1;\n    } else {\n      var init = world[/* frog */0];\n      newWorld = /* record */[\n        /* frog : record */[\n          /* rect */init[/* rect */0],\n          /* leftInJump */init[/* leftInJump */1],\n          /* leftInAnimation : Some */[1000],\n          /* direction */init[/* direction */3]\n        ],\n        /* keys */world[/* keys */1],\n        /* objects */world[/* objects */2],\n        /* state */world[/* state */3],\n        /* lives */world[/* lives */4],\n        /* score */world[/* score */5],\n        /* highscore */world[/* highscore */6],\n        /* maxRow */world[/* maxRow */7],\n        /* timer */world[/* timer */8],\n        /* endzone */world[/* endzone */9]\n      ];\n    }\n  } else if (match) {\n    exit = 1;\n  } else {\n    newWorld = world;\n  }\n  if (exit === 1) {\n    var n = match[0];\n    if (n !== 0) {\n      var init$1 = world[/* frog */0];\n      newWorld = /* record */[\n        /* frog : record */[\n          /* rect */init$1[/* rect */0],\n          /* leftInJump */init$1[/* leftInJump */1],\n          /* leftInAnimation : Some */[Caml_primitive.caml_int_max(0, n - dt | 0)],\n          /* direction */init$1[/* direction */3]\n        ],\n        /* keys */world[/* keys */1],\n        /* objects */world[/* objects */2],\n        /* state */world[/* state */3],\n        /* lives */world[/* lives */4],\n        /* score */world[/* score */5],\n        /* highscore */world[/* highscore */6],\n        /* maxRow */world[/* maxRow */7],\n        /* timer */world[/* timer */8],\n        /* endzone */world[/* endzone */9]\n      ];\n    } else {\n      newWorld = match$1 !== 1 ? /* record */[\n          startWorld_000,\n          /* keys */world[/* keys */1],\n          /* objects */world[/* objects */2],\n          /* state */world[/* state */3],\n          /* lives */match$1 - 1 | 0,\n          /* score */world[/* score */5],\n          /* highscore */world[/* highscore */6],\n          /* maxRow */world[/* maxRow */7],\n          /* timer */30000,\n          /* endzone */world[/* endzone */9]\n        ] : /* record */[\n          /* frog */world[/* frog */0],\n          /* keys */world[/* keys */1],\n          /* objects */world[/* objects */2],\n          /* state : Lost */3,\n          /* lives */world[/* lives */4],\n          /* score */world[/* score */5],\n          /* highscore */world[/* highscore */6],\n          /* maxRow */world[/* maxRow */7],\n          /* timer */world[/* timer */8],\n          /* endzone */world[/* endzone */9]\n        ];\n    }\n  }\n  return /* tuple */[\n          newWorld,\n          dt,\n          tmp\n        ];\n}\n\nfunction handleGameWinCheck(param) {\n  var tmp = param[2];\n  var dt = param[1];\n  var world = param[0];\n  var allGoalsFilled = !List.exists((function (param) {\n          return !param[1];\n        }), world[/* endzone */9]);\n  if (allGoalsFilled) {\n    return /* tuple */[\n            /* record */[\n              /* frog */world[/* frog */0],\n              /* keys */world[/* keys */1],\n              /* objects */world[/* objects */2],\n              /* state : Won */2,\n              /* lives */world[/* lives */4],\n              /* score */world[/* score */5],\n              /* highscore */world[/* highscore */6],\n              /* maxRow */world[/* maxRow */7],\n              /* timer */world[/* timer */8],\n              /* endzone */world[/* endzone */9]\n            ],\n            dt,\n            tmp\n          ];\n  } else {\n    return /* tuple */[\n            world,\n            dt,\n            tmp\n          ];\n  }\n}\n\nfunction handleEndzoneCheck(param) {\n  var tmp = param[2];\n  var dt = param[1];\n  var world = param[0];\n  var intersectsWithFrog = function (param) {\n    return Utils.intersects(world[/* frog */0][/* rect */0], param[1]);\n  };\n  var endzoneCollision = Utils.find_opt(intersectsWithFrog, endzoneRects);\n  if (endzoneCollision) {\n    var matchedI = endzoneCollision[0][0];\n    var alreadyFilled = List.assoc(matchedI, world[/* endzone */9]);\n    var endzone = List.map((function (param) {\n            var i = param[0];\n            return /* tuple */[\n                    i,\n                    param[1] || matchedI === i\n                  ];\n          }), world[/* endzone */9]);\n    var newWorld = alreadyFilled ? world : /* record */[\n        startWorld_000,\n        /* keys */world[/* keys */1],\n        /* objects */world[/* objects */2],\n        /* state */world[/* state */3],\n        /* lives */world[/* lives */4],\n        /* score */(world[/* score */5] + 200 | 0) + (world[/* timer */8] / 1000 | 0) | 0,\n        /* highscore */world[/* highscore */6],\n        /* maxRow */1,\n        /* timer */30000,\n        /* endzone */endzone\n      ];\n    return /* tuple */[\n            newWorld,\n            dt,\n            tmp\n          ];\n  } else {\n    return /* tuple */[\n            world,\n            dt,\n            tmp\n          ];\n  }\n}\n\nfunction findCollisions(param) {\n  var world = param[0];\n  var collisions = List.filter((function (obj) {\n            return Utils.intersects(obj[/* rect */0], world[/* frog */0][/* rect */0]);\n          }))(world[/* objects */2]);\n  var newTmp_001 = /* now */param[2][/* now */1];\n  var newTmp = /* record */[\n    /* laneCollisions */collisions,\n    newTmp_001\n  ];\n  return /* tuple */[\n          world,\n          param[1],\n          newTmp\n        ];\n}\n\nfunction handleScoreUpdate(param) {\n  var world = param[0];\n  var newFrogRow = Utils.getRowForY(world[/* frog */0][/* rect */0][/* y */1] | 0);\n  var score = world[/* score */5] + (\n    newFrogRow > world[/* maxRow */7] ? 10 : 0\n  ) | 0;\n  var newWorld_000 = /* frog */world[/* frog */0];\n  var newWorld_001 = /* keys */world[/* keys */1];\n  var newWorld_002 = /* objects */world[/* objects */2];\n  var newWorld_003 = /* state */world[/* state */3];\n  var newWorld_004 = /* lives */world[/* lives */4];\n  var newWorld_006 = /* highscore */world[/* highscore */6];\n  var newWorld_007 = /* maxRow */Caml_primitive.caml_int_max(newFrogRow, world[/* maxRow */7]);\n  var newWorld_008 = /* timer */world[/* timer */8];\n  var newWorld_009 = /* endzone */world[/* endzone */9];\n  var newWorld = /* record */[\n    newWorld_000,\n    newWorld_001,\n    newWorld_002,\n    newWorld_003,\n    newWorld_004,\n    /* score */score,\n    newWorld_006,\n    newWorld_007,\n    newWorld_008,\n    newWorld_009\n  ];\n  return /* tuple */[\n          newWorld,\n          param[1],\n          param[2]\n        ];\n}\n\nfunction handleHighScoreCheck(param) {\n  var world = param[0];\n  var highscore = world[/* score */5] > world[/* highscore */6] ? (localStorage.setItem(\"highscore\", String(world[/* score */5])), world[/* score */5]) : world[/* highscore */6];\n  var newWorld_000 = /* frog */world[/* frog */0];\n  var newWorld_001 = /* keys */world[/* keys */1];\n  var newWorld_002 = /* objects */world[/* objects */2];\n  var newWorld_003 = /* state */world[/* state */3];\n  var newWorld_004 = /* lives */world[/* lives */4];\n  var newWorld_005 = /* score */world[/* score */5];\n  var newWorld_007 = /* maxRow */world[/* maxRow */7];\n  var newWorld_008 = /* timer */world[/* timer */8];\n  var newWorld_009 = /* endzone */world[/* endzone */9];\n  var newWorld = /* record */[\n    newWorld_000,\n    newWorld_001,\n    newWorld_002,\n    newWorld_003,\n    newWorld_004,\n    newWorld_005,\n    /* highscore */highscore,\n    newWorld_007,\n    newWorld_008,\n    newWorld_009\n  ];\n  return /* tuple */[\n          newWorld,\n          param[1],\n          param[2]\n        ];\n}\n\nfunction shrinkTimer(param) {\n  var dt = param[1];\n  var world = param[0];\n  var timer = world[/* timer */8] - dt | 0;\n  var newWorld_000 = /* frog */world[/* frog */0];\n  var newWorld_001 = /* keys */world[/* keys */1];\n  var newWorld_002 = /* objects */world[/* objects */2];\n  var newWorld_003 = /* state */world[/* state */3];\n  var newWorld_004 = /* lives */world[/* lives */4];\n  var newWorld_005 = /* score */world[/* score */5];\n  var newWorld_006 = /* highscore */world[/* highscore */6];\n  var newWorld_007 = /* maxRow */world[/* maxRow */7];\n  var newWorld_009 = /* endzone */world[/* endzone */9];\n  var newWorld = /* record */[\n    newWorld_000,\n    newWorld_001,\n    newWorld_002,\n    newWorld_003,\n    newWorld_004,\n    newWorld_005,\n    newWorld_006,\n    newWorld_007,\n    /* timer */timer,\n    newWorld_009\n  ];\n  return /* tuple */[\n          newWorld,\n          dt,\n          param[2]\n        ];\n}\n\nfunction updateLaneObjects(param) {\n  var tmp = param[2];\n  var dt = param[1];\n  var world = param[0];\n  var filterOutOfBounds = List.filter((function (obj) {\n          return Utils.isRectInBounds(obj[/* rect */0]);\n        }));\n  var movedLaneObjects = Curry._1(filterOutOfBounds, List.map((function (o) {\n              return updateObj(o, dt);\n            }), world[/* objects */2]));\n  var spawnedLaneObjects = Utils.deoptionalize(List.map((function (param) {\n              var cfg = param[1];\n              if (tmp[/* now */1] > cfg[/* nextSpawnTime */2]) {\n                cfg[/* nextSpawnTime */2] = getJitterFromNow(/* () */0) + (Math.abs(cfg[/* velocity */0]) * 1000 / cfg[/* objectsAtOnceIsh */1] | 0) | 0;\n                return /* Some */[makeLaneObject(/* tuple */[\n                              param[0],\n                              cfg\n                            ])];\n              } else {\n                return /* None */0;\n              }\n            }), laneConfig));\n  var objects = Pervasives.$at(movedLaneObjects, spawnedLaneObjects);\n  var newWorld_000 = /* frog */world[/* frog */0];\n  var newWorld_001 = /* keys */world[/* keys */1];\n  var newWorld_003 = /* state */world[/* state */3];\n  var newWorld_004 = /* lives */world[/* lives */4];\n  var newWorld_005 = /* score */world[/* score */5];\n  var newWorld_006 = /* highscore */world[/* highscore */6];\n  var newWorld_007 = /* maxRow */world[/* maxRow */7];\n  var newWorld_008 = /* timer */world[/* timer */8];\n  var newWorld_009 = /* endzone */world[/* endzone */9];\n  var newWorld = /* record */[\n    newWorld_000,\n    newWorld_001,\n    /* objects */objects,\n    newWorld_003,\n    newWorld_004,\n    newWorld_005,\n    newWorld_006,\n    newWorld_007,\n    newWorld_008,\n    newWorld_009\n  ];\n  return /* tuple */[\n          newWorld,\n          dt,\n          tmp\n        ];\n}\n\nfunction getWorld(param) {\n  return param[0];\n}\n\nfunction stepWorld(world, now, dt) {\n  return getWorld(handleHighScoreCheck(handleScoreUpdate(handleGameWinCheck(handleEndzoneCheck(handleDeathCheck(shrinkTimer(updateLaneObjects(updateFrog(findCollisions(/* tuple */[\n                                                  world,\n                                                  dt,\n                                                  /* record */[\n                                                    /* laneCollisions : [] */0,\n                                                    /* now */now\n                                                  ]\n                                                ]))))))))));\n}\n\nvar frogAnimationLength = 1000;\n\nexports.savedHighScore = savedHighScore;\nexports.pressedKeys = pressedKeys;\nexports.keydown = keydown;\nexports.xDown = xDown;\nexports.yDown = yDown;\nexports.handleTouchStart = handleTouchStart;\nexports.handleTouchMove = handleTouchMove;\nexports.frogAnimationLength = frogAnimationLength;\nexports.startWorld = startWorld;\nexports.endzoneRects = endzoneRects;\nexports.secondsPerWidthToPixels = secondsPerWidthToPixels;\nexports.updateObj = updateObj;\nexports.isCar = isCar;\nexports.twoTurtleCount = twoTurtleCount;\nexports.threeTurtleCount = threeTurtleCount;\nexports.makeLaneObject = makeLaneObject;\nexports.getJitter = getJitter;\nexports.getJitterFromNow = getJitterFromNow;\nexports.laneConfig = laneConfig;\nexports.updateFrog = updateFrog;\nexports.rejectUnderWaterTurtles = rejectUnderWaterTurtles;\nexports.handleDeathCheck = handleDeathCheck;\nexports.handleGameWinCheck = handleGameWinCheck;\nexports.handleEndzoneCheck = handleEndzoneCheck;\nexports.findCollisions = findCollisions;\nexports.handleScoreUpdate = handleScoreUpdate;\nexports.handleHighScoreCheck = handleHighScoreCheck;\nexports.shrinkTimer = shrinkTimer;\nexports.updateLaneObjects = updateLaneObjects;\nexports.getWorld = getWorld;\nexports.stepWorld = stepWorld;\n/* match Not a pure module */\n","'use strict';\n\nvar Curry = require(\"bs-platform/lib/js/curry.js\");\nvar Caml_builtin_exceptions = require(\"bs-platform/lib/js/caml_builtin_exceptions.js\");\n\nvar Composite = /* module */[\n  /* sourceOver */\"source-over\",\n  /* sourceIn */\"source-in\",\n  /* sourceOut */\"source-out\",\n  /* sourceAtop */\"source-atop\",\n  /* destinationOver */\"destination-over\",\n  /* destinationIn */\"destination-in\",\n  /* destinationOut */\"destination-out\",\n  /* destinationAtop */\"destination-atop\",\n  /* lighter */\"lighter\",\n  /* copy */\"copy\",\n  /* xor */\"xor\"\n];\n\nvar LineCap = /* module */[\n  /* butt */\"butt\",\n  /* round */\"round\",\n  /* square */\"square\"\n];\n\nvar LineJoin = /* module */[\n  /* round */\"round\",\n  /* bevel */\"bevel\",\n  /* miter */\"miter\"\n];\n\nfunction setStrokeStyle(ctx, _, v) {\n  ctx.strokeStyle = v;\n  return /* () */0;\n}\n\nfunction setFillStyle(ctx, _, v) {\n  ctx.fillStyle = v;\n  return /* () */0;\n}\n\nfunction reifyStyle(x) {\n  var instanceOf = (function(x,y) {return +(x instanceof y)});\n  var tmp;\n  if (typeof x === \"string\") {\n    tmp = /* String */0;\n  } else if (Curry._2(instanceOf, x, CanvasGradient)) {\n    tmp = /* Gradient */1;\n  } else if (Curry._2(instanceOf, x, CanvasPattern)) {\n    tmp = /* Pattern */2;\n  } else {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Unknown canvas style kind. Known values are: String, CanvasGradient, CanvasPattern\"\n        ];\n  }\n  return /* tuple */[\n          tmp,\n          x\n        ];\n}\n\nfunction fillStyle(ctx) {\n  return reifyStyle(ctx.fillStyle);\n}\n\nfunction strokeStyle(ctx) {\n  return reifyStyle(ctx.strokeStyle);\n}\n\nexports.Composite = Composite;\nexports.LineCap = LineCap;\nexports.LineJoin = LineJoin;\nexports.setStrokeStyle = setStrokeStyle;\nexports.setFillStyle = setFillStyle;\nexports.reifyStyle = reifyStyle;\nexports.fillStyle = fillStyle;\nexports.strokeStyle = strokeStyle;\n/* No side effect */\n","// Generated by BUCKLESCRIPT VERSION 3.0.0, PLEASE EDIT WITH CARE\n'use strict';\n\nvar List = require(\"bs-platform/lib/js/list.js\");\nvar State = require(\"./state.bs.js\");\nvar Utils = require(\"./utils.bs.js\");\nvar Caml_int32 = require(\"bs-platform/lib/js/caml_int32.js\");\nvar Canvas2dRe = require(\"bs-webapi/src/canvas/Canvas2dRe.js\");\nvar Caml_primitive = require(\"bs-platform/lib/js/caml_primitive.js\");\n\nvar windowHeight = window.innerHeight;\n\nvar windowWidth = window.innerWidth;\n\nfunction drawImage(ctx, image, sourceX, sourceY, sourceWidth, sourceHeight, dx, dy, dWidth, dHeight) {\n  ctx.drawImage(image, sourceX, sourceY, sourceWidth, sourceHeight, dx, dy, dWidth, dHeight);\n  return /* () */0;\n}\n\nfunction drawLaneObject(ctx, sprite) {\n  var frameCalc = Math.floor(sprite[/* frameIndex */1] / 1000);\n  var img = sprite[/* img */3];\n  var startX = img[/* xStart */0] + frameCalc * img[/* width */4];\n  return List.iter((function (i) {\n                return drawImage(ctx, Utils.spriteSheet, startX, img[/* yStart */1], img[/* width */4], img[/* height */5], (sprite[/* rect */0][/* x */0] + Caml_int32.imul(img[/* width */4], i)) * 1, sprite[/* rect */0][/* y */1], 1 * img[/* width */4], 1 * Utils.tileSize);\n              }), Utils.$less$neg$great(0, img[/* number */6] - 1 | 0));\n}\n\nfunction drawDyingFrog(ctx, rect, leftInAnimation) {\n  var row = Utils.getRowForY(rect[/* y */1] | 0);\n  var y = row > 7 && row < 13 ? 227 : 276;\n  var frame = Caml_primitive.caml_int_min(3, 4 - (Math.ceil(leftInAnimation / (State.frogAnimationLength / 4)) | 0) | 0);\n  var startX = List.nth(/* :: */[\n        230,\n        /* :: */[\n          275,\n          /* :: */[\n            322,\n            /* :: */[\n              358,\n              /* [] */0\n            ]\n          ]\n        ]\n      ], frame);\n  return drawImage(ctx, Utils.spriteSheet, startX, y, 32, 36, (rect[/* x */0] - 10) * 1, rect[/* y */1] - 8, 1 * 32, 1 * 36);\n}\n\nfunction drawFrog(ctx, frog) {\n  var match = frog[/* leftInAnimation */2];\n  if (match) {\n    return drawDyingFrog(ctx, frog[/* rect */0], match[0]);\n  } else {\n    var match$1 = frog[/* direction */3];\n    var img;\n    switch (match$1) {\n      case 0 : \n          img = Utils.frogLeft;\n          break;\n      case 1 : \n          img = Utils.frogRight;\n          break;\n      case 2 : \n          img = Utils.frogUp;\n          break;\n      case 3 : \n          img = Utils.frogDown;\n          break;\n      \n    }\n    var startX = img[/* xStart */0] + (\n      frog[/* leftInJump */1] === 0 ? 0 : img[/* width */4] + 5 | 0\n    ) | 0;\n    return drawImage(ctx, Utils.spriteSheet, startX, img[/* yStart */1], img[/* width */4], img[/* height */5], (frog[/* rect */0][/* x */0] - 10) * 1, frog[/* rect */0][/* y */1], 1 * img[/* width */4], 1 * img[/* height */5]);\n  }\n}\n\nfunction drawStartScreen(ctx) {\n  Canvas2dRe.setFillStyle(ctx, /* String */0, \"white\");\n  ctx.fillRect(0, 0, Utils.width, Utils.height);\n  Canvas2dRe.setFillStyle(ctx, /* String */0, \"black\");\n  ctx.font = \"60px/1 sans-serif\";\n  ctx.fillText(\"Frogger\", 80, 200, undefined);\n  ctx.font = \"20px/1 sans-serif\";\n  ctx.fillText(\"Press any key to start the game\", 80, 280, undefined);\n  return /* () */0;\n}\n\nfunction drawWinScreen(ctx, world) {\n  Canvas2dRe.setFillStyle(ctx, /* String */0, \"white\");\n  ctx.fillRect(0, 0, Utils.width, Utils.height);\n  Canvas2dRe.setFillStyle(ctx, /* String */0, \"black\");\n  ctx.font = \"60px/1 sans-serif\";\n  ctx.fillText(\"You Win!\", 80, 150, undefined);\n  ctx.font = \"20px/1 sans-serif\";\n  ctx.fillText(\"Score: \" + String(world[/* score */5]), 50, 380, undefined);\n  return /* () */0;\n}\n\nfunction drawLoseScreen(ctx, world) {\n  Canvas2dRe.setFillStyle(ctx, /* String */0, \"white\");\n  ctx.fillRect(0, 0, Utils.width, Utils.height);\n  Canvas2dRe.setFillStyle(ctx, /* String */0, \"black\");\n  ctx.font = \"60px/1 sans-serif\";\n  ctx.fillText(\"You Lose\", 80, 200, undefined);\n  ctx.font = \"20px/1 sans-serif\";\n  ctx.fillText(\"Press any key to start another game\", 50, 280, undefined);\n  ctx.fillText(\"Score: \" + String(world[/* score */5]), 50, 380, undefined);\n  return /* () */0;\n}\n\nfunction drawGoal(ctx) {\n  var y = Utils.getYForRow(15);\n  return drawImage(ctx, Utils.spriteSheet, 0, 62, 398, 45, 0, y + Utils.halfTileSize | 0, 1 * Utils.width, 1 * (Utils.tileSize + Utils.halfTileSize | 0));\n}\n\nfunction drawGrass(ctx, y) {\n  return drawImage(ctx, Utils.spriteSheet, 0, 120, 398, 33, 0, y, 1 * Utils.width, 1 * Utils.tileSize);\n}\n\nfunction drawCars(ctx, _cars) {\n  while(true) {\n    var cars = _cars;\n    if (cars) {\n      drawLaneObject(ctx, cars[0]);\n      _cars = cars[1];\n      continue ;\n    } else {\n      return /* () */0;\n    }\n  };\n}\n\nfunction drawLives(ctx, world) {\n  Canvas2dRe.setFillStyle(ctx, /* String */0, \"red\");\n  return List.iter((function (i) {\n                return drawImage(ctx, Utils.lifeSprite, 0, 0, 34, 40, 10 + Caml_int32.imul(20, i) | 0, Utils.getYForRow(1), 28, 32);\n              }), Utils.$less$neg$great(0, world[/* lives */4] - 2 | 0));\n}\n\nfunction drawTimer(ctx, world) {\n  Canvas2dRe.setFillStyle(ctx, /* String */0, \"rgb(49,220,39)\");\n  var pixels = world[/* timer */8] / State.startWorld[/* timer */8] * (Utils.width / 2.5) | 0;\n  ctx.fillRect(((Utils.width - (Utils.tileSize << 1) | 0) - pixels | 0) - 3 | 0, Utils.getYForRow(1) + 10, pixels, 15);\n  Canvas2dRe.setFillStyle(ctx, /* String */0, \"rgb(251,249,55)\");\n  ctx.fillText(\"TIME\", Utils.width - (Utils.tileSize << 1) | 0, Utils.getYForRow(1) + 25, undefined);\n  return /* () */0;\n}\n\nfunction drawScore(ctx, world) {\n  var scoreText = Utils.padWithZeros(String(world[/* score */5]), 5);\n  var highscoreText = Utils.padWithZeros(String(world[/* highscore */6]), 5);\n  Canvas2dRe.setFillStyle(ctx, /* String */0, \"rgb(222,222,246)\");\n  ctx.fillText(\"1-UP\", (Utils.tileSize << 1), (Utils.getYForRow(16) + Utils.halfTileSize | 0) + 3 | 0, undefined);\n  ctx.fillText(\"HI-SCORE\", Caml_int32.imul(Utils.tileSize, 5), (Utils.getYForRow(16) + Utils.halfTileSize | 0) + 3 | 0, undefined);\n  Canvas2dRe.setFillStyle(ctx, /* String */0, \"rgb(252,13,27)\");\n  ctx.fillText(scoreText, Utils.tileSize + Utils.halfTileSize | 0, Utils.getYForRow(15) + 10, undefined);\n  ctx.fillText(highscoreText, Caml_int32.imul(Utils.tileSize, 5) + 10 | 0, Utils.getYForRow(15) + 10, undefined);\n  return /* () */0;\n}\n\nfunction drawCompletedEndzones(ctx, world) {\n  return List.iter((function (param) {\n                if (List.assoc(param[0], world[/* endzone */9])) {\n                  var x = param[1][/* x */0];\n                  return drawImage(ctx, Utils.goalSprite, 0, 0, 34, 40, x, (Utils.tileSize << 1), 28, 32);\n                } else {\n                  return 0;\n                }\n              }), State.endzoneRects);\n}\n\nfunction drawBoundingBoxes(ctx, world) {\n  var frogBoxColor = [\"red\"];\n  List.iter((function (param) {\n          var rect = param[/* rect */0];\n          var color = Utils.intersects(world[/* frog */0][/* rect */0], rect) ? (frogBoxColor[0] = \"blue\", \"blue\") : \"red\";\n          Canvas2dRe.setStrokeStyle(ctx, /* String */0, color);\n          ctx.strokeRect(rect[/* x */0], rect[/* y */1], rect[/* width */2], rect[/* height */3]);\n          return /* () */0;\n        }), world[/* objects */2]);\n  var rect = world[/* frog */0][/* rect */0];\n  Canvas2dRe.setStrokeStyle(ctx, /* String */0, frogBoxColor[0]);\n  ctx.strokeRect(rect[/* x */0], rect[/* y */1], rect[/* width */2], rect[/* height */3]);\n  return /* () */0;\n}\n\nfunction drawGrid(ctx) {\n  Canvas2dRe.setStrokeStyle(ctx, /* String */0, \"red\");\n  List.iter((function (i) {\n          ctx.beginPath();\n          ctx.moveTo(Caml_int32.imul(i, Utils.tileSize), 0);\n          ctx.lineTo(Caml_int32.imul(i, Utils.tileSize), Utils.height);\n          ctx.stroke();\n          return /* () */0;\n        }), Utils.$less$neg$great(0, Utils.cols));\n  return List.iter((function (i) {\n                ctx.beginPath();\n                ctx.moveTo(0, Caml_int32.imul(i, Utils.tileSize));\n                ctx.lineTo(Utils.width, Caml_int32.imul(i, Utils.tileSize));\n                ctx.stroke();\n                return /* () */0;\n              }), Utils.$less$neg$great(0, Utils.rows));\n}\n\nfunction drawBackground(ctx) {\n  Canvas2dRe.setFillStyle(ctx, /* String */0, \"rgb(1,4,69)\");\n  ctx.fillRect(0, 0, Utils.width, Utils.height);\n  Canvas2dRe.setFillStyle(ctx, /* String */0, \"black\");\n  ctx.fillRect(0, Utils.getYForRow(7), Utils.width, Utils.height);\n  return /* () */0;\n}\n\nfunction render(ctx, world) {\n  drawBackground(ctx);\n  if (State.pressedKeys[/* grid */2]) {\n    drawGrid(ctx);\n  }\n  if (State.pressedKeys[/* bbox */1]) {\n    drawBoundingBoxes(ctx, world);\n  }\n  drawGoal(ctx);\n  drawGrass(ctx, Utils.getYForRow(2));\n  drawGrass(ctx, Utils.getYForRow(8));\n  drawLives(ctx, world);\n  drawTimer(ctx, world);\n  drawScore(ctx, world);\n  drawCars(ctx, world[/* objects */2]);\n  drawFrog(ctx, world[/* frog */0]);\n  return drawCompletedEndzones(ctx, world);\n}\n\nvar magnification = 1;\n\nexports.windowHeight = windowHeight;\nexports.windowWidth = windowWidth;\nexports.magnification = magnification;\nexports.drawImage = drawImage;\nexports.drawLaneObject = drawLaneObject;\nexports.drawDyingFrog = drawDyingFrog;\nexports.drawFrog = drawFrog;\nexports.drawStartScreen = drawStartScreen;\nexports.drawWinScreen = drawWinScreen;\nexports.drawLoseScreen = drawLoseScreen;\nexports.drawGoal = drawGoal;\nexports.drawGrass = drawGrass;\nexports.drawCars = drawCars;\nexports.drawLives = drawLives;\nexports.drawTimer = drawTimer;\nexports.drawScore = drawScore;\nexports.drawCompletedEndzones = drawCompletedEndzones;\nexports.drawBoundingBoxes = drawBoundingBoxes;\nexports.drawGrid = drawGrid;\nexports.drawBackground = drawBackground;\nexports.render = render;\n/* windowHeight Not a pure module */\n","// Generated by BUCKLESCRIPT VERSION 3.0.0, PLEASE EDIT WITH CARE\n'use strict';\n\nvar State = require(\"./state.bs.js\");\nvar Utils = require(\"./utils.bs.js\");\nvar Render = require(\"./render.bs.js\");\nvar Pervasives = require(\"bs-platform/lib/js/pervasives.js\");\n\nvar lastTime = [Date.now() | 0];\n\nfunction gameloop(ctx, world) {\n  var now = Date.now() | 0;\n  var dt = now - lastTime[0] | 0;\n  var match = world[/* state */3];\n  switch (match) {\n    case 0 : \n        Render.drawStartScreen(ctx);\n        break;\n    case 1 : \n        Render.render(ctx, world);\n        break;\n    case 2 : \n        Render.drawWinScreen(ctx, world);\n        break;\n    case 3 : \n        Render.drawLoseScreen(ctx, world);\n        break;\n    \n  }\n  var match$1 = world[/* state */3];\n  var match$2 = State.pressedKeys[/* direction */0];\n  var nextWorld = match$1 !== 1 ? (\n      match$2 ? /* record */[\n          /* frog */State.startWorld[/* frog */0],\n          /* keys */State.startWorld[/* keys */1],\n          /* objects */State.startWorld[/* objects */2],\n          /* state : Playing */1,\n          /* lives */State.startWorld[/* lives */4],\n          /* score */State.startWorld[/* score */5],\n          /* highscore */world[/* highscore */6],\n          /* maxRow */State.startWorld[/* maxRow */7],\n          /* timer */State.startWorld[/* timer */8],\n          /* endzone */State.startWorld[/* endzone */9]\n        ] : world\n    ) : State.stepWorld(world, now, dt);\n  lastTime[0] = Date.now() | 0;\n  State.pressedKeys[/* direction */0] = /* None */0;\n  requestAnimationFrame((function () {\n          return gameloop(ctx, nextWorld);\n        }));\n  return /* () */0;\n}\n\nfunction load() {\n  var match = document.getElementById(\"canvas\");\n  var canvas = (match == null) ? (console.log(\"cant find canvas canvas \\n\"), Pervasives.failwith(\"fail\")) : match;\n  canvas.setAttribute(\"height\", String(Utils.height) + \"px\");\n  canvas.setAttribute(\"width\", String(Utils.width) + \"px\");\n  canvas.setAttribute(\"style\", \"max-width: \" + (String(Utils.width) + (\"px; max-height: \" + (String(Utils.height) + \"px\"))));\n  var context = canvas.getContext(\"2d\");\n  return gameloop(context, State.startWorld);\n}\n\nwindow.onload = load;\n\nexports.lastTime = lastTime;\nexports.gameloop = gameloop;\nexports.load = load;\n/* lastTime Not a pure module */\n"]}